{"version":3,"file":"gridrefutils.js","sources":["../node_modules/core-js/modules/es.regexp.exec.js","../node_modules/core-js/modules/es.string.replace.js","../node_modules/core-js/modules/es.regexp.test.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/GridRef/GridRef.js","../node_modules/core-js/modules/es.object.to-string.js","../node_modules/core-js/modules/es.reflect.to-string-tag.js","../node_modules/core-js/modules/es.reflect.construct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/core-js/modules/es.regexp.to-string.js","../node_modules/core-js/modules/es.math.log10.js","../node_modules/core-js/modules/es.array.slice.js","../src/constants.js","../src/LatLng/LatLng.js","../src/LatLng/LatLngWGS84.js","../src/LatLng/LatLngGB.js","../src/LatLng/LatLngCI.js","../src/LatLng/LatLngIE.js","../src/GridCoords/GridCoords.js","../src/GridCoords/GridCoordsCI.js","../src/GridCoords/GridCoordsGB.js","../src/GridRef/GridRefCI.js","../node_modules/core-js/modules/es.string.match.js","../src/GridRef/GridRefGB.js","../src/GridCoords/GridCoordsIE.js","../src/GridRef/GridRefIE.js","../src/GridRef/parser.js","../src/wrappers/GB.js","../src/wrappers/IE.js","../src/wrappers/CI.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar stringSlice = uncurryThis(''.slice);\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? call(replacer, searchValue, O, replaceValue)\n        : call(nativeReplace, toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue == 'string' &&\n        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&\n        stringIndexOf(replaceValue, '$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        push(results, result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = concat([matched], captures, position, S);\n          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);\n          var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + stringSlice(S, nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar DELEGATES_TO_EXEC = function () {\n  var execCalled = false;\n  var re = /[ac]/;\n  re.exec = function () {\n    execCalled = true;\n    return /./.exec.apply(this, arguments);\n  };\n  return re.test('abc') === true && execCalled;\n}();\n\nvar Error = global.Error;\nvar un$Test = uncurryThis(/./.test);\n\n// `RegExp.prototype.test` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.test\n$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {\n  test: function (str) {\n    var exec = this.exec;\n    if (!isCallable(exec)) return un$Test(this, str);\n    var result = call(exec, this, str);\n    if (result !== null && !isObject(result)) {\n      throw new Error('RegExp exec method returned something other than an Object or null');\n    }\n    return !!result;\n  }\n});\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\r\nexport class GridRef {\r\n\r\n  /**\r\n   * x,y offsets (in metres) for tetrad letter codes\r\n   * @type {Object.<string,Array.<number>>}\r\n   */\r\n  static tetradOffsets = {\r\n    E: [0, 8000], J: [2000, 8000], P: [4000, 8000], U: [6000, 8000], Z: [8000, 8000],\r\n    D: [0, 6000], I: [2000, 6000], N: [4000, 6000], T: [6000, 6000], Y: [8000, 6000],\r\n    C: [0, 4000], H: [2000, 4000], M: [4000, 4000], S: [6000, 4000], X: [8000, 4000],\r\n    B: [0, 2000], G: [2000, 2000], L: [4000, 2000], R: [6000, 2000], W: [8000, 2000],\r\n    A: [0, 0], F: [2000, 0], K: [4000, 0], Q: [6000, 0], V: [8000, 0]\r\n  };\r\n\r\n  /**\r\n   * x,y offsets (in metres) for quadrant codes\r\n   * @type {{SE: number[], SW: number[], NE: number[], NW: number[]}}\r\n   */\r\n  static quadrantOffsets = {\r\n    NW: [0, 5000],\r\n    NE: [5000, 5000],\r\n    SW: [0, 0],\r\n    SE: [5000, 0]\r\n  };\r\n\r\n  /**\r\n   * numerical mapping of letters to numbers\r\n   * 'I' is omitted\r\n   *\r\n   * @type {{A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number, J: number, K: number, L: number, M: number, N: number, O: number, P: number, Q: number, R: number, S: number, T: number, U: number, V: number, W: number, X: number, Y: number, Z: number}}\r\n   */\r\n  static letterMapping = {\r\n    A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, J: 8, K: 9,\r\n    L: 10, M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18,\r\n    U: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n  };\r\n\r\n  /**\r\n   * tetrad letters ordered by easting then northing (steps of 2000m)\r\n   * i.e. (x*4) + y\r\n   *\r\n   * where x and y are integer of (10km remainder / 2)\r\n   *\r\n   * @type {string}\r\n   */\r\n  static tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  preciseGridRef = '';\r\n\r\n  /**\r\n   * length in m (0 marks an invalid value)\r\n   *\r\n   * @type {number}\r\n   */\r\n  length = 0;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  hectad = '';\r\n\r\n  /**\r\n   * 10km ref with tetrad suffix or ''\r\n   * e.g. SD59A\r\n   * @type {string}\r\n   */\r\n  tetrad = '';\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  tetradLetter = '';\r\n\r\n  /**\r\n   * quadrant gridref(e.g. NZ34NW)\r\n   * only set if gridref is defined at 5km or <=1km precision\r\n   * undefined by default so need to use getter\r\n   *\r\n   * read using GridRef::get_quadrant\r\n   *\r\n   * @type {string}\r\n   */\r\n  quadrant = '';\r\n\r\n  /**\r\n   * quadrant code suffix(e.g. NW, NE, SW, SE)\r\n   *\r\n   * @type {string}\r\n   */\r\n  quadrantCode = '';\r\n\r\n  /**\r\n   *\r\n   * @type {GridCoords|null}\r\n   */\r\n  gridCoords = null;\r\n\r\n  /**\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  error = false;\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  errorMessage = '';\r\n\r\n  /**\r\n   * update tetrad using Easting/Northing values (metres)\r\n   * hectad should have been set prior to call\r\n   */\r\n  set_tetrad() {\r\n    this.tetradLetter = GridRef.tetradLetters.substr(\r\n        ((Math.floor((this.gridCoords.x % 10000) / 1000) >> 1) * 5) + (Math.floor((this.gridCoords.y % 10000) / 1000) >> 1)\r\n        , 1);\r\n\r\n    if (!this.tetradLetter) {\r\n      throw new Error(\"Failed to get tetrad letter when processing '\" + this.preciseGridRef + \"', easting=\" + this.gridCoords.x + \" northing=\" + this.gridCoords.y);\r\n    }\r\n    this.tetrad = this.hectad + this.tetradLetter;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} rawPrecision\r\n   * @param {number} [minPrecision]\r\n   * @returns {number}\r\n   */\r\n  static get_normalized_precision(rawPrecision, minPrecision) {\r\n      return rawPrecision > 2000 ? 10000 :\r\n          (rawPrecision > 1000 ? 2000 :\r\n                  (rawPrecision > 100 ? 1000 :\r\n                          (rawPrecision > 10 ? 100 :\r\n                                  (rawPrecision > 1 ? 10 :\r\n                                          minPrecision ? minPrecision : 1\r\n                                  )\r\n                          )\r\n                  )\r\n          );\r\n  }\r\n}\r\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n$({ global: true }, { Reflect: {} });\n\n// Reflect[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-reflect-@@tostringtag\nsetToStringTag(global.Reflect, 'Reflect', true);\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar bind = require('../internals/function-bind');\nvar aConstructor = require('../internals/a-constructor');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\nvar ObjectPrototype = Object.prototype;\nvar push = [].push;\n\n// `Reflect.construct` method\n// https://tc39.es/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\n\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () { /* empty */ });\n});\n\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n\n$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aConstructor(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      apply(push, $args, args);\n      return new (apply(bind, Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : ObjectPrototype);\n    var result = apply(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\nvar getFlags = uncurryThis(regExpFlags);\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.es/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar un$Slice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return un$Slice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","export const deg2rad = Math.PI / 180;\r\nexport const rad2deg = 180.0 / Math.PI;\r\n\r\n","import { deg2rad } from '../constants';\r\n\r\nexport class LatLng {\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tlat;\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tlng;\r\n\r\n\t/**\r\n\t * represents lat lng\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t * @constructor\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tthis.lat = lat;\r\n\t\tthis.lng = lng;\r\n\t};\r\n\r\n\tstatic _transform(lat, lon, a, e, h, a2, e2, xp, yp, zp, xr, yr, zr, s) {\r\n\t\t// convert to cartesian; lat, lon are radians\r\n\t\tconst sf = s * 0.000001;\r\n\t\tlet v = a / (Math.sqrt(1 - (e * (Math.sin(lat) * Math.sin(lat)))));\r\n\t\tconst x = (v + h) * Math.cos(lat) * Math.cos(lon);\r\n\t\tconst y = (v + h) * Math.cos(lat) * Math.sin(lon);\r\n\t\tconst z = ((1 - e) * v + h) * Math.sin(lat);\r\n\t\t// transform cartesian\r\n\t\tconst xrot = (xr / 3600) * deg2rad;\r\n\t\tconst yrot = (yr / 3600) * deg2rad;\r\n\t\tconst zrot = (zr / 3600) * deg2rad;\r\n\t\tconst hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n\t\tconst hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n\t\tconst hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\t\t// Convert back to lat, lon\r\n\t\tlon = Math.atan(hy / hx);\r\n\t\tconst p = Math.sqrt((hx * hx) + (hy * hy));\r\n\t\tlat = Math.atan(hz / (p * (1 - e2)));\r\n\t\tv = a2 / (Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat))));\r\n\t\tlet errvalue = 1.0;\r\n\t\tlet lat0 = 0;\r\n\t\twhile (errvalue > 0.001) {\r\n\t\t\tlat0 = Math.atan((hz + e2 * v * Math.sin(lat)) / p);\r\n\t\t\terrvalue = Math.abs(lat0 - lat);\r\n\t\t\tlat = lat0;\r\n\t\t}\r\n\t\t//h = p / Math.cos(lat) - v;\r\n\t\t//var geo = { latitude: lat, longitude: lon, height: h };  // object to hold lat and lon\r\n\t\treturn (new LatLng(lat, lon));\r\n\t}\r\n\r\n\t//helper\r\n\tstatic _Marc(bf0, n, phi0, phi) {\r\n\t\treturn bf0 * (((1 + n + ((5 / 4) * (n * n)) + ((5 / 4) * (n * n * n))) * (phi - phi0))\r\n\t\t\t- (((3 * n) + (3 * (n * n)) + ((21 / 8) * (n * n * n))) * (Math.sin(phi - phi0)) * (Math.cos(phi + phi0)))\r\n\t\t\t+ ((((15 / 8) * (n * n)) + ((15 / 8) * (n * n * n))) * (Math.sin(2 * (phi - phi0))) * (Math.cos(2 * (phi + phi0))))\r\n\t\t\t- (((35 / 24) * (n * n * n)) * (Math.sin(3 * (phi - phi0))) * (Math.cos(3 * (phi + phi0)))));\r\n\t};\r\n\r\n}\r\n","/**\r\n * represents lat lng as WGS84 (google map form)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nimport {LatLng} from \"./LatLng\";\r\n\r\nexport class LatLngWGS84 extends LatLng {\r\n  constructor(lat, lng) {\r\n    super(lat, lng);\r\n  }\r\n}\r\n","import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\n//import { GridCoordsGB } from '../GridCoords/GridCoordsGB';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\n// export const LatLngGB = /*@__PURE__*/(function() {\r\n/**\r\n * represents lat lng as OSGB1936 (Ordnance Survey projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nexport class LatLngGB extends LatLng {\r\n\r\n    constructor(lat, lng) {\r\n        super(lat, lng);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @returns {LatLngWGS84}\r\n     */\r\n    to_WGS84() {\r\n        //airy1830 = new RefEll(6377563.396, 6356256.909);\r\n        let a = 6377563.396; //airy1830.maj;\r\n        //var b        = 6356256.909; //airy1830.min;\r\n        let eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830.ecc;\r\n        const phi = this.lat * deg2rad; // (Math.PI / 180)(this.lat);\r\n        const sinPhi = Math.sin(phi);\r\n        const lambda = this.lng * deg2rad; // (Math.PI / 180)(this.lng);\r\n        const v = a / (Math.sqrt(1 - eSquared * (sinPhi * sinPhi)));\r\n        //H = 0; // height\r\n        const x = v * Math.cos(phi) * Math.cos(lambda);\r\n        const y = v * Math.cos(phi) * Math.sin(lambda);\r\n        const z = ((1 - eSquared) * v) * sinPhi;\r\n\r\n        const tx = 446.448;\r\n        const ty = -124.157;\r\n        const tz = 542.060;\r\n        const s = -0.0000204894;\r\n        const rx = 0.000000728190110241429; // (Math.PI / 180)( 0.00004172222);\r\n        const ry = 0.000001197489772948010; // (Math.PI / 180)( 0.00006861111);\r\n        const rz = 0.000004082615892268120; // (Math.PI / 180)( 0.00023391666);\r\n\r\n        const xB = tx + (x * (1 + s)) + (-rx * y) + (ry * z);\r\n        const yB = ty + (rz * x) + (y * (1 + s)) + (-rx * z);\r\n        const zB = tz + (-ry * x) + (rx * y) + (z * (1 + s));\r\n\r\n        //wgs84 = new RefEll(6378137.000, 6356752.3141);\r\n        a = 6378137.000; // wgs84.maj;\r\n        //var b        = 6356752.3141; // wgs84.min;\r\n        eSquared = 0.00669438003;// ((maj * maj) - (min * min)) / (maj * maj); //wgs84.ecc;\r\n\r\n        //lambdaB = (180 / Math.PI)(Math.atan(yB / xB));\r\n        const p = Math.sqrt((xB * xB) + (yB * yB));\r\n        let phiN = Math.atan(zB / (p * (1 - eSquared)));\r\n\r\n        for (let i = 1; i < 10; ++i) {\r\n            let sinPhiN = Math.sin(phiN); // this must be in the for loop as phiN is variable\r\n            phiN = Math.atan((zB + (eSquared * (a / (Math.sqrt(1 - eSquared * (sinPhiN * sinPhiN)))) * sinPhiN)) / p);\r\n        }\r\n\r\n        //this.lat = rad2deg * phiN;\r\n        //this.lng = rad2deg * (Math.atan(yB / xB)); // lambdaB;\r\n\r\n        return new LatLngWGS84(rad2deg * phiN, rad2deg * (Math.atan(yB / xB)));\r\n    };\r\n\r\n// /**\r\n//  * converts lat and lon (OSGB36) to OS northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsGB}\r\n//  */\r\n// LatLngGB.prototype.to_os_coords = function() {\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377563.396; // OSGB semi-major axis\r\n//     var b = 6356256.91; // OSGB semi-minor axis\r\n//     var e0 = 400000; // easting of false origin\r\n//     var n0 = -100000; // northing of false origin\r\n//     var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n//     var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n//     var lam0 = -0.034906585039886591; // OSGB false east\r\n//     var phi0 = 0.85521133347722145; // OSGB false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \treturn new GridCoordsGB(Math.round(east), Math.round(north));\r\n// };\r\n\r\n    /**\r\n     *\r\n     * @param {LatLngWGS84} latLngWGS84\r\n     * @returns {LatLngGB}\r\n     */\r\n    static from_wgs84(latLngWGS84) {\r\n\r\n        //first off convert to radians\r\n        const radWGlat = latLngWGS84.lat * deg2rad;\r\n        const radWGlon = latLngWGS84.lng * deg2rad;\r\n        //these are the values for WGS84(GRS80) to OSGB36(Airy)\r\n        const a = 6378137; // WGS84_AXIS\r\n        const e = 0.00669438037928458; // WGS84_ECCENTRIC\r\n        //var h = height; // height above datum (from GPGGA sentence)\r\n        const h = 0;\r\n        const a2 = 6377563.396; // OSGB_AXIS\r\n        const e2 = 0.0066705397616; // OSGB_ECCENTRIC\r\n        const xp = -446.448;\r\n        const yp = 125.157;\r\n        const zp = -542.06;\r\n        const xr = -0.1502;\r\n        const yr = -0.247;\r\n        const zr = -0.8421;\r\n        const s = 20.4894;\r\n\r\n        // convert to cartesian; lat, lon are in radians\r\n        const sf = s * 0.000001;\r\n        let v = a / (Math.sqrt(1 - (e * Math.sin(radWGlat) * Math.sin(radWGlat))));\r\n        const x = (v + h) * Math.cos(radWGlat) * Math.cos(radWGlon);\r\n        const y = (v + h) * Math.cos(radWGlat) * Math.sin(radWGlon);\r\n        const z = ((1 - e) * v + h) * Math.sin(radWGlat);\r\n\r\n        // transform cartesian\r\n        const xrot = (xr / 3600) * deg2rad;\r\n        const yrot = (yr / 3600) * deg2rad;\r\n        const zrot = (zr / 3600) * deg2rad;\r\n        const hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n        const hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n        const hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\r\n        // Convert back to lat, lon\r\n        const newLon = Math.atan(hy / hx);\r\n        const p = Math.sqrt((hx * hx) + (hy * hy));\r\n        let newLat = Math.atan(hz / (p * (1 - e2)));\r\n        v = a2 / (Math.sqrt(1 - e2 * (Math.sin(newLat) * Math.sin(newLat))));\r\n        let errvalue = 1.0;\r\n        let lat0 = 0;\r\n        while (errvalue > 0.001) {\r\n            lat0 = Math.atan((hz + e2 * v * Math.sin(newLat)) / p);\r\n            errvalue = Math.abs(lat0 - newLat);\r\n            newLat = lat0;\r\n        }\r\n\r\n        return new LatLngGB(newLat * rad2deg, newLon * rad2deg);\r\n    }\r\n}\r\n","import { LatLng} from './LatLng';\r\nimport { rad2deg, deg2rad } from '../constants';\r\n\r\nexport class LatLngCI extends LatLng {\r\n\t/**\r\n\t * represents lat lng as INT24 (CI grid projection)\r\n\t *\r\n\t * @constructor\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t};\r\n\r\n\t// /**\r\n\t//  * converts lat and lon to CI northings and eastings\r\n\t//  *\r\n\t//  * @returns GridCoordsCI\r\n\t//  */\r\n\t// to_os_coords() {\r\n\t// \tvar phi = this.lat * deg2rad; // convert latitude to radians\r\n\t// \tvar lam = this.lng * deg2rad; // convert longitude to radians\r\n\t// \tvar a = 6378388.000;      // OSI semi-major\r\n\t// \tvar b = 6356911.946;      // OSI semi-minor\r\n\t// \tvar e0 = 500000;          // OSI easting of false origin\r\n\t// \tvar n0 = 0;          // OSI northing of false origin\r\n\t// \tvar f0 = 0.9996;        // OSI scale factor on central meridian\r\n\t// \tvar e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n\t// \tvar lam0 = -0.0523598775598;   // OSI false east\r\n\t// \tvar phi0 = 0;    // OSI false north\r\n\t// \tvar af0 = a * f0;\r\n\t// \tvar bf0 = b * f0;\r\n\t//\r\n\t// \t// easting\r\n\t// \tvar slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t// \tvar nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t// \tvar rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t// \tvar eta2 = (nu / rho) - 1;\r\n\t// \tvar p = lam - lam0;\r\n\t// \tvar IV = nu * Math.cos(phi);\r\n\t// \tvar clat3 = Math.pow(Math.cos(phi), 3);\r\n\t// \tvar tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t// \tvar V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t// \tvar clat5 = Math.pow(Math.cos(phi), 5);\r\n\t// \tvar tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t// \tvar VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t// \tvar east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\t//\r\n\t// \t// northing\r\n\t// \tvar n = (af0 - bf0) / (af0 + bf0);\r\n\t// \tvar M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t// \tvar I = M + (n0);\r\n\t// \tvar II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t// \tvar III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t// \tvar IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t// \tvar north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\t//\r\n\t// \t\t//return {x: Math.round(east), y: Math.round(north)};\r\n\t// \treturn new GridCoordsCI(Math.round(east), Math.round(north));\r\n\t// };\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngCI}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\t\tconst phip = latLngWGS84.lat * deg2rad;\r\n\t\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\r\n\t\tconst CI_AXIS = 6378388.000;\r\n\t\tconst CI_ECCENTRIC = 0.0067226700223333;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\r\n\t\t/*\r\n\t\t * CI\r\n\t\t a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\t b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\t e0 = 500000;           // CI easting of false origin\r\n\t\t n0 = 0;                // CI northing of false origin\r\n\t\t f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\t e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\t lam0 = -0.0523598775598;  // CI false east\r\n\t\t phi0 = 0 * deg2rad;       // CI false north\r\n\t\t */\r\n\r\n\t\tconst height = 0;\r\n\t\tconst latlng = LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, CI_AXIS, CI_ECCENTRIC,\r\n\t\t\t83.901, 98.127, 118.635, 0, 0, 0, 0);\r\n\r\n\t\treturn new LatLngCI(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n\t};\r\n}\r\n","import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\n// import { GridCoordsIE } from '../GridCoords/GridCoordsIE';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\n\r\n/**\r\n * represents lat lng as Modified Airy (Irish grid projection)\r\n *\r\n */\r\nexport class LatLngIE extends LatLng {\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t};\r\n\r\n// /**\r\n//  * converts lat and lon (modified Airy) to OSI northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsIE}\r\n//  */\r\n// to_os_coords() {\r\n//     //var deg2rad = Math.PI / 180;\r\n//     //var rad2deg = 180.0 / Math.PI;\r\n//\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377340.189;      // OSI semi-major\r\n//     var b = 6356034.447;      // OSI semi-minor\r\n//     var e0 = 200000;          // OSI easting of false origin\r\n//     var n0 = 250000;          // OSI northing of false origin\r\n//     var f0 = 1.000035;        // OSI scale factor on central meridian\r\n//     var e2 = 0.00667054015;   // OSI eccentricity squared\r\n//     var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n//     var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \t//return {x: Math.round(east), y: Math.round(north)};\r\n//\r\n// \t/*\r\n// \treturn (east > 0 && north > 0) ?\r\n// \t\tnew GridCoordsIE(Math.round(east), Math.round(north))\r\n// \t\t:\r\n// \t\tnull;\r\n// \t*/\r\n//    return new GridCoordsIE(Math.round(east), Math.round(north));\r\n// };\r\n\r\n\t/**\r\n\t * convert Irish projection to WGS84 (for Google Maps)\r\n\t * see http://www.carabus.co.uk/ll_ngr.html\r\n\t */\r\n\tto_WGS84() {\r\n\t\tconst IRISH_AXIS = 6377340.189;\r\n\t\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t\t/*\r\n\t\t * IE\r\n\t\ta = 6377340.189;      // OSI semi-major\r\n\t\tb = 6356034.447;      // OSI semi-minor\r\n\t\te0 = 200000;          // OSI easting of false origin\r\n\t\tn0 = 250000;          // OSI northing of false origin\r\n\t\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\t\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\t\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\t\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t\t*/\r\n\r\n\t\t//height = 0;\r\n\r\n\t\tconst latLngRadians = LatLng._transform(this.lat * deg2rad, this.lng * deg2rad, IRISH_AXIS, IRISH_ECCENTRIC, 0, WGS84_AXIS, WGS84_ECCENTRIC,\r\n\t\t\t482.53, -130.596, 564.557, -1.042, -0.214, -0.631, -8.15);\r\n\r\n\t\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngIE}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\t\tconst phip = latLngWGS84.lat * deg2rad;\r\n\t\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\r\n\t\tconst IRISH_AXIS = 6377340.189;\r\n\t\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\r\n\t\t/*\r\n\t\t * IE\r\n\t\ta = 6377340.189;      // OSI semi-major\r\n\t\tb = 6356034.447;      // OSI semi-minor\r\n\t\te0 = 200000;          // OSI easting of false origin\r\n\t\tn0 = 250000;          // OSI northing of false origin\r\n\t\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\t\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\t\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\t\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t\t */\r\n\r\n\t\tconst height = 0;\r\n\t\tconst latlng = LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, IRISH_AXIS, IRISH_ECCENTRIC,\r\n\t\t\t-482.53, 130.596, -564.557, 1.042, 0.214, 0.631, 8.15);\r\n\r\n\t\treturn new LatLngIE(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n\t}\r\n}\r\n","import {LatLngGB} from '../LatLng/LatLngGB';\r\nimport {LatLngCI} from '../LatLng/LatLngCI';\r\nimport {LatLngIE} from '../LatLng/LatLngIE';\r\nimport {LatLngWGS84} from '../LatLng/LatLngWGS84';\r\n\r\n/**\r\n * abstract representation of a gridref co-ordinate pair\r\n * (*not a gridref string*)\r\n *\r\n */\r\nexport class GridCoords {\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tx;\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\ty;\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * tetrad letters ordered by easting then northing (steps of 2000m)\r\n\t * i.e. (x*4) + y\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n\t/**\r\n\t * tetrad letters ordered by northing then easting (steps of 2000m)\r\n\t * i.e. (y*5) + x\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLettersRowFirst = 'AFKQVBGLRWCHMSXDINTYEJPUZ';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t * @returns {GridCoords}\r\n\t */\r\n\tstatic from_latlng(lat, lng) {\r\n\t\t// test if GB\r\n\t\tif (lng >= -8.74 && lat > 49.88) {\r\n\t\t\t// lng extreme must accommodate St Kilda\r\n\r\n\t\t\tlet os = new LatLngGB.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\t\tif (os.x >= 0 && os.is_gb_hectad()) {\r\n\t\t\t\treturn os;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// test if Irish\r\n\t\tif (lng < -5.3 && lat > 51.34 && lng > -11 && lat < 55.73) {\r\n\t\t\tlet osI = new LatLngIE.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\t\tif (osI.x < 0 || osI.y < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn osI;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet osCi = new LatLngCI.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\t\tif (osCi.x >= 500000 && osCi.x < 600000 && osCi.y >= 5400000 && osCi.y < 5600000) {\r\n\t\t\t\treturn osCi;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null; //not a valid location\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t * @return {string} tetrad letter\r\n\t */\r\n\tstatic calculate_tetrad(easting, northing) {\r\n\t\treturn (easting >= 0 && northing >= 0) ?\r\n\t\t\tGridCoords.tetradLetters.charAt((Math.floor(easting % 10000 / 2000) * 5) + Math.floor(northing % 10000 / 2000)) :\r\n\t\t\t'';\r\n\t};\r\n\r\n\ttoString() {\r\n\t\treturn this.x + ',' + this.y;\r\n\t};\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} letters\r\n * @param {number} e metres\r\n * @param {number} n metres\r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nexport const _e_n_to_gr = function(letters, e, n, precision) {\r\n\tlet eString = ('00000' + Math.floor(e));\r\n\tlet nString = ('00000' + Math.floor(n));\r\n\r\n\tif (precision === 2000) {\r\n\t\treturn letters +\r\n\t\t\teString.charAt(eString.length-5) + nString.charAt(nString.length-5) +\r\n\t\t\tGridCoords.calculate_tetrad(e, n);\r\n\t} else if (precision === 100000) {\r\n\t\treturn letters;\r\n\t} else {\r\n\t\tif (precision === 5000) {\r\n\t\t\t// ignore quadrant and treat as hectad\r\n\t\t\tprecision = 10000;\r\n\t\t}\r\n\r\n\t\tlet logPrecision = Math.round(Math.log10(precision));\r\n\t\treturn letters +\r\n\t\t\t(logPrecision ?\r\n\t\t\t\t(eString.slice(-5,  -logPrecision) + nString.slice(-5,  -logPrecision))\r\n\t\t\t\t:\r\n\t\t\t\t(eString.slice(-5) + nString.slice(-5))\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngWGS84 } from '../LatLng/LatLngWGS84';\r\nimport { LatLng } from '../LatLng/LatLng';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport class GridCoordsCI extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsCI}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//nX = north;\r\n\t\t//ex = east;\r\n\r\n\t\tvar a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\tvar b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\tvar e0 = 500000;           // easting of false origin\r\n\t\tvar n0 = 0;                // northing of false origin\r\n\t\tvar f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\tvar e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\tvar lam0 = -0.0523598775598;  // INT24 ED50 false east\r\n\t\tvar phi0 = 0; //0 * deg2rad;    // INT24 ED50 false north\r\n\r\n\t\tvar af0 = a * f0;\r\n\t\tvar bf0 = b * f0;\r\n\t\tvar n = (af0 - bf0) / (af0 + bf0);\r\n\t\tvar Et = this.x - e0;\r\n\t\tvar phid = _initial_lat(this.y, n0, af0, phi0, n, bf0);\r\n\t\tvar nu = af0 / (Math.sqrt(1 - (e2 * (Math.sin(phid) * Math.sin(phid)))));\r\n\t\tvar rho = (nu * (1 - e2)) / (1 - (e2 * (Math.sin(phid)) * (Math.sin(phid))));\r\n\t\tvar eta2 = (nu / rho) - 1;\r\n\t\tvar tlat2 = Math.tan(phid) * Math.tan(phid);\r\n\t\tvar tlat4 = Math.pow(Math.tan(phid), 4);\r\n\t\tvar tlat6 = Math.pow(Math.tan(phid), 6);\r\n\t\tvar clatm1 = Math.pow(Math.cos(phid), -1);\r\n\t\tvar VII = Math.tan(phid) / (2 * rho * nu);\r\n\t\tvar VIII = (Math.tan(phid) / (24 * rho * (nu * nu * nu))) * (5 + (3 * tlat2) + eta2 - (9 * eta2 * tlat2));\r\n\t\tvar IX = ((Math.tan(phid)) / (720 * rho * Math.pow(nu, 5))) * (61 + (90 * tlat2) + (45 * tlat4));\r\n\t\tvar phip = (phid - ((Et * Et) * VII) + (Math.pow(Et, 4) * VIII) - (Math.pow(Et, 6) * IX));\r\n\t\tvar X = Math.pow(Math.cos(phid), -1) / nu;\r\n\t\tvar XI = (clatm1 / (6 * (nu * nu * nu))) * ((nu / rho) + (2 * (tlat2)));\r\n\t\tvar XII = (clatm1 / (120 * Math.pow(nu, 5))) * (5 + (28 * tlat2) + (24 * tlat4));\r\n\t\tvar XIIA = clatm1 / (5040 * Math.pow(nu, 7)) * (61 + (662 * tlat2) + (1320 * tlat4) + (720 * tlat6));\r\n\t\tvar lambdap = (lam0 + (Et * X) - ((Et * Et * Et) * XI) + (Math.pow(Et, 5) * XII) - (Math.pow(Et, 7) * XIIA));\r\n\r\n\t\t// var WGS84_AXIS = 6378137;\r\n\t\t// var WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t\t//\r\n\t\t// var INT24_AXIS = 6378388.000;\r\n\t\t// var INT24_ECCENTRIC = 0.0067226700223333;\r\n\t\t// var height = 10;  // dummy height\r\n\t\t// //var latLngRadians = LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n\r\n\t\tvar latLngRadians = convert_to_wgs(phip, lambdap);\r\n\t\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n\r\n\t\t//return (new LatLngCI(rad2deg * phip, rad2deg * lambdap)).to_WGS84()\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {String}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tif (this.y >= 5500000) {\r\n\t\t\treturn _e_n_to_gr('WA', this.x - 500000, this.y - 5500000, precision ? precision : 1);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn _e_n_to_gr('WV', this.x - 500000, this.y - 5400000, precision ? precision : 1);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {?string}\r\n\t */\r\n\tto_hectad() {\r\n\t\tif (this.y > 5500000) {\r\n\t\t\treturn 'WA' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn 'WV' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst convert_to_wgs = function(phip, lambdap) {\r\n\tvar WGS84_AXIS = 6378137;\r\n\tvar WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t//OSGB_AXIS = 6377563.396;\r\n\t//OSGB_ECCENTRIC = 0.0066705397616;\r\n\t//IRISH_AXIS = 6377340.189;\r\n\t//IRISH_ECCENTRIC = 0.00667054015;\r\n\tvar INT24_AXIS = 6378388.000;\r\n\tvar INT24_ECCENTRIC = 0.0067226700223333;\r\n\tvar height = 10;  // dummy height\r\n\treturn LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n};\r\n\r\nconst _initial_lat = function(north, n0, af0, phi0, n, bf0) {\r\n\tvar phi1 = ((north - n0) / af0) + phi0;\r\n\tvar M = LatLng._Marc(bf0, n, phi0, phi1);\r\n\tvar phi2 = ((north - n0 - M) / af0) + phi1;\r\n\tvar ind = 0;\r\n\twhile ((Math.abs(north - n0 - M) > 0.00001) && (ind < 20))  // max 20 iterations in case of error\r\n\t{\r\n\t\tind += 1;\r\n\t\tphi2 = ((north - n0 - M) / af0) + phi1;\r\n\t\tM = LatLng._Marc(bf0, n, phi0, phi2);\r\n\t\tphi1 = phi2;\r\n\t}\r\n\treturn phi2;\r\n};\r\n\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngGB } from '../LatLng/LatLngGB';\r\nimport { rad2deg } from '../constants';\r\n\r\n/**\r\n *\r\n */\r\nexport class GridCoordsGB extends GridCoords {\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic gbHectads = '';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {string}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(this.x / 100000);\r\n\t\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(this.y / 100000);\r\n\t\tvar firstLetter = '';\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\r\n\t\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\tvar secondLetter = String.fromCharCode(index);\r\n\r\n\t\treturn _e_n_to_gr(\r\n\t\t\tfirstLetter + secondLetter,\r\n\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\tprecision ? precision : 1\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @return {string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(easting / 100000);\r\n\t\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(northing / 100000);\r\n\t\tvar firstLetter = \"\";\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\t\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn firstLetter +\r\n\t\t\tString.fromCharCode(index) + // secondLetter\r\n\t\t\t(((this.x - (100000 * hundredkmE)) / 10000) | 0) +\r\n\t\t\t(((this.y - (100000 * hundredkmN)) / 10000) | 0);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tis_gb_hectad() {\r\n\t\treturn GridCoordsGB.gbHectads.indexOf(this.to_hectad()) !== -1;\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//airy1830 = RefEll::airy1830(); //new RefEll(6377563.396, 6356256.909);\r\n\t\t//var OSGB_F0  = 0.9996012717;\r\n\t\t//var N0       = -100000.0;\r\n\t\tvar E0 = 400000.0;\r\n\t\tvar phi0 = 0.85521133347722; //deg2rad(49.0);\r\n\t\tvar lambda0 = -0.034906585039887; //deg2rad(-2.0);\r\n\t\tvar a = 6377563.396; // airy1830->maj;\r\n\t\t//var b        = 6356256.909; // airy1830->min;\r\n\t\tvar eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830->ecc;\r\n\t\t//var phi      = 0.0;\r\n\t\t//var lambda   = 0.0;\r\n\t\tvar E = this.x;\r\n\t\tvar N = this.y;\r\n\t\tvar n = 0.0016732203289875; //(a - b) / (a + b);\r\n\t\tvar M;\r\n\t\tvar phiPrime = ((N + 100000) / (a * 0.9996012717)) + phi0;\r\n\r\n\t\t// 15 / 8 === 1.875\r\n\t\t// 5 / 4 === 1.25\r\n\t\t// 21 / 8 === 2.625\r\n\r\n\t\tdo {\r\n\t\t\tM = N + 100000 - (\r\n\t\t\t\t6353722.489 // (b * OSGB_F0)\r\n\t\t\t\t* ((1.0016767257674 // * (((1 + n + (1.25 * n * n) + (1.25 * n * n * n))\r\n\t\t\t\t\t\t* (phiPrime - phi0))\r\n\t\t\t\t\t- (0.00502807228247412 // - (((3 * n) + (3 * n * n) + (2.625 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(phiPrime - phi0)\r\n\t\t\t\t\t\t* Math.cos(phiPrime + phi0))\r\n\t\t\t\t\t+ (((1.875 * n * n) + (1.875 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(2.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(2.0 * (phiPrime + phi0)))\r\n\t\t\t\t\t- (((35.0 / 24.0) * n * n * n)\r\n\t\t\t\t\t\t* Math.sin(3.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(3.0 * (phiPrime + phi0)))));\r\n\r\n\t\t\tphiPrime += M / 6375020.48098897; // (N - N0 - M) / (a * OSGB_F0);\r\n\t\t} while (M >= 0.001);\r\n\r\n\t\tvar sinphiPrime2 = Math.sin(phiPrime) * Math.sin(phiPrime);\r\n\t\tvar tanphiPrime2 = Math.tan(phiPrime) * Math.tan(phiPrime);\r\n\t\tvar secphiPrime = 1.0 / Math.cos(phiPrime);\r\n\r\n\t\tvar v = a * 0.9996012717 * Math.pow(1.0 - eSquared * sinphiPrime2, -0.5);\r\n\r\n\t\tvar rho =\r\n\t\t\ta\r\n\t\t\t* 0.9996012717\r\n\t\t\t* (1.0 - eSquared)\r\n\t\t\t* Math.pow(1.0 - eSquared * sinphiPrime2, -1.5);\r\n\t\tvar etaSquared = (v / rho) - 1.0;\r\n\t\tvar VII = Math.tan(phiPrime) / (2 * rho * v);\r\n\t\tvar VIII =\r\n\t\t\t(Math.tan(phiPrime) / (24.0 * rho * Math.pow(v, 3.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (3.0 * tanphiPrime2)\r\n\t\t\t\t+ etaSquared\r\n\t\t\t\t- (9.0 * tanphiPrime2 * etaSquared));\r\n\t\tvar IX =\r\n\t\t\t(Math.tan(phiPrime) / (720.0 * rho * Math.pow(v, 5.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (90.0 * tanphiPrime2)\r\n\t\t\t\t+ (45.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tvar X = secphiPrime / v;\r\n\t\tvar XI =\r\n\t\t\t(secphiPrime / (6.0 * v * v * v))\r\n\t\t\t* ((v / rho) + (2 * tanphiPrime2));\r\n\t\tvar XII =\r\n\t\t\t(secphiPrime / (120.0 * Math.pow(v, 5.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (28.0 * tanphiPrime2)\r\n\t\t\t\t+ (24.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tvar XIIA =\r\n\t\t\t(secphiPrime / (5040.0 * Math.pow(v, 7.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (662.0 * tanphiPrime2)\r\n\t\t\t\t+ (1320.0 * tanphiPrime2 * tanphiPrime2)\r\n\t\t\t\t+ (720.0\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2));\r\n\t\tvar phi =\r\n\t\t\tphiPrime\r\n\t\t\t- (VII * Math.pow(E - E0, 2.0))\r\n\t\t\t+ (VIII * Math.pow(E - E0, 4.0))\r\n\t\t\t- (IX * Math.pow(E - E0, 6.0));\r\n\t\tvar lambda =\r\n\t\t\tlambda0\r\n\t\t\t+ (X * (E - E0))\r\n\t\t\t- (XI * Math.pow(E - E0, 3.0))\r\n\t\t\t+ (XII * Math.pow(E - E0, 5.0))\r\n\t\t\t- (XIIA * Math.pow(E - E0, 7.0));\r\n\r\n\t\treturn (new LatLngGB(rad2deg * phi, rad2deg * lambda)).to_WGS84();\r\n\t}\r\n}\r\n\r\n\r\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsCI} from '../GridCoords/GridCoordsCI';\r\nimport {GridCoordsGB} from \"../GridCoords/GridCoordsGB\";\r\n\r\nexport class GridRefCI extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsCI}\r\n\t */\r\n\tGridCoords = GridCoordsCI;\r\n\r\n\t/**\r\n\t * @type {GridCoordsCI}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.parse_well_formed = this.from_string;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfrom_string(rawGridRef) {\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.\\/-]+/g, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet enl;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (/^(W[AV](?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\tif ((enl = GridRefCI.gridref_string_to_e_n_l(trimmedLocality))) {\r\n\t\t\t\tthis.length = enl.length;\r\n\r\n\t\t\t\tthis.gridCoords = new GridCoordsCI(enl.e, enl.n);\r\n\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'Grid reference format not understood (odd length).';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Channel Island grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param {string} gridRef plain string without tetrad or quadrant suffix\r\n\t * @return {(boolean|{e : number, n : number, length : number})}\r\n\t * returns false on error or object {'e' : easting, 'n' : northing, 'length' : length}\r\n\t */\r\n\tstatic gridref_string_to_e_n_l(gridRef) {\r\n\t\tlet northOffset, x, y, length;\r\n\r\n\t\t// assume modern alphabetical sheet ref\r\n\t\tlet chars = gridRef.substr(0, 2);\r\n\r\n\t\tif (chars === 'WA') {\r\n\t\t\tnorthOffset = 5500000;\r\n\t\t} else if (chars === 'WV') {\r\n\t\t\tnorthOffset = 5400000;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Bad Channel Island grid letters: '\" + chars + \"'\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet ref = gridRef.substr(2);\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tx = ref.charAt(0) * 10000;\r\n\t\t\t\ty = ref.charAt(1) * 10000;\r\n\t\t\t\tlength = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tx = ref.substr(0, 2) * 1000;\r\n\t\t\t\ty = ref.substr(2) * 1000;\r\n\t\t\t\tlength = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tx = ref.substr(0, 3) * 100;\r\n\t\t\t\ty = ref.substr(3) * 100;\r\n\t\t\t\tlength = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tx = ref.substr(0, 4) * 10;\r\n\t\t\t\ty = ref.substr(4) * 10;\r\n\t\t\t\tlength = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tx = parseInt(ref.substr(0, 5), 10);\r\n\t\t\t\ty = parseInt(ref.substr(5), 10);\r\n\t\t\t\tlength = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Bad length for Channel Island grid ref '\" + gridRef + \"'\");\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\te: (x + 500000),\r\n\t\t\tn: (y + northOffset),\r\n\t\t\tlength: length\r\n\t\t};\r\n\t}\r\n}\r\n","'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsGB} from '../GridCoords/GridCoordsGB';\r\n\r\nexport class GridRefGB extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsGB}\r\n\t */\r\n\tGridCoords = GridCoordsGB;\r\n\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * gridref known to have correct syntax\r\n\t * may have tetrad or quadrant suffix\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tparse_well_formed(rawGridRef) {\r\n\r\n\t\tif (rawGridRef.length >= 5 && /^[A-Z]/.test(rawGridRef.charAt(4))) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(rawGridRef.substr(rawGridRef.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = rawGridRef.substr(rawGridRef.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tetradLetter = rawGridRef.charAt(4);\r\n\t\t\t}\r\n\r\n\t\t\trawGridRef = rawGridRef.substr(0, 4);\r\n\t\t}\r\n\r\n\t\t//this sets easting/northing, length and hectad\r\n\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(rawGridRef);\r\n\r\n\t\tif (this.tetradLetter || this.quadrantCode) {\r\n\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\tif (this.tetradLetter) {\r\n\t\t\t\tthis.preciseGridRef = this.tetrad = this.hectad + this.tetradLetter;\r\n\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[this.tetradLetter][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[this.tetradLetter][1];\r\n\t\t\t} else {\r\n\t\t\t\t// quadrant\r\n\t\t\t\tthis.preciseGridRef = this.quadrant = rawGridRef + this.quadrantCode;\r\n\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.preciseGridRef = rawGridRef;\r\n\r\n\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\tthis.set_tetrad();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfrom_string(rawGridRef) {\r\n\t\t// grid ref may not be in canonical format\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/g, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet ref;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if all numeric gridref, e.g. 38517462 then\r\n\t\t// split with '/', i.e. 38/517462\r\n\t\tif (trimmedLocality === parseInt(trimmedLocality, 10).toString()) {\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, 2) + '/' + trimmedLocality.substr(2);\r\n\t\t} else if (trimmedLocality.length > 3 && trimmedLocality.charAt(2) === '/' && /^[A-Z]{2}$/.test(trimmedLocality.substr(0, 2))) {\r\n\t\t\t// preprocess refs of form SD/59 to SD59\r\n\t\t\t// but at this stage want to retain old-style nn/nnnn gridrefs\r\n\t\t\ttrimmedLocality = trimmedLocality.replace('/', '');\r\n\t\t}\r\n\r\n\t\tif (trimmedLocality.substr(0, 2) === 'VC') {\r\n\t\t\t// special case error, VC number entered in the wrong field\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Misplaced vice-county code in grid-reference field. ('\" + trimmedLocality + \"')\";\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t} else if ((ref = trimmedLocality.match(/^([HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ](?:\\d\\d){1,5})$/)) !== null) {\r\n\t\t\ttrimmedLocality = ref[0]; //grid reference\r\n\r\n\t\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(trimmedLocality);\r\n\r\n\t\t\tif (this.length > 0) {\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'GB grid reference format not understood (strange length).';\r\n\t\t\t}\r\n\t\t} else if (/^([\\d]{2})\\/((?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\t// matching old-style nn/nnnn gridrefs\r\n\t\t\t// where second-part must have even-number of digits\r\n\r\n\t\t\tthis.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n\t\t\tswitch (this.length) {\r\n\t\t\t\tcase 10000:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.hectad = trimmedLocality;\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\ttrimmedLocality += tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else if (this.quadrantCode) {\r\n\t\t\t\t\t\ttrimmedLocality += this.quadrantCode;\r\n\t\t\t\t\t\tthis.quadrant = trimmedLocality;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1000:\r\n\t\t\t\tcase 100:\r\n\t\t\t\tcase 10:\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(this.length);\r\n\t\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.error = true;\r\n\t\t\t\t\tthis.errorMessage = 'Bad grid square dimension (' + this.length + ' m).';\r\n\t\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * sets easting, northing and length (in km)\r\n\t * source grid-reference need not be well-formed\r\n\t *\r\n\t * @param {string} gridRef either nn/nn... or aann...\r\n\t */\r\n\tparse_gr_string_without_tetrads(gridRef) {\r\n\t\tlet matches, x, y, ref;\r\n\r\n\t\tif ((matches = gridRef.match(/^(\\d{2})\\/((?:\\d\\d){1,5})$/)) !== null) {\r\n\r\n\t\t\t// old style numerical sheet ref XY/nnnnnn\r\n\t\t\t// nnnn part must have even length\r\n\r\n\t\t\t// northern scottish islands have eccentric numbering\r\n\t\t\tswitch (matches[1]) {\r\n\t\t\t\tcase '57':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '67':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '58':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '68':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '69':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1200000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tx = gridRef.charAt(0) * 100000;\r\n\t\t\t\t\ty = gridRef.charAt(1) * 100000;\r\n\t\t\t}\r\n\r\n\t\t\tref = matches[2];\r\n\t\t} else {\r\n\t\t\t// modern alphabetical sheet ref\r\n\t\t\tif (!GridRef.letterMapping.hasOwnProperty(gridRef.charAt(0)) || !GridRef.letterMapping.hasOwnProperty(gridRef.charAt(1))) {\r\n\t\t\t\t// invalid\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet char1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\t\tlet char2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\t\tref = gridRef.substr(2);\r\n\r\n\t\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\t\t}\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100) * 1000,\r\n\t\t\t\t\ty + (ref % 100) * 1000\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 1000) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 10000) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Bad grid ref length, ref=' + gridRef);\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthis.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * gridRef must be a correctly formed OS GB gridref\r\n\t *\r\n\t * sets self::gridCoords\r\n\t * sets self::length\r\n\t * sets self::hectad\r\n\t *\r\n\t * @param {string} gridRef modern alpha-numeric format with no suffixes\r\n\t * @throws Error\r\n\t */\r\n\tparse_wellformed_gb_gr_string_no_tetrads(gridRef) {\r\n\t\tlet char1, char2, ref, x, y;\r\n\r\n\t\t// modern alphabetical sheet refs only\r\n\t\tchar1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\tchar2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\tref = gridRef.substr(2);\r\n\r\n\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tthis.hectad = gridRef;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 100) * 1000),\r\n\t\t\t\t\ty + ((ref % 100) * 1000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(4, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 1000)) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(5, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 10000)) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(6, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(7, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthrow new Error(\"Bad grid ref length when parsing supposedly well-formed ref, ref='\" + gridRef + \"'\");\r\n\t\t}\r\n\t}\r\n}\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngIE } from '../LatLng/LatLngIE';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport class GridCoordsIE extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'IE';\r\n\r\n\t/**\r\n\t * @type {GridCoordsIE}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsIE}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\r\n\tstatic irishGrid = {\r\n\t\t0: ['V', 'Q', 'L', 'F', 'A'],\r\n\t\t1: ['W', 'R', 'M', 'G', 'B'],\r\n\t\t2: ['X', 'S', 'N', 'H', 'C'],\r\n\t\t3: ['Y', 'T', 'O', 'J', 'D']\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//converts OSI coords to lat/long.\r\n\r\n\t\t// modified from OSGBtoLL, Equations from USGS Bulletin 1532\r\n\t\t//East Longitudes are positive, West longitudes are negative.\r\n\t\t//North latitudes are positive, South latitudes are negative\r\n\t\t//Lat and Long are in decimal degrees.\r\n\t\t//Written by Chuck Gantz- chuck.gantz@globalstar.com\r\n\r\n\t\t// php transliteration by TH\r\n\r\n\t\t//OSIENorthing = this.y;\r\n\t\t//OSIEEasting = this.x;\r\n\r\n\t\t//constants\r\n\t\t//PI = 3.14159265;\r\n\t\t//FOURTHPI = M_PI / 4.0;\r\n\t\t//DEG2RAD = M_PI / 180.0;\r\n\t\t//RAD2DEG = 180.0 / M_PI;\r\n\t\t// ////////////////\r\n\r\n\t\tconst k0 = 1.000035; // scale factor\r\n\t\t//double a;\r\n\t\t//double eccPrimeSquared;\r\n\t\t//double N1, T1, C1, R1, D, M;\r\n\t\tconst LongOrigin = -8.0;\r\n\t\t//LatOrigin = 53.5;\r\n\t\t//LatOriginRad = LatOrigin * DEG2RAD;\r\n\r\n\t\t//UK\r\n\t\t//majoraxis=6377563.396; //Airy\r\n\t\t//a=6377563.396;\r\n\t\t//minoraxis = 6356256.91; //Airy\r\n\r\n\t\t//IE\r\n\t\t//majoraxis = 6377340.189; //Airy\r\n\t\tconst a = 6377340.189;\r\n\t\t//minoraxis = 6356034.447; //Airy\r\n\r\n\t\t//eccSquared = (majoraxis * majoraxis - minoraxis * minoraxis) / (majoraxis * majoraxis);\r\n\t\tconst eccSquared = 0.0066705402933363;\r\n\r\n\t\t//e1 = (1-Math.sqrt(1-eccSquared))/(1+Math.sqrt(1-eccSquared));\r\n\t\tconst e1 = 0.0016732203841521;\r\n\t\t//error_log(\"eccSquared={eccSquared} e1={e1}\");\r\n\r\n\t\t//only calculate M0 once since it is based on the origin of the OSGB projection, which is fixed\r\n\t\t//M0 = a*((1\t- eccSquared/4\t\t- 3*eccSquared*eccSquared/64\t- 5*eccSquared*eccSquared*eccSquared/256)*LatOriginRad\r\n\t\t//\t- (3*eccSquared/8\t+ 3*eccSquared*eccSquared/32\t+ 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(2*LatOriginRad)\r\n\t\t//\t+ (15*eccSquared*eccSquared/256 + 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(4*LatOriginRad)\r\n\t\t//\t- (35*eccSquared*eccSquared*eccSquared/3072)*Math.sin(6*LatOriginRad));\r\n\t\t//error_log(\"M0 = {M0}\");\r\n\t\tconst M0 = 5929615.3530033;\r\n\r\n\t\t//OSGBSquareToRefCoords(OSGBZone, RefEasting, RefNorthing); // Assume supplied MapInfo northing and easting take this into account\r\n\t\tconst x = this.x - 200000.0; //remove 400,000 meter false easting for longitude\r\n\t\tconst y = this.y - 250000.0; //remove 100,000 meter false easting for longitude\r\n\r\n\t\t//eccPrimeSquared = (eccSquared)/(1.0-eccSquared);\r\n\t\tconst eccPrimeSquared = 0.0067153352074207;\r\n\t\t//error_log(\"eccPrimeSquared={eccPrimeSquared}\");\r\n\r\n\t\tconst M = M0 + y / k0;\r\n\t\tconst mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\r\n\r\n\t\tconst phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu)\r\n\t\t\t+ (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu)\r\n\t\t\t+ (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\r\n\t\t//phi1 = phi1Rad*RAD2DEG;\r\n\r\n\t\tconst N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\r\n\t\tconst T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\r\n\t\tconst C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\r\n\t\tconst R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\r\n\t\tconst D = x / (N1 * k0);\r\n\r\n\t\tlet Lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24\r\n\t\t\t+ (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\r\n\t\tLat = Lat * rad2deg;\r\n\r\n\t\tlet Long = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1)\r\n\t\t\t* D * D * D * D * D / 120) / Math.cos(phi1Rad);\r\n\r\n\t\tLong = LongOrigin + Long * rad2deg;\r\n\r\n\t\t//return new LatLng(Lat, Long);\r\n\r\n\t\t//var ll = new LatLngIE(Lat, Long); // Irish projection (modified Airy)\r\n\t\t//ll.IE_to_WGS84(); // google earth uses WGS84\r\n\r\n\t\t//return ll;\r\n\r\n\t\treturn (new LatLngIE(Lat, Long)).to_WGS84();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {String}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tconst hundredkmE = Math.floor(this.x / 100000),\r\n\t\t\thundredkmN = Math.floor(this.y / 100000);\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\r\n\t\t\treturn _e_n_to_gr(GridCoordsIE.irishGrid[hundredkmE][hundredkmN],\r\n\t\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\t\tprecision ? precision : 1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @return {string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tconst hundredkmE = Math.floor(this.x / 100000), hundredkmN = Math.floor(this.y / 100000);\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\t\t\treturn (GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) + Math.floor((this.x % 100000) / 10000) + Math.floor((this.y % 100000) / 10000);\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n}\r\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsIE} from '../GridCoords/GridCoordsIE';\r\n\r\nexport class GridRefIE extends GridRef {\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.parse_well_formed = this.from_string;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  country = 'IE';\r\n\r\n  /**\r\n   *\r\n   * @type {typeof GridCoordsIE}\r\n   */\r\n  GridCoords = GridCoordsIE;\r\n\r\n  /**\r\n   * @type {GridCoordsIE}\r\n   */\r\n  gridCoords = null;\r\n\r\n  static gridLetter = {\r\n    A: [0, 4],\r\n    B: [1, 4],\r\n    C: [2, 4],\r\n    D: [3, 4],\r\n    F: [0, 3],\r\n    G: [1, 3],\r\n    H: [2, 3],\r\n    J: [3, 3],\r\n    L: [0, 2],\r\n    M: [1, 2],\r\n    N: [2, 2],\r\n    O: [3, 2],\r\n    Q: [0, 1],\r\n    R: [1, 1],\r\n    S: [2, 1],\r\n    T: [3, 1],\r\n    V: [0, 0],\r\n    W: [1, 0],\r\n    X: [2, 0],\r\n    Y: [3, 0]\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {string} rawGridRef\r\n   * @throws Error\r\n   */\r\n  from_string(rawGridRef) {\r\n    let trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/g, '').toUpperCase();\r\n\r\n    if (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n      // tetrad or quadrant\r\n\r\n      if (GridRefIE.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n        this.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n        trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n      } else {\r\n        this.tetradLetter = trimmedLocality.substr(trimmedLocality.length - 1);\r\n        trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n      }\r\n    }\r\n\r\n    this.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n    if (this.length > 0) {\r\n      if (this.tetradLetter || this.quadrantCode) {\r\n        // tetrad or quadrant suffix\r\n\r\n        if (this.tetradLetter) {\r\n          this.preciseGridRef = this.hectad + this.tetradLetter;\r\n          this.tetrad = this.preciseGridRef;\r\n          this.length = 2000; // 2km square\r\n          this.gridCoords.x += GridRefIE.tetradOffsets[this.tetradLetter][0];\r\n          this.gridCoords.y += GridRefIE.tetradOffsets[this.tetradLetter][1];\r\n        } else {\r\n          // quadrant\r\n          this.preciseGridRef = this.hectad + this.quadrantCode;\r\n          this.quadrant = this.preciseGridRef;\r\n          this.length = 5000; // 5km square\r\n          this.gridCoords.x += GridRefIE.quadrantOffsets[this.quadrantCode][0];\r\n          this.gridCoords.y += GridRefIE.quadrantOffsets[this.quadrantCode][1];\r\n        }\r\n      } else {\r\n        this.preciseGridRef = trimmedLocality;\r\n\r\n        if (this.length <= 1000) {\r\n          // calculate tetrad for precise gridref\r\n          this.set_tetrad();\r\n        }\r\n      }\r\n    } else {\r\n      this.error = true;\r\n      this.errorMessage = \"Irish grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n    }\r\n  }\r\n\r\n\r\n  static _IE_GRID_LETTERS = 'VQLFAWRMGBXSNHCYTOJD';\r\n\r\n  /**\r\n   *\r\n   * @param {string} gridRef nn/nnnn or [A-Z]nnnn or [A-Z]/nnnn (no other punctuation by this point), all upper-case\r\n   * @return boolean\r\n   */\r\n  parse_gr_string_without_tetrads(gridRef) {\r\n    let x, y, ref, char;\r\n\r\n    if (/^\\d{2}\\/(?:\\d\\d){1,5}$/.test(gridRef)) {\r\n      // nn/nnnn etc.\r\n      // regex used to avoid matching oddly malformed refs, such as \"32/SO763520\"\r\n\r\n      x = parseInt(gridRef.charAt(0), 10);\r\n      y = parseInt(gridRef.charAt(1), 10);\r\n\r\n      if (x > 3 || y > 4) {\r\n        console.log(\"bad grid square, ref='\" + gridRef + \"' (Ireland)\");\r\n        this.length = 0;\r\n        return false;\r\n      }\r\n\r\n      ref = gridRef.substr(3);\r\n      char = GridRefIE._IE_GRID_LETTERS.charAt((x * 5) + y);\r\n\r\n      x *= 100000;\r\n      y *= 100000;\r\n    } else {\r\n      // [A-Z]nnnn or [A-Z]/nnnn etc.\r\n      gridRef = gridRef.replace('/', '');\r\n\r\n      if (!/^[ABCDFGHJLMNOQRSTVWXY](?:\\d\\d){1,5}$/.test(gridRef)) {\r\n        this.length = 0;// mark error state\r\n        this.gridCoords = null;\r\n        return false;\r\n      }\r\n\r\n      if (gridRef) {\r\n        char = gridRef.charAt(0);\r\n        let p = GridRefIE._IE_GRID_LETTERS.indexOf(char);\r\n\r\n        if (p !== -1) {\r\n          x = Math.floor(p / 5) * 100000;\r\n          y = (p % 5) * 100000;\r\n        } else {\r\n          console.log(\"Bad grid ref grid-letter, ref='\" + gridRef + \"' (Ireland)\");\r\n          this.length = 0; // mark error\r\n          this.gridCoords = null;\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log('Bad (empty) Irish grid ref');\r\n        this.length = 0; // mark error\r\n        this.gridCoords = null;\r\n        return false;\r\n      }\r\n\r\n      ref = gridRef.substr(1);\r\n    }\r\n\r\n    switch (ref.length) {\r\n      case 2:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + (ref.charAt(0) * 10000),\r\n            y + (ref.charAt(1) * 10000)\r\n        );\r\n        this.length = 10000; //10 km square\r\n        this.hectad = char + ref;\r\n        break;\r\n\r\n      case 4:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 100) * 1000,\r\n            y + (ref % 100) * 1000\r\n        );\r\n        this.length = 1000; //1 km square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(2);\r\n        break;\r\n\r\n      case 6:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 1000) * 100,\r\n            y + (ref % 1000) * 100\r\n        );\r\n        this.length = 100; // 100m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(3);\r\n        break;\r\n\r\n      case 8:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 10000) * 10,\r\n            y + (ref % 10000) * 10\r\n        );\r\n        this.length = 10; //10m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(4);\r\n        break;\r\n\r\n      case 10:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 100000),\r\n            y + (ref % 100000)\r\n        );\r\n        this.length = 1; //1m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(5);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Bad grid ref length, ref='\" + gridRef + \"' (Ireland)\");\r\n        this.length = 0;\r\n        this.gridCoords = null;\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {GridRef} from './GridRef';\r\nimport {GridRefCI} from './GridRefCI';\r\nimport {GridRefGB} from './GridRefGB';\r\nimport {GridRefIE} from './GridRefIE';\r\n\r\n/**\r\n * returns a GridRef (GB, IE or CI-specific parser) or false\r\n * crudely tries to determine the country by trying each country in turn\r\n *\r\n * @param {string} rawGridRef\r\n * @return {(GridRef|boolean)}\r\n */\r\nGridRef.from_string = function(rawGridRef) {\r\n\tlet parser;\r\n\tlet cleanRef = rawGridRef.replace(/\\s+/g, '').toUpperCase();\r\n\r\n\tif (!cleanRef) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// if canonical ref form then be more efficient\r\n\tif (/^(?:[BCDFGHJLMNOQRSTVWXY]|[HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ]|W[VA])\\d{2}(?:[A-Z]|[NS][EW]|(?:\\d{2}){0,4})?$/.test(cleanRef)) {\r\n\t\t// have simple well-formed grid ref\r\n\r\n\t\tif (/^.\\d/.test(cleanRef)) {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t} else {\r\n\t\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\t\tparser = new GridRefCI();\r\n\t\t\t} else {\r\n\t\t\t\tparser = new GridRefGB();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparser.parse_well_formed(cleanRef);\r\n\r\n\t\treturn (parser.length && !parser.error) ? parser : false;\r\n\t} else {\r\n\t\tparser = new GridRefGB();\r\n\t\tparser.from_string(cleanRef);\r\n\r\n\t\tif (parser.length && !parser.error) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\tparser = new GridRefCI();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexport {GridRef};\r\n","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngGB as latLngGB} from '../LatLng/LatLngGB';\r\nimport {GridCoordsGB as gridCoordsGB} from '../GridCoords/GridCoordsGB';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsGB = (function() {return gridCoordsGB})();\r\nexport const LatLngGB = (function() {\r\n    /**\r\n     * converts lat and lon (OSGB36) to OS northings and eastings\r\n     *\r\n     * @returns {GridCoordsGB}\r\n     */\r\n    latLngGB.prototype.to_os_coords = function() {\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6377563.396; // OSGB semi-major axis\r\n        var b = 6356256.91; // OSGB semi-minor axis\r\n        var e0 = 400000; // easting of false origin\r\n        var n0 = -100000; // northing of false origin\r\n        var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n        var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n        var lam0 = -0.034906585039886591; // OSGB false east\r\n        var phi0 = 0.85521133347722145; // OSGB false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        return new GridCoordsGB(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngGB\r\n})();","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngIE as latLngIE} from '../LatLng/LatLngIE';\r\nimport {GridCoordsIE as gridCoordsIE} from '../GridCoords/GridCoordsIE';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsIE = (function() {return gridCoordsIE})();\r\nexport const LatLngIE = (function() {\r\n    /**\r\n     * converts lat and lon (modified Airy) to OSI northings and eastings\r\n     *\r\n     * @returns {GridCoordsIE}\r\n     */\r\n    latLngIE.prototype.to_os_coords = function() {\r\n        //var deg2rad = Math.PI / 180;\r\n        //var rad2deg = 180.0 / Math.PI;\r\n\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6377340.189;      // OSI semi-major\r\n        var b = 6356034.447;      // OSI semi-minor\r\n        var e0 = 200000;          // OSI easting of false origin\r\n        var n0 = 250000;          // OSI northing of false origin\r\n        var f0 = 1.000035;        // OSI scale factor on central meridian\r\n        var e2 = 0.00667054015;   // OSI eccentricity squared\r\n        var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n        var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        //return {x: Math.round(east), y: Math.round(north)};\r\n\r\n        /*\r\n        return (east > 0 && north > 0) ?\r\n            new GridCoordsIE(Math.round(east), Math.round(north))\r\n            :\r\n            null;\r\n        */\r\n        return new GridCoordsIE(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngIE\r\n})();","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngCI as latLngCI} from '../LatLng/LatLngCI';\r\nimport {GridCoordsCI as gridCoordsCI} from '../GridCoords/GridCoordsCI';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsCI = (function() {return gridCoordsCI})();\r\nexport const LatLngCI = (function() {\r\n    /**\r\n     * converts lat and lon to CI northings and eastings\r\n     *\r\n     * @returns GridCoordsCI\r\n     */\r\n    latLngCI.prototype.to_os_coords = function() {\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6378388.000;      // OSI semi-major\r\n        var b = 6356911.946;      // OSI semi-minor\r\n        var e0 = 500000;          // OSI easting of false origin\r\n        var n0 = 0;          // OSI northing of false origin\r\n        var f0 = 0.9996;        // OSI scale factor on central meridian\r\n        var e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n        var lam0 = -0.0523598775598;   // OSI false east\r\n        var phi0 = 0;    // OSI false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        //return {x: Math.round(east), y: Math.round(north)};\r\n        return new GridCoordsCI(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngCI\r\n})();"],"names":["$","require","exec","target","proto","forced","apply","call","uncurryThis","fixRegExpWellKnownSymbolLogic","fails","anObject","isCallable","toIntegerOrInfinity","toLength","toString","requireObjectCoercible","advanceStringIndex","getMethod","getSubstitution","regExpExec","REPLACE","wellKnownSymbol","max","Math","min","concat","push","stringIndexOf","indexOf","stringSlice","slice","REPLACE_KEEPS_$0","replace","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","re","result","groups","a","_","nativeReplace","maybeCallNative","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","this","replacer","undefined","string","rx","S","res","done","value","functionalReplace","global","fullUnicode","unicode","lastIndex","results","it","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","String","namedCaptures","replacerArgs","replacement","execCalled","isObject","DELEGATES_TO_EXEC","arguments","test","Error","un$Test","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","str","GridRef","tetradLetter","tetradLetters","substr","floor","gridCoords","x","y","preciseGridRef","tetrad","hectad","rawPrecision","minPrecision","E","J","P","U","Z","D","I","N","T","Y","C","H","M","X","B","G","L","R","W","A","F","K","Q","V","NW","NE","SW","SE","TO_STRING_TAG_SUPPORT","redefine","unsafe","setToStringTag","Reflect","getBuiltIn","bind","aConstructor","create","nativeConstruct","ObjectPrototype","NEW_TARGET_BUG","ARGS_BUG","FORCED","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","constructor","_typeof","Symbol","iterator","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","getPrototypeOf","stat","sham","construct","Target","args","newTarget","$args","PROPER_FUNCTION_NAME","PROPER","isPrototypeOf","$toString","regExpFlags","RegExpPrototype","RegExp","n$ToString","getFlags","NOT_GENERIC","source","flags","INCORRECT_NAME","name","rf","log","LOG10E","log10","isArray","isConstructor","toAbsoluteIndex","lengthOfArrayLike","toIndexedObject","createProperty","arrayMethodHasSpeciesSupport","un$Slice","HAS_SPECIES_SUPPORT","SPECIES","Array","start","end","n","k","fin","deg2rad","PI","rad2deg","LatLng","lat","lng","lon","e","h","a2","e2","xp","yp","zp","xr","yr","zr","s","sf","v","sqrt","sin","cos","z","xrot","yrot","zrot","hx","hy","hz","atan","errvalue","lat0","abs","bf0","phi0","phi","LatLngWGS84","LatLngGB","eSquared","sinPhi","lambda","ry","xB","yB","zB","phiN","sinPhiN","latLngWGS84","radWGlat","radWGlon","newLon","newLat","LatLngCI","phip","lambdap","latlng","_transform","LatLngIE","latLngRadians","GridCoords","os","from_wgs84","to_os_coords","is_gb_hectad","osI","osCi","easting","northing","charAt","_e_n_to_gr","letters","precision","eString","nString","calculate_tetrad","logPrecision","round","GridCoordsCI","f0","af0","Et","phid","_initial_lat","nu","rho","eta2","tlat2","tan","tlat4","pow","tlat6","clatm1","VII","VIII","IX","XI","XII","XIIA","convert_to_wgs","substring","north","n0","phi1","_Marc","phi2","ind","GridCoordsGB","hundredkmE","hundredkmN","firstLetter","secondLetter","fromCharCode","gbHectads","to_hectad","E0","phiPrime","sinphiPrime2","tanphiPrime2","secphiPrime","etaSquared","to_WGS84","GridRefCI","parse_well_formed","_this","from_string","rawGridRef","enl","trimmedLocality","toUpperCase","tetradCode","quadrantOffsets","hasOwnProperty","quadrantCode","gridref_string_to_e_n_l","to_gridref","tetradOffsets","quadrant","set_tetrad","error","errorMessage","gridRef","northOffset","chars","console","ref","parseInt","MATCH","nativeMatch","regexp","matcher","matchStr","GridRefGB","parse_wellformed_gb_gr_string_no_tetrads","match","parse_gr_string_without_tetrads","matches","letterMapping","char1","char2","GridCoordsIE","k0","eccSquared","e1","eccPrimeSquared","mu","phi1Rad","N1","T1","C1","R1","Lat","Long","irishGrid","GridRefIE","char","_IE_GRID_LETTERS","parser","cleanRef","gridCoordsGB","latLngGB","lam","slat2","IV","clat3","clat5","VI","east","II","III","IIIA","gridCoordsIE","latLngIE","gridCoordsCI","latLngCI"],"mappings":"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"}