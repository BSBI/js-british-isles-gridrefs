{"version":3,"file":"gridrefutils.js","sources":["../src/GridRef/GridRef.js","../src/constants.js","../src/LatLng/LatLng.js","../src/LatLng/LatLngWGS84.js","../src/GridCoords/GridCoordsGB.js","../src/LatLng/LatLngGB.js","../src/LatLng/LatLngCI.js","../src/GridCoords/GridCoordsIE.js","../src/LatLng/LatLngIE.js","../src/GridCoords/GridCoords.js","../src/GridCoords/GridCoordsCI.js","../src/GridRef/GridRefCI.js","../src/GridRef/GridRefGB.js","../src/GridRef/GridRefIE.js","../src/GridRef/parser.js"],"sourcesContent":["\r\nexport const GridRef = (function() {\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst GridRef = function() {};\r\n\r\n/**\r\n * x,y offsets (in metres) for tetrad letter codes\r\n * @type {Object.<string,Array.<number>>}\r\n */\r\nGridRef.tetradOffsets = {\r\n  E: [0,8000], J: [2000,8000], P: [4000,8000], U: [6000,8000], Z: [8000,8000],\r\n  D: [0,6000], I: [2000,6000], N: [4000,6000], T: [6000,6000], Y: [8000,6000],\r\n  C: [0,4000], H: [2000,4000], M: [4000,4000], S: [6000,4000], X: [8000,4000],\r\n  B: [0,2000], G: [2000,2000], L: [4000,2000], R: [6000,2000], W: [8000,2000],\r\n  A: [0,0], F: [2000,0], K: [4000,0], Q: [6000,0], V: [8000,0]\r\n};\r\n\r\n/**\r\n * x,y offsets (in metres) for quadrant codes\r\n * @var array\r\n */\r\nGridRef.quadrantOffsets = {\r\n  NW: [0,5000],\r\n  NE: [5000,5000],\r\n  SW: [0,0],\r\n  SE: [5000,0]\r\n};\r\n\r\n/**\r\n * numerical mapping of letters to numbers\r\n * 'I' is omitted\r\n * @var array\r\n */\r\nGridRef.letterMapping = {\r\n  A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, J: 8, K: 9,\r\n  L: 10, M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18,\r\n  U: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n};\r\n\r\n/**\r\n * tetrad letters ordered by easting then northing (steps of 2000m)\r\n * i.e. (x*4) + y\r\n *\r\n * where x and y are integer of (10km remainder / 2)\r\n *\r\n * @var string\r\n */\r\nGridRef.tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n/**\r\n *\r\n * @var string\r\n */\r\nGridRef.prototype.preciseGridRef = '';\r\n\r\n/**\r\n * length in m (0 marks an invalid value)\r\n *\r\n * @var number\r\n */\r\nGridRef.prototype.length = 0;\r\n\r\n/**\r\n * @var string\r\n */\r\nGridRef.prototype.hectad = '';\r\n\r\n/**\r\n * 10km ref with tetrad suffix or ''\r\n * e.g. SD59A\r\n * @var string\r\n */\r\nGridRef.prototype.tetrad = '';\r\n\r\n/**\r\n *\r\n * @var string\r\n */\r\nGridRef.prototype.tetradLetter = '';\r\n\r\n/**\r\n * quadrant gridref(e.g. NZ34NW)\r\n * only set if gridref is defined at 5km or <=1km precision\r\n * undefined by default so need to use getter\r\n *\r\n * read using GridRef::get_quadrant\r\n *\r\n * @var string\r\n */\r\nGridRef.prototype.quadrant = '';\r\n\r\n/**\r\n * quadrant code suffix(e.g. NW, NE, SW, SE)\r\n *\r\n * @var string\r\n */\r\nGridRef.prototype.quadrantCode = '';\r\n\r\n/**\r\n * update tetrad using Easting/Northing values (metres)\r\n * hectad should have been set prior to call\r\n */\r\nGridRef.prototype.set_tetrad = function() {\r\n  this.tetradLetter = GridRef.tetradLetters.substr(\r\n    ((Math.floor((this.gridCoords.x % 10000) / 1000) >> 1) * 5) + (Math.floor((this.gridCoords.y % 10000) / 1000) >> 1)\r\n    , 1);\r\n\r\n  if (!this.tetradLetter) {\r\n    throw new Error(\"Failed to get tetrad letter when processing '\" + this.preciseGridRef + \"', easting=\" + this.gridCoords.x + \" northing=\" + this.gridCoords.y);\r\n  }\r\n  this.tetrad = this.hectad + this.tetradLetter;\r\n};\r\n\r\nGridRef.get_normalized_precision = function(rawPrecision, minPrecision) {\r\n  return rawPrecision > 2000 ? 10000 :\r\n    (rawPrecision > 1000 ? 2000 :\r\n        (rawPrecision > 100 ? 1000 :\r\n            (rawPrecision > 10 ? 100 :\r\n                (rawPrecision > 1 ? 10 :\r\n                    minPrecision ? minPrecision : 1\r\n                )\r\n            )\r\n        )\r\n    );\r\n};\r\n\r\nreturn GridRef;\r\n})();","export const deg2rad = Math.PI / 180;\r\nexport const rad2deg = 180.0 / Math.PI;\r\n\r\n","import { deg2rad } from '../constants';\r\n\r\nexport const LatLng = (function() {\r\n\r\n/**\r\n * represents lat lng\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nconst LatLng = function (lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n\r\nLatLng._transform = function(lat, lon, a, e, h, a2, e2, xp, yp, zp, xr, yr, zr, s) {\r\n\t// convert to cartesian; lat, lon are radians\r\n\tvar sf = s * 0.000001;\r\n\tvar v = a / (Math.sqrt(1 - (e *(Math.sin(lat) * Math.sin(lat)))));\r\n\tvar x = (v + h) * Math.cos(lat) * Math.cos(lon);\r\n\tvar y = (v + h) * Math.cos(lat) * Math.sin(lon);\r\n\tvar z = ((1 - e) * v + h) * Math.sin(lat);\r\n\t// transform cartesian\r\n\tvar xrot = (xr / 3600) * deg2rad;\r\n\tvar yrot = (yr / 3600) * deg2rad;\r\n\tvar zrot = (zr / 3600) * deg2rad;\r\n\tvar hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n\tvar hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n\tvar hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\t// Convert back to lat, lon\r\n\tlon = Math.atan(hy / hx);\r\n\tvar p = Math.sqrt((hx * hx) + (hy * hy));\r\n\tlat = Math.atan(hz / (p * (1 - e2)));\r\n\tv = a2 / (Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat))));\r\n\tvar errvalue = 1.0;\r\n\tvar lat0 = 0;\r\n\twhile (errvalue > 0.001) {\r\n\t\tlat0 = Math.atan((hz + e2 * v * Math.sin(lat)) / p);  \r\n\t\terrvalue = Math.abs(lat0 - lat);\r\n\t\tlat = lat0;\r\n\t}\r\n\t//h = p / Math.cos(lat) - v;\r\n\t//var geo = { latitude: lat, longitude: lon, height: h };  // object to hold lat and lon\r\n\treturn(new LatLng(lat, lon));\r\n};\r\n\r\n//helper\r\nLatLng._Marc = function (bf0, n, phi0, phi) {\r\n    return bf0 * (((1 + n + ((5 / 4) * (n * n)) + ((5 / 4) * (n * n * n))) * (phi - phi0))\r\n- (((3 * n) + (3 * (n * n)) + ((21 / 8) * (n * n * n))) * (Math.sin(phi - phi0)) * (Math.cos(phi + phi0)))\r\n+ ((((15 / 8) * (n * n)) + ((15 / 8) * (n * n * n))) * (Math.sin(2 * (phi - phi0))) * (Math.cos(2 * (phi + phi0))))\r\n- (((35 / 24) * (n * n * n)) * (Math.sin(3 * (phi - phi0))) * (Math.cos(3 * (phi + phi0)))));\r\n};\r\n\r\nreturn LatLng;\r\n})();","\r\n/**\r\n * represents lat lng as WGS84 (google map form)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nexport const LatLngWGS84 = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngGB } from '../LatLng/LatLngGB';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport const GridCoordsGB = (function() {\r\n/**\r\n *\r\n * @param {number} easting metres\r\n * @param {number} northing metres\r\n * @constructor\r\n * @extends GridCoords\r\n * @returns {GridCoordsGB}\r\n */\r\nconst GridCoordsGB = function(easting, northing) {\r\n  this.x = easting;\r\n  this.y = northing;\r\n};\r\n\r\nGridCoordsGB.prototype = new GridCoords();\r\nGridCoordsGB.prototype.constructor = GridCoordsGB;\r\nGridCoordsGB.prototype.country = 'GB';\r\n\r\nGridCoordsGB.gbHectads = '';\r\n\r\n/**\r\n * \r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nGridCoordsGB.prototype.to_gridref = function (precision) {\r\n\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(this.x / 100000);\r\n\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(this.y / 100000);\r\n\tvar firstLetter = '';\r\n\tif (hundredkmN < 5) {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t} else if (hundredkmN < 10) {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t} else {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t}\r\n\r\n\tvar secondLetter = '';\r\n\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\t\r\n\tif (index >= 73) {\r\n\t\tindex++;\r\n\t}\r\n\t\r\n\tsecondLetter = String.fromCharCode(index);\r\n\t\r\n\treturn _e_n_to_gr(\r\n\t\tfirstLetter + secondLetter, \r\n\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t(this.y - (100000 * hundredkmN)),\r\n\t\tprecision ? precision : 1\r\n\t);\r\n};\r\n\r\n/**\r\n * \r\n * @return {string} hectad\r\n */\r\nGridCoordsGB.prototype.to_hectad = function() {\r\n\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(easting / 100000);\r\n\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(northing / 100000);\r\n\tvar firstLetter = \"\";\r\n\tif (hundredkmN < 5) {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t} else if (hundredkmN < 10) {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t} else {\r\n\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t}\r\n\r\n\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\t\r\n\tif (index >= 73) {\r\n\t\tindex++;\r\n\t}\r\n\t\r\n\treturn firstLetter + \r\n\t\tString.fromCharCode(index) + // secondLetter\r\n\t\t(((this.x - (100000 * hundredkmE)) / 10000) | 0) + \r\n\t\t(((this.y - (100000 * hundredkmN)) / 10000) | 0);\r\n};\r\n\r\n/**\r\n * \r\n * @returns {Boolean}\r\n */\r\nGridCoordsGB.prototype.is_gb_hectad = function() {\r\n\treturn GridCoordsGB.gbHectads.indexOf(this.to_hectad()) !== -1;\r\n};\r\n\r\n/**\r\n * convert easting,northing to a WGS84 lat lng\r\n * \r\n * @returns {LatLngWGS84}\r\n */\r\nGridCoordsGB.prototype.to_latLng = function() {\r\n\t//airy1830 = RefEll::airy1830(); //new RefEll(6377563.396, 6356256.909);\r\n\t//var OSGB_F0  = 0.9996012717;\r\n\t//var N0       = -100000.0;\r\n\tvar E0       = 400000.0;\r\n\tvar phi0     = 0.85521133347722; //deg2rad(49.0);\r\n\tvar lambda0  = -0.034906585039887; //deg2rad(-2.0);\r\n\tvar a        = 6377563.396; // airy1830->maj;\r\n\t//var b        = 6356256.909; // airy1830->min;\r\n\tvar eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830->ecc;\r\n\tvar phi      = 0.0;\r\n\tvar lambda   = 0.0;\r\n\tvar E        = this.x;\r\n\tvar N        = this.y;\r\n\tvar n        = 0.0016732203289875; //(a - b) / (a + b);\r\n\tvar M;\r\n\tvar phiPrime = ((N + 100000) / (a * 0.9996012717)) + phi0;\r\n\r\n\t// 15 / 8 === 1.875\r\n\t// 5 / 4 === 1.25\r\n\t// 21 / 8 === 2.625\r\n\t\r\n\tdo {\r\n\t\tM = N + 100000 - (\r\n\t\t\t6353722.489 // (b * OSGB_F0)\r\n\t\t\t* ((1.0016767257674 // * (((1 + n + (1.25 * n * n) + (1.25 * n * n * n))\r\n\t\t\t* (phiPrime - phi0))\r\n\t\t\t- (0.00502807228247412 // - (((3 * n) + (3 * n * n) + (2.625 * n * n * n))\r\n\t\t\t* Math.sin(phiPrime - phi0)\r\n\t\t\t* Math.cos(phiPrime + phi0))\r\n\t\t\t+ (((1.875 * n * n) + (1.875 * n * n * n))\r\n\t\t\t* Math.sin(2.0 * (phiPrime - phi0))\r\n\t\t\t* Math.cos(2.0 * (phiPrime + phi0)))\r\n\t\t\t- (((35.0 / 24.0) * n * n * n)\r\n\t\t\t* Math.sin(3.0 * (phiPrime - phi0))\r\n\t\t\t* Math.cos(3.0 * (phiPrime + phi0)))));\r\n\t\r\n\t\tphiPrime += M / 6375020.48098897; // (N - N0 - M) / (a * OSGB_F0);\r\n\t} while (M >= 0.001);\r\n\r\n\tvar sinphiPrime2 = Math.sin(phiPrime) * Math.sin(phiPrime);\r\n\tvar tanphiPrime2 = Math.tan(phiPrime) * Math.tan(phiPrime);\r\n\tvar secphiPrime = 1.0 / Math.cos(phiPrime);\r\n\r\n\tvar v = a * 0.9996012717 * Math.pow(1.0 - eSquared * sinphiPrime2, -0.5);\r\n\r\n\tvar rho =\r\n\t\ta\r\n\t\t* 0.9996012717\r\n\t\t* (1.0 - eSquared)\r\n\t\t* Math.pow(1.0 - eSquared * sinphiPrime2, -1.5);\r\n\tvar etaSquared = (v / rho) - 1.0;\r\n\tvar VII = Math.tan(phiPrime) / (2 * rho * v);\r\n\tvar VIII =\r\n\t\t(Math.tan(phiPrime) / (24.0 * rho * Math.pow(v, 3.0)))\r\n\t\t* (5.0\r\n\t\t+ (3.0 * tanphiPrime2)\r\n\t\t+ etaSquared\r\n\t\t- (9.0 * tanphiPrime2 * etaSquared));\r\n\tvar IX =\r\n\t\t(Math.tan(phiPrime) / (720.0 * rho * Math.pow(v, 5.0)))\r\n\t\t* (61.0\r\n\t\t+ (90.0 * tanphiPrime2)\r\n\t\t+ (45.0 * tanphiPrime2 * tanphiPrime2));\r\n\tvar X = secphiPrime / v;\r\n\tvar XI =\r\n\t\t(secphiPrime / (6.0 * v * v * v))\r\n\t\t* ((v / rho) + (2 * tanphiPrime2));\r\n\tvar XII =\r\n\t\t(secphiPrime / (120.0 * Math.pow(v, 5.0)))\r\n\t\t* (5.0\r\n\t\t+ (28.0 * tanphiPrime2)\r\n\t\t+ (24.0 * tanphiPrime2 * tanphiPrime2));\r\n\tvar XIIA =\r\n\t\t(secphiPrime / (5040.0 * Math.pow(v, 7.0)))\r\n\t\t* (61.0\r\n\t\t+ (662.0 * tanphiPrime2)\r\n\t\t+ (1320.0 * tanphiPrime2 * tanphiPrime2)\r\n\t\t+ (720.0\r\n\t\t* tanphiPrime2\r\n\t\t* tanphiPrime2\r\n\t\t* tanphiPrime2));\r\n\tphi =\r\n\t\tphiPrime\r\n\t\t- (VII * Math.pow(E - E0, 2.0))\r\n\t\t+ (VIII * Math.pow(E - E0, 4.0))\r\n\t\t- (IX * Math.pow(E - E0, 6.0));\r\n\tlambda =\r\n\t\tlambda0\r\n\t\t+ (X * (E - E0))\r\n\t\t- (XI * Math.pow(E - E0, 3.0))\r\n\t\t+ (XII * Math.pow(E - E0, 5.0))\r\n\t\t- (XIIA * Math.pow(E - E0, 7.0));\r\n\r\n\treturn (new LatLngGB(rad2deg * phi, rad2deg * lambda)).to_WGS84();\r\n};\r\nreturn GridCoordsGB;\r\n})();","import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\nimport { GridCoordsGB } from '../GridCoords/GridCoordsGB';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\nexport const LatLngGB = (function() {\r\n/**\r\n * represents lat lng as OSGB1936 (Ordnance Survey projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nconst LatLngGB = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n\r\n/**\r\n * \r\n * @returns {LatLngWGS84}\r\n */\r\nLatLngGB.prototype.to_WGS84 = function () {\r\n\t//airy1830 = new RefEll(6377563.396, 6356256.909);\r\n\tvar a        = 6377563.396; //airy1830.maj;\r\n\t//var b        = 6356256.909; //airy1830.min;\r\n\tvar eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830.ecc;\r\n\tvar phi = this.lat * deg2rad; // (Math.PI / 180)(this.lat);\r\n\tvar sinPhi = Math.sin(phi);\r\n\tvar lambda = this.lng * deg2rad; // (Math.PI / 180)(this.lng);\r\n\tvar v = a / (Math.sqrt(1 - eSquared * (sinPhi * sinPhi)));\r\n\t//H = 0; // height\r\n\tvar x = v * Math.cos(phi) * Math.cos(lambda);\r\n\tvar y = v * Math.cos(phi) * Math.sin(lambda);\r\n\tvar z = ((1 - eSquared) * v) * sinPhi;\r\n\r\n\tvar tx =        446.448;\r\n\tvar ty =       -124.157;\r\n\tvar tz =        542.060;\r\n\tvar s  =         -0.0000204894;\r\n\tvar rx = 0.000000728190110241429; // (Math.PI / 180)( 0.00004172222);\r\n\tvar ry = 0.000001197489772948010; // (Math.PI / 180)( 0.00006861111);\r\n\tvar rz = 0.000004082615892268120; // (Math.PI / 180)( 0.00023391666);\r\n\r\n\tvar xB = tx + (x * (1 + s)) + (-rx * y)     + (ry * z);\r\n\tvar yB = ty + (rz * x)      + (y * (1 + s)) + (-rx * z);\r\n\tvar zB = tz + (-ry * x)     + (rx * y)      + (z * (1 + s));\r\n\r\n\t//wgs84 = new RefEll(6378137.000, 6356752.3141);\r\n\ta        = 6378137.000; // wgs84.maj;\r\n\t//var b        = 6356752.3141; // wgs84.min;\r\n\teSquared = 0.00669438003;// ((maj * maj) - (min * min)) / (maj * maj); //wgs84.ecc;\r\n\r\n\t//lambdaB = (180 / Math.PI)(Math.atan(yB / xB));\r\n\tvar p = Math.sqrt((xB * xB) + (yB * yB));\r\n\tvar phiN = Math.atan(zB / (p * (1 - eSquared)));\r\n\r\n\tfor (var i = 1; i < 10; ++i) {\r\n\t\tvar sinPhiN = Math.sin(phiN); // this must be in the for loop as phiN is variable\r\n\t\tphiN = Math.atan((zB + (eSquared * (a / (Math.sqrt(1 - eSquared * (sinPhiN * sinPhiN)))) * sinPhiN)) / p);\r\n\t}\r\n\r\n\t//this.lat = rad2deg * phiN;\r\n\t//this.lng = rad2deg * (Math.atan(yB / xB)); // lambdaB;\r\n\t\r\n\treturn new LatLngWGS84(rad2deg * phiN, rad2deg * (Math.atan(yB / xB)));\r\n};\r\n\r\n/**\r\n * converts lat and lon (OSGB36) to OS northings and eastings\r\n * \r\n * @returns {GridCoordsGB}\r\n */\r\nLatLngGB.prototype.to_os_coords = function() {\r\n    var phi = this.lat * deg2rad; // convert latitude to radians\r\n    var lam = this.lng * deg2rad; // convert longitude to radians\r\n    var a = 6377563.396; // OSGB semi-major axis\r\n    var b = 6356256.91; // OSGB semi-minor axis\r\n    var e0 = 400000; // easting of false origin\r\n    var n0 = -100000; // northing of false origin\r\n    var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n    var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n    var lam0 = -0.034906585039886591; // OSGB false east\r\n    var phi0 = 0.85521133347722145; // OSGB false north\r\n    var af0 = a * f0;\r\n    var bf0 = b * f0;\r\n\r\n    // easting\r\n    var slat2 = Math.sin(phi) * Math.sin(phi);\r\n    var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n    var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n    var eta2 = (nu / rho) - 1;\r\n    var p = lam - lam0;\r\n    var IV = nu * Math.cos(phi);\r\n    var clat3 = Math.pow(Math.cos(phi), 3);\r\n    var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n    var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n    var clat5 = Math.pow(Math.cos(phi), 5);\r\n    var tlat4 = Math.pow(Math.tan(phi), 4);\r\n    var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n    var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n    // northing\r\n    var n = (af0 - bf0) / (af0 + bf0);\r\n    var M = LatLng._Marc(bf0, n, phi0, phi);\r\n    var I = M + (n0);\r\n    var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n    var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n    var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n    var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\treturn new GridCoordsGB(Math.round(east), Math.round(north));\r\n};\r\n\r\n/**\r\n * \r\n * @param {LatLngWGS84} latLngWGS84\r\n * @returns {LatLngGB}\r\n */\r\nLatLngGB.from_wgs84 = function (latLngWGS84) {\r\n\t\r\n    //first off convert to radians\r\n    var radWGlat = latLngWGS84.lat * deg2rad;\r\n    var radWGlon = latLngWGS84.lng * deg2rad;\r\n    //these are the values for WGS84(GRS80) to OSGB36(Airy)\r\n    var a = 6378137; // WGS84_AXIS\r\n    var e = 0.00669438037928458; // WGS84_ECCENTRIC\r\n    //var h = height; // height above datum (from GPGGA sentence)\r\n    var h = 0;\r\n    var a2 = 6377563.396; // OSGB_AXIS\r\n    var e2 = 0.0066705397616; // OSGB_ECCENTRIC \r\n    var xp = -446.448;\r\n    var yp = 125.157;\r\n    var zp = -542.06;\r\n    var xr = -0.1502;\r\n    var yr = -0.247;\r\n    var zr = -0.8421;\r\n    var s = 20.4894;\r\n\r\n    // convert to cartesian; lat, lon are in radians\r\n    var sf = s * 0.000001;\r\n    var v = a / (Math.sqrt(1 - (e * Math.sin(radWGlat) * Math.sin(radWGlat))));\r\n    var x = (v + h) * Math.cos(radWGlat) * Math.cos(radWGlon);\r\n    var y = (v + h) * Math.cos(radWGlat) * Math.sin(radWGlon);\r\n    var z = ((1 - e) * v + h) * Math.sin(radWGlat);\r\n\r\n    // transform cartesian\r\n    var xrot = (xr / 3600) * deg2rad;\r\n    var yrot = (yr / 3600) * deg2rad;\r\n    var zrot = (zr / 3600) * deg2rad;\r\n    var hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n    var hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n    var hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\r\n    // Convert back to lat, lon\r\n    var newLon = Math.atan(hy / hx);\r\n    var p = Math.sqrt((hx * hx) + (hy * hy));\r\n    var newLat = Math.atan(hz / (p * (1 - e2)));\r\n    v = a2 / (Math.sqrt(1 - e2 * (Math.sin(newLat) * Math.sin(newLat))));\r\n    var errvalue = 1.0;\r\n    var lat0 = 0;\r\n    while (errvalue > 0.001) {\r\n        lat0 = Math.atan((hz + e2 * v * Math.sin(newLat)) / p);\r\n        errvalue = Math.abs(lat0 - newLat);\r\n        newLat = lat0;\r\n    }\r\n\r\n    return new LatLngGB(newLat * rad2deg, newLon * rad2deg);\r\n};\r\nreturn LatLngGB;\r\n})();","import { LatLng} from './LatLng';\r\nimport { GridCoordsCI } from '../GridCoords/GridCoordsCI';\r\nimport { rad2deg, deg2rad } from '../constants';\r\n\r\nexport const LatLngCI = /*@__PURE__*/(function() {\r\n/**\r\n * represents lat lng as INT24 (CI grid projection)\r\n *\r\n * @constructor\r\n * @param {number} lat\r\n * @param {number} lng\r\n */\r\nconst LatLngCI = function(lat, lng) {\r\n\tthis.lat = lat;\r\n\tthis.lng = lng;\r\n};\r\n\r\n/**\r\n * converts lat and lon to CI northings and eastings\r\n * \r\n * @returns GridCoordsCI\r\n */\r\nLatLngCI.prototype.to_os_coords = function() {\r\n\tvar phi = this.lat * deg2rad; // convert latitude to radians\r\n\tvar lam = this.lng * deg2rad; // convert longitude to radians\r\n\tvar a = 6378388.000;      // OSI semi-major\r\n\tvar b = 6356911.946;      // OSI semi-minor\r\n\tvar e0 = 500000;          // OSI easting of false origin\r\n\tvar n0 = 0;          // OSI northing of false origin\r\n\tvar f0 = 0.9996;        // OSI scale factor on central meridian\r\n\tvar e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n\tvar lam0 = -0.0523598775598;   // OSI false east\r\n\tvar phi0 = 0;    // OSI false north\r\n\tvar af0 = a * f0;\r\n\tvar bf0 = b * f0;\r\n\r\n\t// easting\r\n\tvar slat2 = Math.sin(phi) * Math.sin(phi);\r\n\tvar nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\tvar rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\tvar eta2 = (nu / rho) - 1;\r\n\tvar p = lam - lam0;\r\n\tvar IV = nu * Math.cos(phi);\r\n\tvar clat3 = Math.pow(Math.cos(phi), 3);\r\n\tvar tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\tvar V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\tvar clat5 = Math.pow(Math.cos(phi), 5);\r\n\tvar tlat4 = Math.pow(Math.tan(phi), 4);\r\n\tvar VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\tvar east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n\t// northing\r\n\tvar n = (af0 - bf0) / (af0 + bf0);\r\n\tvar M = LatLng._Marc(bf0, n, phi0, phi);\r\n\tvar I = M + (n0);\r\n\tvar II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\tvar III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\tvar IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\tvar north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\t\t//return {x: Math.round(east), y: Math.round(north)};\r\n\treturn new GridCoordsCI(Math.round(east), Math.round(north));\r\n};\r\n\r\n/**\r\n * \r\n * @param {LatLngWGS84} latLngWGS84\r\n * @returns {LatLngCI}\r\n */\r\nLatLngCI.from_wgs84 = function (latLngWGS84) {\r\n\tvar phip = latLngWGS84.lat * deg2rad;\r\n\tvar lambdap = latLngWGS84.lng * deg2rad;\r\n\t\r\n\tvar CI_AXIS = 6378388.000;\r\n\tvar CI_ECCENTRIC = 0.0067226700223333;\r\n\t\r\n\tvar WGS84_AXIS = 6378137;\r\n\tvar WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t\t\r\n\t/*\r\n\t * CI\r\n\t a = 6378388.000;       // INT24 ED50 semi-major\r\n\t b = 6356911.946;       // INT24 ED50 semi-minor \r\n\t e0 = 500000;           // CI easting of false origin\r\n\t n0 = 0;                // CI northing of false origin\r\n\t f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t lam0 = -0.0523598775598;  // CI false east\r\n\t phi0 = 0 * deg2rad;       // CI false north \r\n\t */\r\n\t\r\n\tvar height = 0;\r\n\tvar latlng =  LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, CI_AXIS, CI_ECCENTRIC, \r\n\t\t83.901, 98.127, 118.635, 0, 0, 0, 0);\r\n\t \r\n\treturn new LatLngCI(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n};\r\nreturn LatLngCI;\r\n})();","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngIE } from '../LatLng/LatLngIE';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport const GridCoordsIE = (function() {\r\n\t\r\n/**\r\n *\r\n * @param {number} easting metres\r\n * @param {number} northing metres\r\n * @constructor\r\n * @returns {GridCoordsIE}\r\n */\r\nconst GridCoordsIE = function(easting, northing) {\r\n  this.x = easting;\r\n  this.y = northing;\r\n};\r\n\r\nGridCoordsIE.prototype = new GridCoords();\r\nGridCoordsIE.prototype.constructor = GridCoordsIE;\r\nGridCoordsIE.prototype.country = 'IE';\r\n\r\nGridCoordsIE.irishGrid = {\r\n     0 : ['V','Q','L','F','A'],\r\n     1 : ['W','R','M','G','B'],\r\n     2 : ['X','S','N','H','C'],\r\n     3 : ['Y','T','O','J','D']\r\n};\r\n\r\n/**\r\n * convert easting,northing to a WGS84 lat lng\r\n * \r\n * @returns {LatLngWGS84}\r\n */\r\nGridCoordsIE.prototype.to_latLng = function() {\r\n\t//converts OSI coords to lat/long.\r\n\r\n\t// modified from OSGBtoLL, Equations from USGS Bulletin 1532\r\n\t//East Longitudes are positive, West longitudes are negative.\r\n\t//North latitudes are positive, South latitudes are negative\r\n\t//Lat and Long are in decimal degrees.\r\n\t//Written by Chuck Gantz- chuck.gantz@globalstar.com\r\n\r\n\t// php transliteration by TH\r\n\r\n\t//OSIENorthing = this.y;\r\n\t//OSIEEasting = this.x;\r\n\r\n\t//constants\r\n\t//PI = 3.14159265;\r\n\t//FOURTHPI = M_PI / 4.0;\r\n\t//DEG2RAD = M_PI / 180.0;\r\n\t//RAD2DEG = 180.0 / M_PI;\r\n\t// ////////////////\r\n\r\n\tvar k0 = 1.000035; // scale factor\r\n\t//double a;\r\n\t//double eccPrimeSquared;\r\n\t//double N1, T1, C1, R1, D, M;\r\n\tvar LongOrigin = -8.0;\r\n\t//LatOrigin = 53.5;\r\n\t//LatOriginRad = LatOrigin * DEG2RAD;\r\n\r\n\t//UK\r\n\t//majoraxis=6377563.396; //Airy\r\n\t//a=6377563.396;\r\n\t//minoraxis = 6356256.91; //Airy\r\n\r\n\t//IE\r\n\t//majoraxis = 6377340.189; //Airy\r\n\tvar a = 6377340.189;\r\n\t//minoraxis = 6356034.447; //Airy\r\n\r\n\t//eccSquared = (majoraxis * majoraxis - minoraxis * minoraxis) / (majoraxis * majoraxis);\r\n\tvar eccSquared = 0.0066705402933363;\r\n\r\n\t//e1 = (1-Math.sqrt(1-eccSquared))/(1+Math.sqrt(1-eccSquared));\r\n\tvar e1 = 0.0016732203841521;\r\n\t//error_log(\"eccSquared={eccSquared} e1={e1}\");\r\n\r\n\t//only calculate M0 once since it is based on the origin of the OSGB projection, which is fixed\r\n\t//M0 = a*((1\t- eccSquared/4\t\t- 3*eccSquared*eccSquared/64\t- 5*eccSquared*eccSquared*eccSquared/256)*LatOriginRad\r\n\t//\t- (3*eccSquared/8\t+ 3*eccSquared*eccSquared/32\t+ 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(2*LatOriginRad)\r\n\t//\t+ (15*eccSquared*eccSquared/256 + 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(4*LatOriginRad)\r\n\t//\t- (35*eccSquared*eccSquared*eccSquared/3072)*Math.sin(6*LatOriginRad));\r\n\t//error_log(\"M0 = {M0}\");\r\n\tvar M0 = 5929615.3530033;\r\n\r\n\t//OSGBSquareToRefCoords(OSGBZone, RefEasting, RefNorthing); // Assume supplied MapInfo northing and easting take this into account\r\n\tvar x = this.x - 200000.0; //remove 400,000 meter false easting for longitude\r\n\tvar y = this.y - 250000.0; //remove 100,000 meter false easting for longitude\r\n\r\n\t//eccPrimeSquared = (eccSquared)/(1.0-eccSquared);\r\n\tvar eccPrimeSquared = 0.0067153352074207;\r\n\t//error_log(\"eccPrimeSquared={eccPrimeSquared}\");\r\n\r\n\tvar M = M0 + y / k0;\r\n\tvar mu = M/(a*(1-eccSquared/4-3*eccSquared*eccSquared/64-5*eccSquared*eccSquared*eccSquared/256));\r\n\r\n\tvar phi1Rad = mu\t+ (3*e1/2-27*e1*e1*e1/32)*Math.sin(2*mu)\r\n\t\t+ (21*e1*e1/16-55*e1*e1*e1*e1/32)*Math.sin(4*mu)\r\n\t\t+ (151*e1*e1*e1/96)*Math.sin(6*mu);\r\n\t//phi1 = phi1Rad*RAD2DEG;\r\n\r\n\tvar N1 = a/Math.sqrt(1-eccSquared*Math.sin(phi1Rad)*Math.sin(phi1Rad));\r\n\tvar T1 = Math.tan(phi1Rad)*Math.tan(phi1Rad);\r\n\tvar C1 = eccPrimeSquared*Math.cos(phi1Rad)*Math.cos(phi1Rad);\r\n\tvar R1 = a*(1-eccSquared)/Math.pow(1-eccSquared*Math.sin(phi1Rad)*Math.sin(phi1Rad), 1.5);\r\n\tvar D = x/(N1*k0);\r\n\r\n\tvar Lat = phi1Rad - (N1*Math.tan(phi1Rad)/R1)*(D*D/2-(5+3*T1+10*C1-4*C1*C1-9*eccPrimeSquared)*D*D*D*D/24\r\n\t\t+(61+90*T1+298*C1+45*T1*T1-252*eccPrimeSquared-3*C1*C1)*D*D*D*D*D*D/720);\r\n\tLat = Lat * rad2deg;\r\n\r\n\tvar Long = (D-(1+2*T1+C1)*D*D*D/6+(5-2*C1+28*T1-3*C1*C1+8*eccPrimeSquared+24*T1*T1)\r\n\t\t*D*D*D*D*D/120)/Math.cos(phi1Rad);\r\n\r\n\tLong = LongOrigin + Long * rad2deg;\r\n\r\n\t//return new LatLng(Lat, Long);\r\n\r\n\t//var ll = new LatLngIE(Lat, Long); // Irish projection (modified Airy)\r\n\t//ll.IE_to_WGS84(); // google earth uses WGS84\r\n\r\n\t//return ll;\r\n\t\r\n\treturn (new LatLngIE(Lat, Long)).to_WGS84();\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nGridCoordsIE.prototype.to_gridref = function(precision) {\r\n\tvar hundredkmE = Math.floor(this.x / 100000), \r\n\t\thundredkmN = Math.floor(this.y / 100000);\r\n\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\t\t\r\n\t\treturn _e_n_to_gr(GridCoordsIE.irishGrid[hundredkmE][hundredkmN], \r\n\t\t\t(this.x - (100000 * hundredkmE)), \r\n\t\t\t(this.y - (100000 * hundredkmN)), \r\n\t\t\tprecision ? precision : 1\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * \r\n * @return {string} hectad\r\n */\r\nGridCoordsIE.prototype.to_hectad = function() {\r\n\tvar hundredkmE = Math.floor(this.x / 100000), hundredkmN = Math.floor(this.y / 100000);\r\n\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\t\treturn (GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) + Math.floor((this.x % 100000)/10000) + Math.floor((this.y % 100000)/10000);\r\n\t} else {\r\n\t\treturn '';\r\n\t}\r\n};\r\n\r\nreturn GridCoordsIE;\r\n})();","import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\nimport { GridCoordsIE } from '../GridCoords/GridCoordsIE';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\nexport const LatLngIE = (function() {\r\n/**\r\n * represents lat lng as Modified Airy (Irish grid projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nconst LatLngIE = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n\r\n/**\r\n * converts lat and lon (modified Airy) to OSI northings and eastings\r\n * \r\n * @returns {GridCoordsIE}\r\n */\r\nLatLngIE.prototype.to_os_coords = function() {\r\n    //var deg2rad = Math.PI / 180;\r\n    //var rad2deg = 180.0 / Math.PI;\r\n\r\n    var phi = this.lat * deg2rad; // convert latitude to radians\r\n    var lam = this.lng * deg2rad; // convert longitude to radians\r\n    var a = 6377340.189;      // OSI semi-major\r\n    var b = 6356034.447;      // OSI semi-minor\r\n    var e0 = 200000;          // OSI easting of false origin\r\n    var n0 = 250000;          // OSI northing of false origin\r\n    var f0 = 1.000035;        // OSI scale factor on central meridian\r\n    var e2 = 0.00667054015;   // OSI eccentricity squared\r\n    var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n    var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n    var af0 = a * f0;\r\n    var bf0 = b * f0;\r\n\r\n    // easting\r\n    var slat2 = Math.sin(phi) * Math.sin(phi);\r\n    var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n    var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n    var eta2 = (nu / rho) - 1;\r\n    var p = lam - lam0;\r\n    var IV = nu * Math.cos(phi);\r\n    var clat3 = Math.pow(Math.cos(phi), 3);\r\n    var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n    var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n    var clat5 = Math.pow(Math.cos(phi), 5);\r\n    var tlat4 = Math.pow(Math.tan(phi), 4);\r\n    var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n    var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n    // northing\r\n    var n = (af0 - bf0) / (af0 + bf0);\r\n    var M = LatLng._Marc(bf0, n, phi0, phi);\r\n    var I = M + (n0);\r\n    var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n    var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n    var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n    var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\t//return {x: Math.round(east), y: Math.round(north)};\r\n\t\r\n\t/*\r\n\treturn (east > 0 && north > 0) ?\r\n\t\tnew GridCoordsIE(Math.round(east), Math.round(north))\r\n\t\t:\r\n\t\tnull;\r\n\t*/\r\n   return new GridCoordsIE(Math.round(east), Math.round(north));\r\n};\r\n\r\n/**\r\n * convert Irish projection to WGS84 (for Google Maps)\r\n * see http://www.dorcus.co.uk/carabus/ll_ngr.html\r\n*/\r\nLatLngIE.prototype.to_WGS84 = function() {\r\n\tconst IRISH_AXIS = 6377340.189;\r\n\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\tconst WGS84_AXIS = 6378137;\r\n\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t/* \r\n\t * IE\r\n\ta = 6377340.189;      // OSI semi-major\r\n\tb = 6356034.447;      // OSI semi-minor\r\n\te0 = 200000;          // OSI easting of false origin\r\n\tn0 = 250000;          // OSI northing of false origin\r\n\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t*/\r\n\r\n\t//height = 0;\r\n\t\r\n\tconst latLngRadians = LatLng._transform(this.lat * deg2rad, this.lng * deg2rad, IRISH_AXIS, IRISH_ECCENTRIC, 0, WGS84_AXIS, WGS84_ECCENTRIC, \r\n\t\t   482.53, -130.596, 564.557, -1.042, -0.214, -0.631, -8.15);\r\n\t\t   \r\n\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n};\r\n\r\n/**\r\n * \r\n * @param {LatLngWGS84} latLngWGS84\r\n * @returns {LatLngIE}\r\n */\r\nLatLngIE.from_wgs84 = function (latLngWGS84) {\r\n\tconst phip = latLngWGS84.lat * deg2rad;\r\n\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\t\r\n\tconst IRISH_AXIS = 6377340.189;\r\n\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\t\r\n\tconst WGS84_AXIS = 6378137;\r\n\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t\t\r\n\t/*\r\n\t * IE\r\n\ta = 6377340.189;      // OSI semi-major\r\n    b = 6356034.447;      // OSI semi-minor\r\n    e0 = 200000;          // OSI easting of false origin\r\n    n0 = 250000;          // OSI northing of false origin\r\n    f0 = 1.000035;        // OSI scale factor on central meridian\r\n    e2 = 0.00667054015;   // OSI eccentricity squared\r\n    lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n    phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t */\r\n\t\r\n\tvar height = 0;\r\n\tvar latlng =  LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, IRISH_AXIS, IRISH_ECCENTRIC, \r\n\t\t\t   -482.53, 130.596, -564.557, 1.042, 0.214, 0.631, 8.15);\r\n\t \r\n\treturn new LatLngIE(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n};\r\nreturn LatLngIE;\r\n})();","import {LatLngGB} from '../LatLng/LatLngGB';\r\nimport {LatLngCI} from '../LatLng/LatLngCI';\r\nimport {LatLngIE} from '../LatLng/LatLngIE';\r\nimport {LatLngWGS84} from '../LatLng/LatLngWGS84';\r\n\r\nexport const GridCoords = (function() {\r\n\r\n/**\r\n * abstract representation of a gridref co-ordinate pair\r\n * (*not a gridref string*)\r\n *\r\n * @constructor\r\n * @returns {GridCoords}\r\n */\r\nconst GridCoords = function () {};\r\n\r\n/**\r\n * tetrad letters ordered by easting then northing (steps of 2000m)\r\n * i.e. (x*4) + y\r\n * \r\n * where x and y are integer of (10km remainder / 2)\r\n * @type {string}\r\n */\r\nGridCoords.tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n/**\r\n * tetrad letters ordered by northing then easting (steps of 2000m)\r\n * i.e. (y*5) + x\r\n * \r\n * where x and y are integer of (10km remainder / 2)\r\n * \r\n * @type {string}\r\n */\r\nGridCoords.tetradLettersRowFirst = 'AFKQVBGLRWCHMSXDINTYEJPUZ';\r\n\r\n/**\r\n * \r\n * @param {number} lat\r\n * @param {number} lng\r\n * @returns {GridCoords}\r\n */\r\nGridCoords.from_latlng = function(lat, lng) {\r\n\t// test if GB\r\n\tif (lng >= -8.74 && lat > 49.88) {\r\n\t\t// lng extreme must accomodate St Kilda\r\n\t\t\r\n\t\tvar os = new LatLngGB.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\tif (os.x >= 0 && os.is_gb_hectad()) {\r\n\t\t\treturn os;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// test if Irish\r\n\tif (lng < -5.3 && lat > 51.34 && lng > -11 && lat < 55.73) {\r\n\t\tvar osI = new LatLngIE.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\tif (osI.x < 0 || osI.y < 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn osI;\r\n\t\t}\r\n\t} else {\r\n\t\tvar osCi = new LatLngCI.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\tif (osCi.x >= 500000 && osCi.x < 600000 && osCi.y >= 5400000 && osCi.y < 5600000) {\r\n\t\t\treturn osCi;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn null; //not a valid location\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} easting\r\n * @param {number} northing\r\n * @return {string} tetrad letter\r\n */\r\nGridCoords.calculate_tetrad = function(easting, northing) {\r\n\treturn (easting >= 0 && northing >= 0) ?\r\n\t\tGridCoords.tetradLetters.charAt((Math.floor(easting % 10000 / 2000) * 5) + Math.floor(northing % 10000 / 2000)) :\r\n\t\t'';\r\n};\r\n\r\nGridCoords.prototype.toString = function() {\r\n\treturn this.x + ',' + this.y;\r\n};\r\n\r\nreturn GridCoords;\r\n})();\r\n\r\n/**\r\n * \r\n * @param {string} letters\r\n * @param {number} e metres\r\n * @param {number} n metres\r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nexport const _e_n_to_gr = function(letters, e, n, precision) {\r\n\tvar eString = ('00000' + Math.floor(e));\r\n\tvar nString = ('00000' + Math.floor(n));\r\n\t\r\n\tif (precision === 2000) {\r\n\t\treturn letters + \r\n\t\t\teString.charAt(eString.length-5) + nString.charAt(nString.length-5) + \r\n\t\t\tGridCoords.calculate_tetrad(e, n);\r\n\t} else if (precision === 100000) {\r\n\t\treturn letters;\r\n\t} else {\r\n\t\tif (precision === 5000) {\r\n\t\t\t// ignore quadrant and treat as hectad\r\n\t\t\tprecision = 10000;\r\n\t\t}\r\n\t\r\n\t\tvar logPrecision = Math.round(Math.log10(precision));\r\n\t\treturn letters +\r\n\t\t\t(logPrecision ? \r\n\t\t\t\t(eString.slice(-5,  -logPrecision) + nString.slice(-5,  -logPrecision))\r\n\t\t\t\t:\r\n\t\t\t\t(eString.slice(-5) + nString.slice(-5))\r\n\t\t\t);\r\n\t}\r\n};","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngWGS84 } from '../LatLng/LatLngWGS84';\r\nimport { LatLng } from '../LatLng/LatLng';\r\nimport { rad2deg } from '../constants';\r\n\r\n\r\nexport const GridCoordsCI = /*@__PURE__*/(function() {\r\n\r\n/**\r\n *\r\n * @param {number} easting metres\r\n * @param {number} northing metres\r\n * @constructor\r\n * @returns {GridCoordsCI}\r\n */\r\nconst GridCoordsCI = function(easting, northing) {\r\n  this.x = easting;\r\n  this.y = northing;\r\n};\r\n\r\nGridCoordsCI.prototype = new GridCoords();\r\nGridCoordsCI.prototype.constructor = GridCoordsCI;\r\nGridCoordsCI.prototype.country = 'CI';\r\n\r\n/**\r\n * convert easting,northing to a WGS84 lat lng\r\n * \r\n * @returns {LatLngWGS84}\r\n */\r\nGridCoordsCI.prototype.to_latLng = function() {\r\n\t//nX = north;\r\n\t//ex = east;\r\n\t\r\n\tvar a = 6378388.000;       // INT24 ED50 semi-major\r\n\tvar b = 6356911.946;       // INT24 ED50 semi-minor\r\n\tvar e0 = 500000;           // easting of false origin\r\n\tvar n0 = 0;                // northing of false origin\r\n\tvar f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\tvar e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\tvar lam0 = -0.0523598775598;  // INT24 ED50 false east\r\n\tvar phi0 = 0; //0 * deg2rad;    // INT24 ED50 false north\r\n\r\n\tvar af0 = a * f0;\r\n\tvar bf0 = b * f0;\r\n\tvar n = (af0 - bf0) / (af0 + bf0);\r\n\tvar Et = this.x - e0;\r\n\tvar phid = _initial_lat(this.y, n0, af0, phi0, n, bf0);\r\n\tvar nu = af0 / (Math.sqrt(1 - (e2 * (Math.sin(phid) * Math.sin(phid)))));\r\n\tvar rho = (nu * (1 - e2)) / (1 - (e2 * (Math.sin(phid)) * (Math.sin(phid))));\r\n\tvar eta2 = (nu / rho) - 1;\r\n\tvar tlat2 = Math.tan(phid) * Math.tan(phid);\r\n\tvar tlat4 = Math.pow(Math.tan(phid), 4);\r\n\tvar tlat6 = Math.pow(Math.tan(phid), 6);\r\n\tvar clatm1 = Math.pow(Math.cos(phid), -1);\r\n\tvar VII = Math.tan(phid) / (2 * rho * nu);\r\n\tvar VIII = (Math.tan(phid) / (24 * rho * (nu * nu * nu))) * (5 + (3 * tlat2) + eta2 - (9 * eta2 * tlat2));\r\n\tvar IX = ((Math.tan(phid)) / (720 * rho * Math.pow(nu, 5))) * (61 + (90 * tlat2) + (45 * tlat4));\r\n\tvar phip = (phid - ((Et * Et) * VII) + (Math.pow(Et, 4) * VIII) - (Math.pow(Et, 6) * IX));\r\n\tvar X = Math.pow(Math.cos(phid), -1) / nu;\r\n\tvar XI = (clatm1 / (6 * (nu * nu * nu))) * ((nu / rho) + (2 * (tlat2)));\r\n\tvar XII = (clatm1 / (120 * Math.pow(nu, 5))) * (5 + (28 * tlat2) + (24 * tlat4));\r\n\tvar XIIA = clatm1 / (5040 * Math.pow(nu, 7)) * (61 + (662 * tlat2) + (1320 * tlat4) + (720 * tlat6));\r\n\tvar lambdap = (lam0 + (Et * X) - ((Et * Et * Et) * XI) + (Math.pow(Et, 5) * XII) - (Math.pow(Et, 7) * XIIA));\r\n\r\n\tvar WGS84_AXIS = 6378137;\r\n\tvar WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\tvar INT24_AXIS = 6378388.000;\r\n\tvar INT24_ECCENTRIC = 0.0067226700223333;\r\n\tvar height = 10;  // dummy height\r\n\tvar latLngRadians = LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n\r\n\tvar latLngRadians = GridCoordsCI.convert_to_wgs(phip, lambdap);\r\n\r\n\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n};\r\n\t\r\nconst _initial_lat = function(north, n0, af0, phi0, n, bf0) {\r\n\tvar phi1 = ((north - n0) / af0) + phi0;\r\n\tvar M = GridCoordsCI.marc(bf0, n, phi0, phi1);\r\n\tvar phi2 = ((north - n0 - M) / af0) + phi1;\r\n\tvar ind = 0;\r\n\twhile ((Math.abs(north - n0 - M) > 0.00001) && (ind < 20))  // max 20 iterations in case of error\r\n\t{\r\n\t\tind += 1;\r\n\t\tphi2 = ((north - n0 - M) / af0) + phi1;\r\n\t\tM = LatLng._Marc(bf0, n, phi0, phi2);\r\n\t\tphi1 = phi2;\r\n\t}\r\n\treturn phi2;\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nGridCoordsCI.prototype.to_gridref = function(precision) {\r\n\tif (this.y >= 5500000) {\r\n\t\treturn _e_n_to_gr('WA', this.x - 500000, this.y - 5500000, precision ? precision : 1);\r\n\t} else if (this.y < 5500000) {\r\n\t\treturn _e_n_to_gr('WV', this.x - 500000, this.y - 5400000, precision ? precision : 1);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * \r\n * @returns {?string}\r\n */\r\nGridCoordsCI.prototype.to_hectad = function() {\r\n\tif (this.y > 5500000) {\r\n\t\treturn 'WA' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n    } else if (this.y < 5500000) {\r\n\t\treturn  'WV' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n    }\r\n    return null;\r\n};\r\n\r\nreturn GridCoordsCI;\r\n})();","import {GridRef} from './GridRef';\r\nimport {GridCoordsCI} from '../GridCoords/GridCoordsCI';\r\n\r\nexport const GridRefCI = /*@__PURE__*/(function() {\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst GridRefCI = function() {};\r\n\r\nGridRefCI.prototype = new GridRef();\r\nGridRefCI.prototype.constructor = GridRefCI;\r\nGridRefCI.prototype.country = 'CI';\r\nGridRefCI.prototype.GridCoords = GridCoordsCI;\r\n\r\n/**\r\n *\r\n * @param {string} rawGridRef\r\n * @throws Error\r\n */\r\nGridRefCI.prototype.from_string = function(rawGridRef) {\r\n\tvar trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t\\.\\/-]+/g, '').toUpperCase();\r\n\tvar tetradCode = '';\r\n\tvar enl;\r\n\r\n\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t// tetrad or quadrant\r\n\r\n\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t} else {\r\n\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t}\r\n\t}\r\n\r\n\tif (/^(W[AV](?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\tif ((enl = GridRefCI.gridref_string_to_e_n_l(trimmedLocality))) {\r\n\t\t\tthis.length = enl.length;\r\n\r\n\t\t\tthis.gridCoords = new GridCoordsCI(enl.e, enl.n);\r\n\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\r\n\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// quadrant\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = 'Grid reference format not understood (odd length).';\r\n\t\t}\r\n\t} else {\r\n\t\t// no match\r\n\t\tthis.error = true;\r\n\t\tthis.errorMessage = \"Channel Island grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t}\r\n};\r\n\r\nGridRefCI.prototype.parse_well_formed = GridRefCI.prototype.from_string;\r\n\r\n/**\r\n *\r\n *\r\n * @param {string} gridRef plain string without tetrad or quadrant suffix\r\n * @return false|{'eKm' : easting, 'nKm' : northing, 'lengthKm' : length}\r\n */\r\nGridRefCI.gridref_string_to_e_n_l = function(gridRef) {\r\n\tvar northOffset, x, y, length;\r\n\r\n\t// assume modern alphabetical sheet ref\r\n\tvar chars = gridRef.substr(0,2);\r\n\r\n\tif (chars === 'WA') {\r\n\t\tnorthOffset = 5500000;\r\n\t} else if (chars === 'WV') {\r\n\t\tnorthOffset = 5400000;\r\n\t} else {\r\n\t\tLogger(\"Bad Channel Island grid letters: '\" + chars + \"'\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar ref = gridRef.substr(2);\r\n\tswitch (ref.length) {\r\n\t\tcase 2:\r\n\t\t\tx = ref.charAt(0) * 10000;\r\n\t\t\ty = ref.charAt(1) * 10000;\r\n\t\t\tlength = 10000; //10 km square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 4:\r\n\t\t\tx = ref.substr(0, 2) * 1000;\r\n\t\t\ty = ref.substr(2) * 1000;\r\n\t\t\tlength = 1000; //1 km square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 6:\r\n\t\t\tx = ref.substr(0, 3) * 100;\r\n\t\t\ty = ref.substr(3) * 100;\r\n\t\t\tlength = 100; //100m square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 8:\r\n\t\t\tx = ref.substr(0, 4) * 10;\r\n\t\t\ty = ref.substr(4) * 10;\r\n\t\t\tlength = 10; //10m square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 10:\r\n\t\t\tx = parseInt(ref.substr(0, 5), 10);\r\n\t\t\ty = parseInt(ref.substr(5), 10);\r\n\t\t\tlength = 1; //1m square\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tLogger(\"Bad length for Channel Island grid ref '\" + gridRef + \"'\");\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn {\r\n\t\te : (x + 500000),\r\n\t\tn : (y + northOffset),\r\n\t\tlength : length\r\n\t};\r\n};\r\nreturn GridRefCI;\r\n})();","import {GridRef} from './GridRef';\r\nimport {GridCoordsGB} from '../GridCoords/GridCoordsGB';\r\n\r\nexport const GridRefGB = (function() {\r\n\r\n/**\r\n * @constructor\r\n */\r\nconst GridRefGB = function() {};\r\n\r\nGridRefGB.prototype = new GridRef();\r\nGridRefGB.prototype.constructor = GridRefGB;\r\nGridRefGB.prototype.country = 'GB';\r\nGridRefGB.prototype.GridCoords = GridCoordsGB;\r\n\r\n/**\r\n * gridref known to have correct syntax\r\n * may have tetrad or quadrant suffix\r\n * \r\n * @param {string} rawGridRef\r\n * @throws Error\r\n */\r\nGridRefGB.prototype.parse_well_formed = function(rawGridRef) {\r\n\r\n\tif (rawGridRef.length >= 5 && /^[A-Z]/.test(rawGridRef.charAt(4))) {\r\n\t\t// tetrad or quadrant\r\n\t\t\r\n\t\tif (GridRef.quadrantOffsets.hasOwnProperty(rawGridRef.substr(rawGridRef.length - 2))) {\r\n\t\t\tthis.quadrantCode = rawGridRef.substr(rawGridRef.length - 2);\r\n\t\t} else {\r\n\t\t\tthis.tetradLetter = rawGridRef.charAt(4);\r\n\t\t}\r\n\r\n\t\trawGridRef = rawGridRef.substr(0, 4);\r\n\t} \r\n\r\n\t//this sets easting/northing, length and hectad\r\n\tthis.parse_wellformed_gb_gr_string_no_tetrads(rawGridRef);\r\n\r\n\tif (this.tetradLetter || this.quadrantCode) {\r\n\t\t// tetrad or quadrant suffix\r\n\r\n\t\tif (this.tetradLetter) {\r\n\t\t\tthis.preciseGridRef = this.tetrad = this.hectad + this.tetradLetter;\r\n\t\t\tthis.length = 2000; // 2km square\r\n\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[this.tetradLetter][0];\r\n\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[this.tetradLetter][1];\r\n\t\t} else {\r\n\t\t\t// quadrant\r\n\t\t\tthis.preciseGridRef = this.quadrant = rawGridRef + this.quadrantCode;\r\n\t\t\tthis.length = 5000; // 5km square\r\n\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t}\r\n\t} else {\r\n\t\tthis.preciseGridRef = rawGridRef;\r\n\r\n\t\tif (this.length <= 1000) {\r\n\t\t\t// calculate tetrad for precise gridref\r\n\t\t\tthis.set_tetrad();\r\n\t\t} \r\n\t}\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} rawGridRef\r\n * @throws Error\r\n */\r\nGridRefGB.prototype.from_string = function(rawGridRef) {\r\n\t// grid ref may not be in canonical format\r\n\tvar trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t\\.-]+/g, '').toUpperCase();\r\n\tvar tetradCode = '';\r\n\tvar ref;\r\n\r\n\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t// tetrad or quadrant\r\n\t\t\r\n\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t} else {\r\n\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t}\r\n\t}\r\n\r\n\t// if all numeric gridref, e.g. 38517462 then\r\n\t// split with '/', i.e. 38/517462\r\n\tif (trimmedLocality === parseInt(trimmedLocality, 10).toString()) {\r\n\t\ttrimmedLocality = trimmedLocality.substr(0, 2) + '/' + trimmedLocality.substr(2);\r\n\t} else if (trimmedLocality.length > 3 && trimmedLocality.charAt(2) === '/' && /^[A-Z]{2}$/.test(trimmedLocality.substr(0, 2))) {\r\n\t\t// preprocess refs of form SD/59 to SD59\r\n\t\t// but at this stage want to retain old-style nn/nnnn gridrefs\r\n\t\ttrimmedLocality = trimmedLocality.replace('/', '');\r\n\t}\r\n\r\n\tif (trimmedLocality.substr(0, 2) === 'VC') {\r\n\t\t// special case error, VC number entered in the wrong field\r\n\t\tthis.error = true;\r\n\t\tthis.errorMessage = \"Misplaced vice-county code in grid-reference field. ('\" + trimmedLocality + \"')\";\r\n\t\tthis.gridCoords = null;\r\n\t\tthis.length = 0;\r\n\t} else if ((ref = trimmedLocality.match(/^([A-Z]{2}(?:\\d\\d){1,5})$/)) !== null) {\r\n\t\ttrimmedLocality = ref[0]; //grid reference\r\n\r\n\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(trimmedLocality);\r\n\r\n\t\tif (this.length > 0) {\r\n\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.tetradKmOffsets[tetradCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.tetradKmOffsets[tetradCode][1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// quadrant\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = 'GB grid reference format not understood (strange length).';\r\n\t\t}\r\n\t} else if (/^([\\d]{2})\\/((?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t// matching old-style nn/nnnn gridrefs\r\n\t\t// where second-part must have even-number of digits\r\n\r\n\t\tthis.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n\t\tswitch (this.length) {\r\n\t\t\tcase 10000:\r\n\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(10000);\r\n\t\t\t\tthis.hectad = trimmedLocality;\r\n\r\n\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\ttrimmedLocality += tetradCode;\r\n\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t} else if (this.quadrantCode) {\r\n\t\t\t\t\ttrimmedLocality += this.quadrantCode;\r\n\t\t\t\t\tthis.quadrant = trimmedLocality;\r\n\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1000:\r\n\t\t\tcase 100:\r\n\t\t\tcase 10:\r\n\t\t\tcase 1:\r\n\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(this.length);\r\n\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\t\t\t\tthis.set_tetrad();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'Bad grid square dimension (' + this.length + ' m).';\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthis.length = 0;\r\n\t\t}\r\n\r\n\t\tthis.preciseGridRef = trimmedLocality;\r\n\t} else {\r\n\t\t// no match\r\n\t\tthis.gridCoords = null;\r\n\t\tthis.length = 0;\r\n\t\tthis.error = true;\r\n\t\tthis.errorMessage = \"Grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t}\r\n};\r\n\r\n/**\r\n * sets easting, northing and length (in km)\r\n * source grid-reference need not be well-formed\r\n * \r\n * @param {string} gridRef either nn/nn... or aann...\r\n */\r\nGridRefGB.prototype.parse_gr_string_without_tetrads = function(gridRef) {\r\n\tvar matches, x, y, ref;\r\n\t\r\n\tif ((matches = gridRef.match(/^(\\d{2})\\/((?:\\d\\d){1,5})$/)) !== null) {\r\n\r\n\t\t// old style numerical sheet ref XY/nnnnnn\r\n\t\t// nnnn part must have even length\r\n\r\n\t\t// northern scottish islands have eccentric numbering\r\n\t\tswitch (matches[1]) {\r\n\t\t\tcase '57':\r\n\t\t\t\tx = 300000;\r\n\t\t\t\ty = 1000000;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '67':\r\n\t\t\t\tx = 400000;\r\n\t\t\t\ty = 1000000;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '58':\r\n\t\t\t\tx = 300000;\r\n\t\t\t\ty = 1100000;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '68':\r\n\t\t\t\tx = 400000;\r\n\t\t\t\ty = 1100000;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase '69':\r\n\t\t\t\tx = 400000;\r\n\t\t\t\ty = 1200000;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tx = gridRef.charAt(0) * 100000;\r\n\t\t\t\ty = gridRef.charAt(1) * 100000;\r\n\t\t}\r\n\r\n\t\tref = matches[2];\r\n\t} else {\r\n\t\t// modern alphabetical sheet ref\r\n\t\tif (!GridRef.letterMapping.hasOwnProperty(gridRef.charAt(0)) || !GridRef.letterMapping.hasOwnProperty(gridRef.charAt(1))) {\r\n\t\t\t// invalid\r\n\t\t\tthis.length = 0;\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar char1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\tvar char2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\tref = gridRef.substr(2);\r\n\r\n\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\t}\r\n\r\n\tswitch (ref.length) {\r\n\t\tcase 2:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\tthis.length = 10000; //10 km square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 4:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + Math.floor(ref / 100) * 1000,\r\n\t\t\t\ty + (ref % 100) * 1000\r\n\t\t\t\t);\r\n\t\t\tthis.length = 1000; //1 km square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 6:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + Math.floor(ref / 1000) * 100,\r\n\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\tthis.length = 100; //100m square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 8:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + Math.floor(ref / 10000) * 10,\r\n\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\tthis.length = 10; //10m square\r\n\t\t\tbreak;\r\n\r\n\t\tcase 10:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\tthis.length = 1; //1m square\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tLogger('Bad grid ref length, ref=' + gridRef);\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t}\r\n};\r\n\r\n/**\r\n * gridRef must be a correctly formed OS GB gridref\r\n * \r\n * sets self::gridCoords\r\n * sets self::length\r\n * sets self::hectad\r\n * \r\n * @param {string} gridRef modern alpha-numeric format with no suffixes\r\n * @throws Error\r\n */\r\nGridRefGB.prototype.parse_wellformed_gb_gr_string_no_tetrads = function(gridRef) {\r\n\tvar char1, char2, ref, x, y;\r\n\t\r\n\t// modern alphabetical sheet refs only\r\n\tchar1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\tchar2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\tref = gridRef.substr(2);\r\n\r\n\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\r\n\tswitch (ref.length) {\r\n\t\tcase 2:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref \r\n\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\tthis.length = 10000; //10 km square\r\n\t\t\tthis.hectad = gridRef;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 4:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + (Math.floor(ref / 100) * 1000),\r\n\t\t\t\ty + ((ref % 100) * 1000)\r\n\t\t\t\t);\r\n\t\t\tthis.length = 1000; //1 km square\r\n\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(4, 1);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 6:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + (Math.floor(ref / 1000)) * 100,\r\n\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\tthis.length = 100; //100m square\r\n\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(5, 1);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 8:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + (Math.floor(ref / 10000)) * 10,\r\n\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\tthis.length = 10; //10m square\r\n\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(6, 1);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 10:\r\n\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\tthis.length = 1; //1m square\r\n\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(7, 1);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthrow new Error(\"Bad grid ref length when parsing supposedly well-formed ref, ref='\" + gridRef + \"'\");\r\n\t}\r\n};\r\n\r\nreturn GridRefGB;\r\n})();","import {GridRef} from './GridRef';\r\nimport {GridCoordsIE} from '../GridCoords/GridCoordsIE';\r\n\r\nexport const GridRefIE = (function() {\r\n/**\r\n * @constructor\r\n */\r\nconst GridRefIE = function() {};\r\n\r\nGridRefIE.prototype = new GridRef();\r\nGridRefIE.prototype.constructor = GridRefIE;\r\nGridRefIE.prototype.country = 'IE';\r\nGridRefIE.prototype.GridCoords = GridCoordsIE;\r\n\r\nGridRefIE.gridLetter = {\r\n  A: [0,4],\r\n  B: [1,4],\r\n  C: [2,4],\r\n  D: [3,4],\r\n  F: [0,3],\r\n  G: [1,3],\r\n  H: [2,3],\r\n  J: [3,3],\r\n  L: [0,2],\r\n  M: [1,2],\r\n  N: [2,2],\r\n  O: [3,2],\r\n  Q: [0,1],\r\n  R: [1,1],\r\n  S: [2,1],\r\n  T: [3,1],\r\n  V: [0,0],\r\n  W: [1,0],\r\n  X: [2,0],\r\n  Y: [3,0]};\r\n\r\n/**\r\n *\r\n * @param {string} rawGridRef\r\n * @throws Error\r\n */\r\nGridRefIE.prototype.from_string = function(rawGridRef) {\r\n  var trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t\\.-]+/g, '').toUpperCase();\r\n\r\n  if (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n    // tetrad or quadrant\r\n\r\n    if (GridRefIE.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n      this.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n      trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n    } else {\r\n      this.tetradLetter = trimmedLocality.substr(trimmedLocality.length - 1);\r\n      trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n    }\r\n  }\r\n\r\n  this.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n  if (this.length > 0) {\r\n    if (this.tetradLetter || this.quadrantCode) {\r\n      // tetrad or quadrant suffix\r\n\r\n      if (this.tetradLetter) {\r\n        this.preciseGridRef = this.hectad + this.tetradLetter;\r\n        this.tetrad = this.preciseGridRef;\r\n        this.length = 2000; // 2km square\r\n        this.gridCoords.x += GridRefIE.tetradOffsets[this.tetradLetter][0];\r\n        this.gridCoords.y += GridRefIE.tetradOffsets[this.tetradLetter][1];\r\n      } else {\r\n        // quadrant\r\n        this.preciseGridRef = this.hectad + this.quadrantCode;\r\n        this.quadrant = this.preciseGridRef;\r\n        this.length = 5000; // 5km square\r\n        this.gridCoords.x += GridRefIE.quadrantOffsets[this.quadrantCode][0];\r\n        this.gridCoords.y += GridRefIE.quadrantOffsets[this.quadrantCode][1];\r\n      }\r\n    } else {\r\n      this.preciseGridRef = trimmedLocality;\r\n\r\n      if (this.length <= 1000) {\r\n        // calculate tetrad for precise gridref\r\n        this.set_tetrad();\r\n      }\r\n    }\r\n  } else {\r\n    this.error = true;\r\n    this.errorMessage = \"Irish grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n  }\r\n};\r\n\r\nGridRefIE.prototype.parse_well_formed = GridRefIE.prototype.from_string;\r\n\r\nGridRefIE._IE_GRID_LETTERS = 'VQLFAWRMGBXSNHCYTOJD';\r\n\r\n/**\r\n *\r\n * @param {string} gridRef nn/nnnn or [A-Z]nnnn or [A-Z]/nnnn (no other punctuation by this point), all upper-case\r\n * @return boolean\r\n */\r\nGridRefIE.prototype.parse_gr_string_without_tetrads = function(gridRef) {\r\n  var x, y, ref, char;\r\n\r\n  if (/^\\d{2}\\/(?:\\d\\d){1,5}$/.test(gridRef)) {\r\n    // nn/nnnn etc.\r\n    // regex used to avoid matching oddly malformed refs, such as \"32/SO763520\"\r\n\r\n    x = parseInt(gridRef.charAt(0), 10);\r\n    y = parseInt(gridRef.charAt(1), 10);\r\n\r\n    if (x > 3 || y > 4) {\r\n      Logger(\"bad grid square, ref='\" + gridRef + \"' (Ireland)\");\r\n      this.length = 0;\r\n      return false;\r\n    }\r\n\r\n    ref = gridRef.substr(3);\r\n    char = GridRefIE._IE_GRID_LETTERS.charAt((x * 5) + y);\r\n\r\n    x *= 100000;\r\n    y *= 100000;\r\n  } else {\r\n    // [A-Z]nnnn or [A-Z]/nnnn etc.\r\n    gridRef = gridRef.replace('/', '');\r\n\r\n    if (!/^[ABCDFGHJLMNOQRSTVWXY](?:\\d\\d){1,5}$/.test(gridRef)) {\r\n      this.length = 0;// mark error state\r\n      this.gridCoords = null;\r\n      return false;\r\n    }\r\n\r\n    if (gridRef) {\r\n      char = gridRef.charAt(0);\r\n      var p = GridRefIE._IE_GRID_LETTERS.indexOf(char);\r\n\r\n      if (p !== -1) {\r\n        x = Math.floor(p / 5) * 100000;\r\n        y = (p % 5) * 100000;\r\n      } else {\r\n        Logger(\"Bad grid ref grid-letter, ref='\" + gridRef + \"' (Ireland)\");\r\n        this.length = 0; // mark error\r\n        this.gridCoords = null;\r\n        return false;\r\n      }\r\n    } else {\r\n      Logger('Bad (empty) Irish grid ref');\r\n      this.length = 0; // mark error\r\n      this.gridCoords = null;\r\n      return false;\r\n    }\r\n\r\n    ref = gridRef.substr(1);\r\n  }\r\n\r\n  switch (ref.length) {\r\n    case 2:\r\n      this.gridCoords = new GridCoordsIE(\r\n        x + (ref.charAt(0) * 10000),\r\n        y + (ref.charAt(1) * 10000)\r\n      );\r\n      this.length = 10000; //10 km square\r\n      this.hectad = char + ref;\r\n      break;\r\n\r\n    case 4:\r\n      this.gridCoords = new GridCoordsIE(\r\n        x + Math.floor(ref / 100) * 1000,\r\n        y + (ref % 100) * 1000\r\n      );\r\n      this.length = 1000; //1 km square\r\n      this.hectad = char + ref.charAt(0) + ref.charAt(2);\r\n      break;\r\n\r\n    case 6:\r\n      this.gridCoords = new GridCoordsIE(\r\n        x + Math.floor(ref / 1000) * 100,\r\n        y + (ref % 1000) * 100\r\n      );\r\n      this.length = 100; // 100m square\r\n      this.hectad = char + ref.charAt(0) + ref.charAt(3);\r\n      break;\r\n\r\n    case 8:\r\n      this.gridCoords = new GridCoordsIE(\r\n        x + Math.floor(ref / 10000) * 10,\r\n        y + (ref % 10000) * 10\r\n      );\r\n      this.length = 10; //10m square\r\n      this.hectad = char + ref.charAt(0) + ref.charAt(4);\r\n      break;\r\n\r\n    case 10:\r\n      this.gridCoords = new GridCoordsIE(\r\n        x + Math.floor(ref / 100000),\r\n        y + (ref % 100000)\r\n      );\r\n      this.length = 1; //1m square\r\n      this.hectad = char + ref.charAt(0) + ref.charAt(5);\r\n      break;\r\n\r\n    default:\r\n      Logger(\"Bad grid ref length, ref='\" + gridRef + \"' (Ireland)\");\r\n      this.length = 0;\r\n      this.gridCoords = null;\r\n      return false;\r\n  }\r\n  return true;\r\n};\r\nreturn GridRefIE;\r\n})();","import {GridRef} from '../GridRef/GridRef';\r\nimport {GridRefCI} from '../GridRef/GridRefCI';\r\nimport {GridRefGB} from '../GridRef/GridRefGB';\r\nimport {GridRefIE} from '../GridRef/GridRefIE';\r\n\r\n/**\r\n * returns a GridRef (GB, IE or CI-specific parser) or false\r\n * crudely tries to determine the country by trying each country in turn\r\n * \r\n * @param {string} rawGridRef\r\n * @return GridRef|FALSE\r\n */\r\nGridRef.from_string = function(rawGridRef) {\r\n\tvar parser;\r\n\tvar cleanRef = rawGridRef.replace(/\\s+/g, '').toUpperCase();\r\n\r\n\tif (!cleanRef) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// if canonical ref form then be more efficient\r\n\tif (/^[A-Z]{1,2}\\d{2}(?:[A-Z]|[NS][EW]|(?:\\d{2}){0,4})?$/.test(cleanRef)) {\r\n\t\t// have simple well-formed grid ref\r\n\r\n\t\tif (/^.\\d/.test(cleanRef)) {\r\n\t\t\tparser = new GridRef.GridRefIE();\r\n\t\t} else {\r\n\t\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\t\tparser = new GridRefCI();\r\n\t\t\t} else {\r\n\t\t\t\tparser = new GridRefGB();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tparser.parse_well_formed(cleanRef);\r\n\r\n\t\treturn (parser.length && !parser.error) ? parser : false;\r\n\t} else {\r\n\t\tparser = new GridRefGB();\r\n\t\tparser.from_string(cleanRef);\r\n\r\n\t\tif (parser.length && !parser.error) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\tparser = new GridRefCI();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexport {GridRef};\r\n"],"names":["GridRef","tetradOffsets","J","P","U","Z","I","N","T","Y","H","M","S","X","G","L","R","W","F","K","Q","V","quadrantOffsets","letterMapping","B","C","D","E","O","tetradLetters","prototype","preciseGridRef","length","hectad","tetrad","tetradLetter","quadrant","quadrantCode","set_tetrad","substr","Math","floor","gridCoords","x","y","Error","get_normalized_precision","rawPrecision","minPrecision","deg2rad","PI","rad2deg","LatLng","lat","lng","_transform","lon","a","e","h","a2","e2","xp","yp","zp","xr","yr","zr","s","sf","v","sqrt","sin","cos","z","xrot","yrot","zrot","hx","hy","hz","atan","p","errvalue","lat0","abs","_Marc","bf0","n","phi0","phi","LatLngWGS84","GridCoordsGB","easting","northing","GridCoords","constructor","country","gbHectads","to_gridref","precision","hundredkmE","hundredkmN","firstLetter","secondLetter","index","String","fromCharCode","_e_n_to_gr","to_hectad","is_gb_hectad","indexOf","to_latLng","E0","lambda0","eSquared","lambda","phiPrime","sinphiPrime2","tanphiPrime2","tan","secphiPrime","pow","rho","etaSquared","VII","VIII","IX","XI","XII","XIIA","LatLngGB","to_WGS84","sinPhi","tx","ty","tz","rx","ry","rz","xB","yB","zB","phiN","i","sinPhiN","to_os_coords","lam","b","e0","n0","f0","lam0","af0","slat2","nu","eta2","IV","clat3","tlat2","clat5","tlat4","VI","east","II","III","IIIA","north","round","from_wgs84","latLngWGS84","radWGlat","radWGlon","newLon","newLat","LatLngCI","GridCoordsCI","phip","lambdap","CI_AXIS","CI_ECCENTRIC","WGS84_AXIS","WGS84_ECCENTRIC","height","latlng","GridCoordsIE","irishGrid","k0","LongOrigin","eccSquared","e1","M0","eccPrimeSquared","mu","phi1Rad","N1","T1","C1","R1","Lat","Long","LatLngIE","IRISH_AXIS","IRISH_ECCENTRIC","latLngRadians","tetradLettersRowFirst","from_latlng","os","osI","osCi","calculate_tetrad","charAt","toString","letters","eString","nString","logPrecision","log10","slice","Et","phid","_initial_lat","tlat6","clatm1","INT24_AXIS","INT24_ECCENTRIC","convert_to_wgs","phi1","marc","phi2","ind","substring","GridRefCI","GridCoords","from_string","rawGridRef","trimmedLocality","replace","toUpperCase","tetradCode","enl","test","hasOwnProperty","gridref_string_to_e_n_l","error","errorMessage","parse_well_formed","gridRef","northOffset","chars","ref","parseInt","GridRefGB","parse_wellformed_gb_gr_string_no_tetrads","match","tetradKmOffsets","parse_gr_string_without_tetrads","matches","char1","char2","GridRefIE","gridLetter","_IE_GRID_LETTERS","char","parser","cleanRef"],"mappings":"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"}