{"version":3,"file":"gridrefutils.js","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/GridRef/GridRef.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../src/LatLng/LatLngWGS84.js","../src/constants.js","../src/LatLng/LatLngGB.js","../src/LatLng/LatLng.js","../src/LatLng/LatLngCI.js","../src/LatLng/LatLngIE.js","../src/GridCoords/GridCoords.js","../src/GridCoords/GridCoordsCI.js","../src/GridCoords/GridCoordsGB.js","../src/GridRef/GridRefCI.js","../src/GridRef/GridRefGB.js","../src/GridCoords/GridCoordsIE.js","../src/GridRef/GridRefIE.js","../src/GridRef/parser.js","../src/wrappers/GB.js","../src/wrappers/IE.js","../src/wrappers/CI.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\r\nexport class GridRef {\r\n\r\n  /**\r\n   * x,y offsets (in metres) for tetrad letter codes\r\n   * @type {Object.<string,Array.<number>>}\r\n   */\r\n  static tetradOffsets = {\r\n    E: [0, 8000], J: [2000, 8000], P: [4000, 8000], U: [6000, 8000], Z: [8000, 8000],\r\n    D: [0, 6000], I: [2000, 6000], N: [4000, 6000], T: [6000, 6000], Y: [8000, 6000],\r\n    C: [0, 4000], H: [2000, 4000], M: [4000, 4000], S: [6000, 4000], X: [8000, 4000],\r\n    B: [0, 2000], G: [2000, 2000], L: [4000, 2000], R: [6000, 2000], W: [8000, 2000],\r\n    A: [0, 0], F: [2000, 0], K: [4000, 0], Q: [6000, 0], V: [8000, 0]\r\n  };\r\n\r\n  /**\r\n   * x,y offsets (in metres) for quadrant codes\r\n   * @type {{SE: number[], SW: number[], NE: number[], NW: number[]}}\r\n   */\r\n  static quadrantOffsets = {\r\n    NW: [0, 5000],\r\n    NE: [5000, 5000],\r\n    SW: [0, 0],\r\n    SE: [5000, 0]\r\n  };\r\n\r\n  /**\r\n   * numerical mapping of letters to numbers\r\n   * 'I' is omitted\r\n   *\r\n   * @type {{A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number, J: number, K: number, L: number, M: number, N: number, O: number, P: number, Q: number, R: number, S: number, T: number, U: number, V: number, W: number, X: number, Y: number, Z: number}}\r\n   */\r\n  static letterMapping = {\r\n    A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, J: 8, K: 9,\r\n    L: 10, M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18,\r\n    U: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n  };\r\n\r\n  /**\r\n   * tetrad letters ordered by easting then northing (steps of 2000m)\r\n   * i.e. (x*4) + y\r\n   *\r\n   * where x and y are integer of (10km remainder / 2)\r\n   *\r\n   * @type {string}\r\n   */\r\n  static tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  preciseGridRef = '';\r\n\r\n  /**\r\n   * length in m (0 marks an invalid value)\r\n   *\r\n   * @type {number}\r\n   */\r\n  length = 0;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  hectad = '';\r\n\r\n  /**\r\n   * 10km ref with tetrad suffix or ''\r\n   * e.g. SD59A\r\n   * @type {string}\r\n   */\r\n  tetrad = '';\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  tetradLetter = '';\r\n\r\n  /**\r\n   * quadrant gridref(e.g. NZ34NW)\r\n   * only set if gridref is defined at 5km or <=1km precision\r\n   * undefined by default so need to use getter\r\n   *\r\n   * read using GridRef::get_quadrant\r\n   *\r\n   * @type {string}\r\n   */\r\n  quadrant = '';\r\n\r\n  /**\r\n   * quadrant code suffix(e.g. NW, NE, SW, SE)\r\n   *\r\n   * @type {string}\r\n   */\r\n  quadrantCode = '';\r\n\r\n  /**\r\n   *\r\n   * @type {GridCoords|null}\r\n   */\r\n  gridCoords = null;\r\n\r\n  /**\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  error = false;\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  errorMessage = '';\r\n\r\n  /**\r\n   * update tetrad using Easting/Northing values (metres)\r\n   * hectad should have been set prior to call\r\n   */\r\n  set_tetrad() {\r\n    this.tetradLetter = GridRef.tetradLetters.substr(\r\n        ((Math.floor((this.gridCoords.x % 10000) / 1000) >> 1) * 5) + (Math.floor((this.gridCoords.y % 10000) / 1000) >> 1)\r\n        , 1);\r\n\r\n    if (!this.tetradLetter) {\r\n      throw new Error(\"Failed to get tetrad letter when processing '\" + this.preciseGridRef + \"', easting=\" + this.gridCoords.x + \" northing=\" + this.gridCoords.y);\r\n    }\r\n    this.tetrad = this.hectad + this.tetradLetter;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} rawPrecision\r\n   * @param {number} [minPrecision]\r\n   * @returns {number}\r\n   */\r\n  static get_normalized_precision(rawPrecision, minPrecision) {\r\n      return rawPrecision > 2000 ? 10000 :\r\n          (rawPrecision > 1000 ? 2000 :\r\n                  (rawPrecision > 100 ? 1000 :\r\n                          (rawPrecision > 10 ? 100 :\r\n                                  (rawPrecision > 1 ? 10 :\r\n                                          minPrecision ? minPrecision : 1\r\n                                  )\r\n                          )\r\n                  )\r\n          );\r\n  }\r\n}\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","\r\n/**\r\n * represents lat lng as WGS84 (google map form)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nexport const LatLngWGS84 = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n","export const deg2rad = Math.PI / 180;\r\nexport const rad2deg = 180.0 / Math.PI;\r\n\r\n","//import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\n//import { GridCoordsGB } from '../GridCoords/GridCoordsGB';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\n// export const LatLngGB = /*@__PURE__*/(function() {\r\n/**\r\n * represents lat lng as OSGB1936 (Ordnance Survey projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nexport const LatLngGB = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n\r\n/**\r\n * \r\n * @returns {LatLngWGS84}\r\n */\r\nLatLngGB.prototype.to_WGS84 = function () {\r\n\t//airy1830 = new RefEll(6377563.396, 6356256.909);\r\n\tvar a        = 6377563.396; //airy1830.maj;\r\n\t//var b        = 6356256.909; //airy1830.min;\r\n\tvar eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830.ecc;\r\n\tvar phi = this.lat * deg2rad; // (Math.PI / 180)(this.lat);\r\n\tvar sinPhi = Math.sin(phi);\r\n\tvar lambda = this.lng * deg2rad; // (Math.PI / 180)(this.lng);\r\n\tvar v = a / (Math.sqrt(1 - eSquared * (sinPhi * sinPhi)));\r\n\t//H = 0; // height\r\n\tvar x = v * Math.cos(phi) * Math.cos(lambda);\r\n\tvar y = v * Math.cos(phi) * Math.sin(lambda);\r\n\tvar z = ((1 - eSquared) * v) * sinPhi;\r\n\r\n\tvar tx =        446.448;\r\n\tvar ty =       -124.157;\r\n\tvar tz =        542.060;\r\n\tvar s  =         -0.0000204894;\r\n\tvar rx = 0.000000728190110241429; // (Math.PI / 180)( 0.00004172222);\r\n\tvar ry = 0.000001197489772948010; // (Math.PI / 180)( 0.00006861111);\r\n\tvar rz = 0.000004082615892268120; // (Math.PI / 180)( 0.00023391666);\r\n\r\n\tvar xB = tx + (x * (1 + s)) + (-rx * y)     + (ry * z);\r\n\tvar yB = ty + (rz * x)      + (y * (1 + s)) + (-rx * z);\r\n\tvar zB = tz + (-ry * x)     + (rx * y)      + (z * (1 + s));\r\n\r\n\t//wgs84 = new RefEll(6378137.000, 6356752.3141);\r\n\ta        = 6378137.000; // wgs84.maj;\r\n\t//var b        = 6356752.3141; // wgs84.min;\r\n\teSquared = 0.00669438003;// ((maj * maj) - (min * min)) / (maj * maj); //wgs84.ecc;\r\n\r\n\t//lambdaB = (180 / Math.PI)(Math.atan(yB / xB));\r\n\tvar p = Math.sqrt((xB * xB) + (yB * yB));\r\n\tvar phiN = Math.atan(zB / (p * (1 - eSquared)));\r\n\r\n\tfor (var i = 1; i < 10; ++i) {\r\n\t\tvar sinPhiN = Math.sin(phiN); // this must be in the for loop as phiN is variable\r\n\t\tphiN = Math.atan((zB + (eSquared * (a / (Math.sqrt(1 - eSquared * (sinPhiN * sinPhiN)))) * sinPhiN)) / p);\r\n\t}\r\n\r\n\t//this.lat = rad2deg * phiN;\r\n\t//this.lng = rad2deg * (Math.atan(yB / xB)); // lambdaB;\r\n\t\r\n\treturn new LatLngWGS84(rad2deg * phiN, rad2deg * (Math.atan(yB / xB)));\r\n};\r\n\r\n// /**\r\n//  * converts lat and lon (OSGB36) to OS northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsGB}\r\n//  */\r\n// LatLngGB.prototype.to_os_coords = function() {\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377563.396; // OSGB semi-major axis\r\n//     var b = 6356256.91; // OSGB semi-minor axis\r\n//     var e0 = 400000; // easting of false origin\r\n//     var n0 = -100000; // northing of false origin\r\n//     var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n//     var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n//     var lam0 = -0.034906585039886591; // OSGB false east\r\n//     var phi0 = 0.85521133347722145; // OSGB false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \treturn new GridCoordsGB(Math.round(east), Math.round(north));\r\n// };\r\n\r\n/**\r\n * \r\n * @param {LatLngWGS84} latLngWGS84\r\n * @returns {LatLngGB}\r\n */\r\nLatLngGB.from_wgs84 = function (latLngWGS84) {\r\n\t\r\n    //first off convert to radians\r\n    var radWGlat = latLngWGS84.lat * deg2rad;\r\n    var radWGlon = latLngWGS84.lng * deg2rad;\r\n    //these are the values for WGS84(GRS80) to OSGB36(Airy)\r\n    var a = 6378137; // WGS84_AXIS\r\n    var e = 0.00669438037928458; // WGS84_ECCENTRIC\r\n    //var h = height; // height above datum (from GPGGA sentence)\r\n    var h = 0;\r\n    var a2 = 6377563.396; // OSGB_AXIS\r\n    var e2 = 0.0066705397616; // OSGB_ECCENTRIC \r\n    var xp = -446.448;\r\n    var yp = 125.157;\r\n    var zp = -542.06;\r\n    var xr = -0.1502;\r\n    var yr = -0.247;\r\n    var zr = -0.8421;\r\n    var s = 20.4894;\r\n\r\n    // convert to cartesian; lat, lon are in radians\r\n    var sf = s * 0.000001;\r\n    var v = a / (Math.sqrt(1 - (e * Math.sin(radWGlat) * Math.sin(radWGlat))));\r\n    var x = (v + h) * Math.cos(radWGlat) * Math.cos(radWGlon);\r\n    var y = (v + h) * Math.cos(radWGlat) * Math.sin(radWGlon);\r\n    var z = ((1 - e) * v + h) * Math.sin(radWGlat);\r\n\r\n    // transform cartesian\r\n    var xrot = (xr / 3600) * deg2rad;\r\n    var yrot = (yr / 3600) * deg2rad;\r\n    var zrot = (zr / 3600) * deg2rad;\r\n    var hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n    var hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n    var hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\r\n    // Convert back to lat, lon\r\n    var newLon = Math.atan(hy / hx);\r\n    var p = Math.sqrt((hx * hx) + (hy * hy));\r\n    var newLat = Math.atan(hz / (p * (1 - e2)));\r\n    v = a2 / (Math.sqrt(1 - e2 * (Math.sin(newLat) * Math.sin(newLat))));\r\n    var errvalue = 1.0;\r\n    var lat0 = 0;\r\n    while (errvalue > 0.001) {\r\n        lat0 = Math.atan((hz + e2 * v * Math.sin(newLat)) / p);\r\n        errvalue = Math.abs(lat0 - newLat);\r\n        newLat = lat0;\r\n    }\r\n\r\n    return new LatLngGB(newLat * rad2deg, newLon * rad2deg);\r\n};\r\n// return LatLngGB;\r\n// })();","import { deg2rad } from '../constants';\r\n\r\nexport class LatLng {\r\n\r\n\t/**\r\n\t * represents lat lng\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t * @constructor\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tthis.lat = lat;\r\n\t\tthis.lng = lng;\r\n\t};\r\n\r\n\tstatic _transform(lat, lon, a, e, h, a2, e2, xp, yp, zp, xr, yr, zr, s) {\r\n\t\t// convert to cartesian; lat, lon are radians\r\n\t\tconst sf = s * 0.000001;\r\n\t\tlet v = a / (Math.sqrt(1 - (e * (Math.sin(lat) * Math.sin(lat)))));\r\n\t\tconst x = (v + h) * Math.cos(lat) * Math.cos(lon);\r\n\t\tconst y = (v + h) * Math.cos(lat) * Math.sin(lon);\r\n\t\tconst z = ((1 - e) * v + h) * Math.sin(lat);\r\n\t\t// transform cartesian\r\n\t\tconst xrot = (xr / 3600) * deg2rad;\r\n\t\tconst yrot = (yr / 3600) * deg2rad;\r\n\t\tconst zrot = (zr / 3600) * deg2rad;\r\n\t\tconst hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n\t\tconst hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n\t\tconst hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\t\t// Convert back to lat, lon\r\n\t\tlon = Math.atan(hy / hx);\r\n\t\tconst p = Math.sqrt((hx * hx) + (hy * hy));\r\n\t\tlat = Math.atan(hz / (p * (1 - e2)));\r\n\t\tv = a2 / (Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat))));\r\n\t\tlet errvalue = 1.0;\r\n\t\tlet lat0 = 0;\r\n\t\twhile (errvalue > 0.001) {\r\n\t\t\tlat0 = Math.atan((hz + e2 * v * Math.sin(lat)) / p);\r\n\t\t\terrvalue = Math.abs(lat0 - lat);\r\n\t\t\tlat = lat0;\r\n\t\t}\r\n\t\t//h = p / Math.cos(lat) - v;\r\n\t\t//var geo = { latitude: lat, longitude: lon, height: h };  // object to hold lat and lon\r\n\t\treturn (new LatLng(lat, lon));\r\n\t}\r\n\r\n\t//helper\r\n\tstatic _Marc(bf0, n, phi0, phi) {\r\n\t\treturn bf0 * (((1 + n + ((5 / 4) * (n * n)) + ((5 / 4) * (n * n * n))) * (phi - phi0))\r\n\t\t\t- (((3 * n) + (3 * (n * n)) + ((21 / 8) * (n * n * n))) * (Math.sin(phi - phi0)) * (Math.cos(phi + phi0)))\r\n\t\t\t+ ((((15 / 8) * (n * n)) + ((15 / 8) * (n * n * n))) * (Math.sin(2 * (phi - phi0))) * (Math.cos(2 * (phi + phi0))))\r\n\t\t\t- (((35 / 24) * (n * n * n)) * (Math.sin(3 * (phi - phi0))) * (Math.cos(3 * (phi + phi0)))));\r\n\t};\r\n\r\n}\r\n","import { LatLng} from './LatLng';\r\nimport { rad2deg, deg2rad } from '../constants';\r\n\r\nexport class LatLngCI extends LatLng {\r\n\t/**\r\n\t * represents lat lng as INT24 (CI grid projection)\r\n\t *\r\n\t * @constructor\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t};\r\n\r\n\t// /**\r\n\t//  * converts lat and lon to CI northings and eastings\r\n\t//  *\r\n\t//  * @returns GridCoordsCI\r\n\t//  */\r\n\t// to_os_coords() {\r\n\t// \tvar phi = this.lat * deg2rad; // convert latitude to radians\r\n\t// \tvar lam = this.lng * deg2rad; // convert longitude to radians\r\n\t// \tvar a = 6378388.000;      // OSI semi-major\r\n\t// \tvar b = 6356911.946;      // OSI semi-minor\r\n\t// \tvar e0 = 500000;          // OSI easting of false origin\r\n\t// \tvar n0 = 0;          // OSI northing of false origin\r\n\t// \tvar f0 = 0.9996;        // OSI scale factor on central meridian\r\n\t// \tvar e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n\t// \tvar lam0 = -0.0523598775598;   // OSI false east\r\n\t// \tvar phi0 = 0;    // OSI false north\r\n\t// \tvar af0 = a * f0;\r\n\t// \tvar bf0 = b * f0;\r\n\t//\r\n\t// \t// easting\r\n\t// \tvar slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t// \tvar nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t// \tvar rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t// \tvar eta2 = (nu / rho) - 1;\r\n\t// \tvar p = lam - lam0;\r\n\t// \tvar IV = nu * Math.cos(phi);\r\n\t// \tvar clat3 = Math.pow(Math.cos(phi), 3);\r\n\t// \tvar tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t// \tvar V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t// \tvar clat5 = Math.pow(Math.cos(phi), 5);\r\n\t// \tvar tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t// \tvar VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t// \tvar east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\t//\r\n\t// \t// northing\r\n\t// \tvar n = (af0 - bf0) / (af0 + bf0);\r\n\t// \tvar M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t// \tvar I = M + (n0);\r\n\t// \tvar II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t// \tvar III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t// \tvar IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t// \tvar north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\t//\r\n\t// \t\t//return {x: Math.round(east), y: Math.round(north)};\r\n\t// \treturn new GridCoordsCI(Math.round(east), Math.round(north));\r\n\t// };\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngCI}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\t\tconst phip = latLngWGS84.lat * deg2rad;\r\n\t\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\r\n\t\tconst CI_AXIS = 6378388.000;\r\n\t\tconst CI_ECCENTRIC = 0.0067226700223333;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\r\n\t\t/*\r\n\t\t * CI\r\n\t\t a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\t b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\t e0 = 500000;           // CI easting of false origin\r\n\t\t n0 = 0;                // CI northing of false origin\r\n\t\t f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\t e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\t lam0 = -0.0523598775598;  // CI false east\r\n\t\t phi0 = 0 * deg2rad;       // CI false north\r\n\t\t */\r\n\r\n\t\tconst height = 0;\r\n\t\tconst latlng = LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, CI_AXIS, CI_ECCENTRIC,\r\n\t\t\t83.901, 98.127, 118.635, 0, 0, 0, 0);\r\n\r\n\t\treturn new LatLngCI(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n\t};\r\n}\r\n","import { LatLng } from './LatLng';\r\nimport { LatLngWGS84 } from './LatLngWGS84';\r\n// import { GridCoordsIE } from '../GridCoords/GridCoordsIE';\r\nimport { deg2rad, rad2deg } from '../constants';\r\n\r\n//export const LatLngIE = /*@__PURE__*/(function() {\r\n/**\r\n * represents lat lng as Modified Airy (Irish grid projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nexport const LatLngIE = function(lat, lng) {\r\n  this.lat = lat;\r\n  this.lng = lng;\r\n};\r\n\r\n// /**\r\n//  * converts lat and lon (modified Airy) to OSI northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsIE}\r\n//  */\r\n// LatLngIE.prototype.to_os_coords = function() {\r\n//     //var deg2rad = Math.PI / 180;\r\n//     //var rad2deg = 180.0 / Math.PI;\r\n//\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377340.189;      // OSI semi-major\r\n//     var b = 6356034.447;      // OSI semi-minor\r\n//     var e0 = 200000;          // OSI easting of false origin\r\n//     var n0 = 250000;          // OSI northing of false origin\r\n//     var f0 = 1.000035;        // OSI scale factor on central meridian\r\n//     var e2 = 0.00667054015;   // OSI eccentricity squared\r\n//     var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n//     var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \t//return {x: Math.round(east), y: Math.round(north)};\r\n//\r\n// \t/*\r\n// \treturn (east > 0 && north > 0) ?\r\n// \t\tnew GridCoordsIE(Math.round(east), Math.round(north))\r\n// \t\t:\r\n// \t\tnull;\r\n// \t*/\r\n//    return new GridCoordsIE(Math.round(east), Math.round(north));\r\n// };\r\n\r\n/**\r\n * convert Irish projection to WGS84 (for Google Maps)\r\n * see http://www.carabus.co.uk/ll_ngr.html\r\n*/\r\nLatLngIE.prototype.to_WGS84 = function() {\r\n\tconst IRISH_AXIS = 6377340.189;\r\n\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\tconst WGS84_AXIS = 6378137;\r\n\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t/* \r\n\t * IE\r\n\ta = 6377340.189;      // OSI semi-major\r\n\tb = 6356034.447;      // OSI semi-minor\r\n\te0 = 200000;          // OSI easting of false origin\r\n\tn0 = 250000;          // OSI northing of false origin\r\n\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t*/\r\n\r\n\t//height = 0;\r\n\t\r\n\tconst latLngRadians = LatLng._transform(this.lat * deg2rad, this.lng * deg2rad, IRISH_AXIS, IRISH_ECCENTRIC, 0, WGS84_AXIS, WGS84_ECCENTRIC, \r\n\t\t   482.53, -130.596, 564.557, -1.042, -0.214, -0.631, -8.15);\r\n\t\t   \r\n\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n};\r\n\r\n/**\r\n * \r\n * @param {LatLngWGS84} latLngWGS84\r\n * @returns {LatLngIE}\r\n */\r\nLatLngIE.from_wgs84 = function (latLngWGS84) {\r\n\tconst phip = latLngWGS84.lat * deg2rad;\r\n\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\t\r\n\tconst IRISH_AXIS = 6377340.189;\r\n\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\t\r\n\tconst WGS84_AXIS = 6378137;\r\n\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t\t\r\n\t/*\r\n\t * IE\r\n\ta = 6377340.189;      // OSI semi-major\r\n    b = 6356034.447;      // OSI semi-minor\r\n    e0 = 200000;          // OSI easting of false origin\r\n    n0 = 250000;          // OSI northing of false origin\r\n    f0 = 1.000035;        // OSI scale factor on central meridian\r\n    e2 = 0.00667054015;   // OSI eccentricity squared\r\n    lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n    phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t */\r\n\t\r\n\tvar height = 0;\r\n\tvar latlng =  LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, IRISH_AXIS, IRISH_ECCENTRIC, \r\n\t\t\t   -482.53, 130.596, -564.557, 1.042, 0.214, 0.631, 8.15);\r\n\t \r\n\treturn new LatLngIE(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n};\r\n// return LatLngIE;\r\n// })();","import {LatLngGB} from '../LatLng/LatLngGB';\r\nimport {LatLngCI} from '../LatLng/LatLngCI';\r\nimport {LatLngIE} from '../LatLng/LatLngIE';\r\nimport {LatLngWGS84} from '../LatLng/LatLngWGS84';\r\n\r\n/**\r\n * abstract representation of a gridref co-ordinate pair\r\n * (*not a gridref string*)\r\n *\r\n */\r\nexport class GridCoords {\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tx;\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\ty;\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * tetrad letters ordered by easting then northing (steps of 2000m)\r\n\t * i.e. (x*4) + y\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n\t/**\r\n\t * tetrad letters ordered by northing then easting (steps of 2000m)\r\n\t * i.e. (y*5) + x\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLettersRowFirst = 'AFKQVBGLRWCHMSXDINTYEJPUZ';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t * @returns {GridCoords}\r\n\t */\r\n\tstatic from_latlng(lat, lng) {\r\n\t\t// test if GB\r\n\t\tif (lng >= -8.74 && lat > 49.88) {\r\n\t\t\t// lng extreme must accommodate St Kilda\r\n\r\n\t\t\tlet os = new LatLngGB.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\t\tif (os.x >= 0 && os.is_gb_hectad()) {\r\n\t\t\t\treturn os;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// test if Irish\r\n\t\tif (lng < -5.3 && lat > 51.34 && lng > -11 && lat < 55.73) {\r\n\t\t\tlet osI = new LatLngIE.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\t\tif (osI.x < 0 || osI.y < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn osI;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet osCi = new LatLngCI.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\r\n\t\t\tif (osCi.x >= 500000 && osCi.x < 600000 && osCi.y >= 5400000 && osCi.y < 5600000) {\r\n\t\t\t\treturn osCi;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null; //not a valid location\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t * @return {string} tetrad letter\r\n\t */\r\n\tstatic calculate_tetrad(easting, northing) {\r\n\t\treturn (easting >= 0 && northing >= 0) ?\r\n\t\t\tGridCoords.tetradLetters.charAt((Math.floor(easting % 10000 / 2000) * 5) + Math.floor(northing % 10000 / 2000)) :\r\n\t\t\t'';\r\n\t};\r\n\r\n\ttoString() {\r\n\t\treturn this.x + ',' + this.y;\r\n\t};\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} letters\r\n * @param {number} e metres\r\n * @param {number} n metres\r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nexport const _e_n_to_gr = function(letters, e, n, precision) {\r\n\tlet eString = ('00000' + Math.floor(e));\r\n\tlet nString = ('00000' + Math.floor(n));\r\n\r\n\tif (precision === 2000) {\r\n\t\treturn letters +\r\n\t\t\teString.charAt(eString.length-5) + nString.charAt(nString.length-5) +\r\n\t\t\tGridCoords.calculate_tetrad(e, n);\r\n\t} else if (precision === 100000) {\r\n\t\treturn letters;\r\n\t} else {\r\n\t\tif (precision === 5000) {\r\n\t\t\t// ignore quadrant and treat as hectad\r\n\t\t\tprecision = 10000;\r\n\t\t}\r\n\r\n\t\tlet logPrecision = Math.round(Math.log10(precision));\r\n\t\treturn letters +\r\n\t\t\t(logPrecision ?\r\n\t\t\t\t(eString.slice(-5,  -logPrecision) + nString.slice(-5,  -logPrecision))\r\n\t\t\t\t:\r\n\t\t\t\t(eString.slice(-5) + nString.slice(-5))\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngWGS84 } from '../LatLng/LatLngWGS84';\r\nimport { LatLng } from '../LatLng/LatLng';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport class GridCoordsCI extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsCI}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//nX = north;\r\n\t\t//ex = east;\r\n\r\n\t\tvar a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\tvar b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\tvar e0 = 500000;           // easting of false origin\r\n\t\tvar n0 = 0;                // northing of false origin\r\n\t\tvar f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\tvar e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\tvar lam0 = -0.0523598775598;  // INT24 ED50 false east\r\n\t\tvar phi0 = 0; //0 * deg2rad;    // INT24 ED50 false north\r\n\r\n\t\tvar af0 = a * f0;\r\n\t\tvar bf0 = b * f0;\r\n\t\tvar n = (af0 - bf0) / (af0 + bf0);\r\n\t\tvar Et = this.x - e0;\r\n\t\tvar phid = _initial_lat(this.y, n0, af0, phi0, n, bf0);\r\n\t\tvar nu = af0 / (Math.sqrt(1 - (e2 * (Math.sin(phid) * Math.sin(phid)))));\r\n\t\tvar rho = (nu * (1 - e2)) / (1 - (e2 * (Math.sin(phid)) * (Math.sin(phid))));\r\n\t\tvar eta2 = (nu / rho) - 1;\r\n\t\tvar tlat2 = Math.tan(phid) * Math.tan(phid);\r\n\t\tvar tlat4 = Math.pow(Math.tan(phid), 4);\r\n\t\tvar tlat6 = Math.pow(Math.tan(phid), 6);\r\n\t\tvar clatm1 = Math.pow(Math.cos(phid), -1);\r\n\t\tvar VII = Math.tan(phid) / (2 * rho * nu);\r\n\t\tvar VIII = (Math.tan(phid) / (24 * rho * (nu * nu * nu))) * (5 + (3 * tlat2) + eta2 - (9 * eta2 * tlat2));\r\n\t\tvar IX = ((Math.tan(phid)) / (720 * rho * Math.pow(nu, 5))) * (61 + (90 * tlat2) + (45 * tlat4));\r\n\t\tvar phip = (phid - ((Et * Et) * VII) + (Math.pow(Et, 4) * VIII) - (Math.pow(Et, 6) * IX));\r\n\t\tvar X = Math.pow(Math.cos(phid), -1) / nu;\r\n\t\tvar XI = (clatm1 / (6 * (nu * nu * nu))) * ((nu / rho) + (2 * (tlat2)));\r\n\t\tvar XII = (clatm1 / (120 * Math.pow(nu, 5))) * (5 + (28 * tlat2) + (24 * tlat4));\r\n\t\tvar XIIA = clatm1 / (5040 * Math.pow(nu, 7)) * (61 + (662 * tlat2) + (1320 * tlat4) + (720 * tlat6));\r\n\t\tvar lambdap = (lam0 + (Et * X) - ((Et * Et * Et) * XI) + (Math.pow(Et, 5) * XII) - (Math.pow(Et, 7) * XIIA));\r\n\r\n\t\t// var WGS84_AXIS = 6378137;\r\n\t\t// var WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t\t//\r\n\t\t// var INT24_AXIS = 6378388.000;\r\n\t\t// var INT24_ECCENTRIC = 0.0067226700223333;\r\n\t\t// var height = 10;  // dummy height\r\n\t\t// //var latLngRadians = LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n\r\n\t\tvar latLngRadians = convert_to_wgs(phip, lambdap);\r\n\t\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n\r\n\t\t//return (new LatLngCI(rad2deg * phip, rad2deg * lambdap)).to_WGS84()\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {String}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tif (this.y >= 5500000) {\r\n\t\t\treturn _e_n_to_gr('WA', this.x - 500000, this.y - 5500000, precision ? precision : 1);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn _e_n_to_gr('WV', this.x - 500000, this.y - 5400000, precision ? precision : 1);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {?string}\r\n\t */\r\n\tto_hectad() {\r\n\t\tif (this.y > 5500000) {\r\n\t\t\treturn 'WA' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn 'WV' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst convert_to_wgs = function(phip, lambdap) {\r\n\tvar WGS84_AXIS = 6378137;\r\n\tvar WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t//OSGB_AXIS = 6377563.396;\r\n\t//OSGB_ECCENTRIC = 0.0066705397616;\r\n\t//IRISH_AXIS = 6377340.189;\r\n\t//IRISH_ECCENTRIC = 0.00667054015;\r\n\tvar INT24_AXIS = 6378388.000;\r\n\tvar INT24_ECCENTRIC = 0.0067226700223333;\r\n\tvar height = 10;  // dummy height\r\n\treturn LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n};\r\n\r\nconst _initial_lat = function(north, n0, af0, phi0, n, bf0) {\r\n\tvar phi1 = ((north - n0) / af0) + phi0;\r\n\tvar M = LatLng._Marc(bf0, n, phi0, phi1);\r\n\tvar phi2 = ((north - n0 - M) / af0) + phi1;\r\n\tvar ind = 0;\r\n\twhile ((Math.abs(north - n0 - M) > 0.00001) && (ind < 20))  // max 20 iterations in case of error\r\n\t{\r\n\t\tind += 1;\r\n\t\tphi2 = ((north - n0 - M) / af0) + phi1;\r\n\t\tM = LatLng._Marc(bf0, n, phi0, phi2);\r\n\t\tphi1 = phi2;\r\n\t}\r\n\treturn phi2;\r\n};\r\n\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngGB } from '../LatLng/LatLngGB';\r\nimport { rad2deg } from '../constants';\r\n\r\n/**\r\n *\r\n */\r\nexport class GridCoordsGB extends GridCoords {\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic gbHectads = '';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {string}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(this.x / 100000);\r\n\t\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(this.y / 100000);\r\n\t\tvar firstLetter = '';\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\r\n\t\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\tvar secondLetter = String.fromCharCode(index);\r\n\r\n\t\treturn _e_n_to_gr(\r\n\t\t\tfirstLetter + secondLetter,\r\n\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\tprecision ? precision : 1\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @return {string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tvar hundredkmE = this.x / 100000 | 0; // Math.floor(easting / 100000);\r\n\t\tvar hundredkmN = this.y / 100000 | 0; // Math.floor(northing / 100000);\r\n\t\tvar firstLetter = \"\";\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\t\tvar index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn firstLetter +\r\n\t\t\tString.fromCharCode(index) + // secondLetter\r\n\t\t\t(((this.x - (100000 * hundredkmE)) / 10000) | 0) +\r\n\t\t\t(((this.y - (100000 * hundredkmN)) / 10000) | 0);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tis_gb_hectad() {\r\n\t\treturn GridCoordsGB.gbHectads.indexOf(this.to_hectad()) !== -1;\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//airy1830 = RefEll::airy1830(); //new RefEll(6377563.396, 6356256.909);\r\n\t\t//var OSGB_F0  = 0.9996012717;\r\n\t\t//var N0       = -100000.0;\r\n\t\tvar E0 = 400000.0;\r\n\t\tvar phi0 = 0.85521133347722; //deg2rad(49.0);\r\n\t\tvar lambda0 = -0.034906585039887; //deg2rad(-2.0);\r\n\t\tvar a = 6377563.396; // airy1830->maj;\r\n\t\t//var b        = 6356256.909; // airy1830->min;\r\n\t\tvar eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830->ecc;\r\n\t\t//var phi      = 0.0;\r\n\t\t//var lambda   = 0.0;\r\n\t\tvar E = this.x;\r\n\t\tvar N = this.y;\r\n\t\tvar n = 0.0016732203289875; //(a - b) / (a + b);\r\n\t\tvar M;\r\n\t\tvar phiPrime = ((N + 100000) / (a * 0.9996012717)) + phi0;\r\n\r\n\t\t// 15 / 8 === 1.875\r\n\t\t// 5 / 4 === 1.25\r\n\t\t// 21 / 8 === 2.625\r\n\r\n\t\tdo {\r\n\t\t\tM = N + 100000 - (\r\n\t\t\t\t6353722.489 // (b * OSGB_F0)\r\n\t\t\t\t* ((1.0016767257674 // * (((1 + n + (1.25 * n * n) + (1.25 * n * n * n))\r\n\t\t\t\t\t\t* (phiPrime - phi0))\r\n\t\t\t\t\t- (0.00502807228247412 // - (((3 * n) + (3 * n * n) + (2.625 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(phiPrime - phi0)\r\n\t\t\t\t\t\t* Math.cos(phiPrime + phi0))\r\n\t\t\t\t\t+ (((1.875 * n * n) + (1.875 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(2.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(2.0 * (phiPrime + phi0)))\r\n\t\t\t\t\t- (((35.0 / 24.0) * n * n * n)\r\n\t\t\t\t\t\t* Math.sin(3.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(3.0 * (phiPrime + phi0)))));\r\n\r\n\t\t\tphiPrime += M / 6375020.48098897; // (N - N0 - M) / (a * OSGB_F0);\r\n\t\t} while (M >= 0.001);\r\n\r\n\t\tvar sinphiPrime2 = Math.sin(phiPrime) * Math.sin(phiPrime);\r\n\t\tvar tanphiPrime2 = Math.tan(phiPrime) * Math.tan(phiPrime);\r\n\t\tvar secphiPrime = 1.0 / Math.cos(phiPrime);\r\n\r\n\t\tvar v = a * 0.9996012717 * Math.pow(1.0 - eSquared * sinphiPrime2, -0.5);\r\n\r\n\t\tvar rho =\r\n\t\t\ta\r\n\t\t\t* 0.9996012717\r\n\t\t\t* (1.0 - eSquared)\r\n\t\t\t* Math.pow(1.0 - eSquared * sinphiPrime2, -1.5);\r\n\t\tvar etaSquared = (v / rho) - 1.0;\r\n\t\tvar VII = Math.tan(phiPrime) / (2 * rho * v);\r\n\t\tvar VIII =\r\n\t\t\t(Math.tan(phiPrime) / (24.0 * rho * Math.pow(v, 3.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (3.0 * tanphiPrime2)\r\n\t\t\t\t+ etaSquared\r\n\t\t\t\t- (9.0 * tanphiPrime2 * etaSquared));\r\n\t\tvar IX =\r\n\t\t\t(Math.tan(phiPrime) / (720.0 * rho * Math.pow(v, 5.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (90.0 * tanphiPrime2)\r\n\t\t\t\t+ (45.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tvar X = secphiPrime / v;\r\n\t\tvar XI =\r\n\t\t\t(secphiPrime / (6.0 * v * v * v))\r\n\t\t\t* ((v / rho) + (2 * tanphiPrime2));\r\n\t\tvar XII =\r\n\t\t\t(secphiPrime / (120.0 * Math.pow(v, 5.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (28.0 * tanphiPrime2)\r\n\t\t\t\t+ (24.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tvar XIIA =\r\n\t\t\t(secphiPrime / (5040.0 * Math.pow(v, 7.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (662.0 * tanphiPrime2)\r\n\t\t\t\t+ (1320.0 * tanphiPrime2 * tanphiPrime2)\r\n\t\t\t\t+ (720.0\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2));\r\n\t\tvar phi =\r\n\t\t\tphiPrime\r\n\t\t\t- (VII * Math.pow(E - E0, 2.0))\r\n\t\t\t+ (VIII * Math.pow(E - E0, 4.0))\r\n\t\t\t- (IX * Math.pow(E - E0, 6.0));\r\n\t\tvar lambda =\r\n\t\t\tlambda0\r\n\t\t\t+ (X * (E - E0))\r\n\t\t\t- (XI * Math.pow(E - E0, 3.0))\r\n\t\t\t+ (XII * Math.pow(E - E0, 5.0))\r\n\t\t\t- (XIIA * Math.pow(E - E0, 7.0));\r\n\r\n\t\treturn (new LatLngGB(rad2deg * phi, rad2deg * lambda)).to_WGS84();\r\n\t}\r\n}\r\n\r\n\r\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsCI} from '../GridCoords/GridCoordsCI';\r\nimport {GridCoordsGB} from \"../GridCoords/GridCoordsGB\";\r\n\r\nexport class GridRefCI extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsCI}\r\n\t */\r\n\tGridCoords = GridCoordsCI;\r\n\r\n\t/**\r\n\t * @type {GridCoordsCI}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.parse_well_formed = this.from_string;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfrom_string(rawGridRef) {\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.\\/-]+/g, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet enl;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (/^(W[AV](?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\tif ((enl = GridRefCI.gridref_string_to_e_n_l(trimmedLocality))) {\r\n\t\t\t\tthis.length = enl.length;\r\n\r\n\t\t\t\tthis.gridCoords = new GridCoordsCI(enl.e, enl.n);\r\n\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'Grid reference format not understood (odd length).';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Channel Island grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param {string} gridRef plain string without tetrad or quadrant suffix\r\n\t * @return {(boolean|{e : number, n : number, length : number})}\r\n\t * returns false on error or object {'e' : easting, 'n' : northing, 'length' : length}\r\n\t */\r\n\tstatic gridref_string_to_e_n_l(gridRef) {\r\n\t\tlet northOffset, x, y, length;\r\n\r\n\t\t// assume modern alphabetical sheet ref\r\n\t\tlet chars = gridRef.substr(0, 2);\r\n\r\n\t\tif (chars === 'WA') {\r\n\t\t\tnorthOffset = 5500000;\r\n\t\t} else if (chars === 'WV') {\r\n\t\t\tnorthOffset = 5400000;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Bad Channel Island grid letters: '\" + chars + \"'\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet ref = gridRef.substr(2);\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tx = ref.charAt(0) * 10000;\r\n\t\t\t\ty = ref.charAt(1) * 10000;\r\n\t\t\t\tlength = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tx = ref.substr(0, 2) * 1000;\r\n\t\t\t\ty = ref.substr(2) * 1000;\r\n\t\t\t\tlength = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tx = ref.substr(0, 3) * 100;\r\n\t\t\t\ty = ref.substr(3) * 100;\r\n\t\t\t\tlength = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tx = ref.substr(0, 4) * 10;\r\n\t\t\t\ty = ref.substr(4) * 10;\r\n\t\t\t\tlength = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tx = parseInt(ref.substr(0, 5), 10);\r\n\t\t\t\ty = parseInt(ref.substr(5), 10);\r\n\t\t\t\tlength = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Bad length for Channel Island grid ref '\" + gridRef + \"'\");\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\te: (x + 500000),\r\n\t\t\tn: (y + northOffset),\r\n\t\t\tlength: length\r\n\t\t};\r\n\t}\r\n}\r\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsGB} from '../GridCoords/GridCoordsGB';\r\n\r\nexport class GridRefGB extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsGB}\r\n\t */\r\n\tGridCoords = GridCoordsGB;\r\n\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * gridref known to have correct syntax\r\n\t * may have tetrad or quadrant suffix\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tparse_well_formed(rawGridRef) {\r\n\r\n\t\tif (rawGridRef.length >= 5 && /^[A-Z]/.test(rawGridRef.charAt(4))) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(rawGridRef.substr(rawGridRef.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = rawGridRef.substr(rawGridRef.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tetradLetter = rawGridRef.charAt(4);\r\n\t\t\t}\r\n\r\n\t\t\trawGridRef = rawGridRef.substr(0, 4);\r\n\t\t}\r\n\r\n\t\t//this sets easting/northing, length and hectad\r\n\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(rawGridRef);\r\n\r\n\t\tif (this.tetradLetter || this.quadrantCode) {\r\n\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\tif (this.tetradLetter) {\r\n\t\t\t\tthis.preciseGridRef = this.tetrad = this.hectad + this.tetradLetter;\r\n\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[this.tetradLetter][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[this.tetradLetter][1];\r\n\t\t\t} else {\r\n\t\t\t\t// quadrant\r\n\t\t\t\tthis.preciseGridRef = this.quadrant = rawGridRef + this.quadrantCode;\r\n\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.preciseGridRef = rawGridRef;\r\n\r\n\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\tthis.set_tetrad();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfrom_string(rawGridRef) {\r\n\t\t// grid ref may not be in canonical format\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/g, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet ref;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.substr(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if all numeric gridref, e.g. 38517462 then\r\n\t\t// split with '/', i.e. 38/517462\r\n\t\tif (trimmedLocality === parseInt(trimmedLocality, 10).toString()) {\r\n\t\t\ttrimmedLocality = trimmedLocality.substr(0, 2) + '/' + trimmedLocality.substr(2);\r\n\t\t} else if (trimmedLocality.length > 3 && trimmedLocality.charAt(2) === '/' && /^[A-Z]{2}$/.test(trimmedLocality.substr(0, 2))) {\r\n\t\t\t// preprocess refs of form SD/59 to SD59\r\n\t\t\t// but at this stage want to retain old-style nn/nnnn gridrefs\r\n\t\t\ttrimmedLocality = trimmedLocality.replace('/', '');\r\n\t\t}\r\n\r\n\t\tif (trimmedLocality.substr(0, 2) === 'VC') {\r\n\t\t\t// special case error, VC number entered in the wrong field\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Misplaced vice-county code in grid-reference field. ('\" + trimmedLocality + \"')\";\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t} else if ((ref = trimmedLocality.match(/^([HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ](?:\\d\\d){1,5})$/)) !== null) {\r\n\t\t\ttrimmedLocality = ref[0]; //grid reference\r\n\r\n\t\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(trimmedLocality);\r\n\r\n\t\t\tif (this.length > 0) {\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'GB grid reference format not understood (strange length).';\r\n\t\t\t}\r\n\t\t} else if (/^([\\d]{2})\\/((?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\t// matching old-style nn/nnnn gridrefs\r\n\t\t\t// where second-part must have even-number of digits\r\n\r\n\t\t\tthis.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n\t\t\tswitch (this.length) {\r\n\t\t\t\tcase 10000:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.hectad = trimmedLocality;\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\ttrimmedLocality += tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else if (this.quadrantCode) {\r\n\t\t\t\t\t\ttrimmedLocality += this.quadrantCode;\r\n\t\t\t\t\t\tthis.quadrant = trimmedLocality;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1000:\r\n\t\t\t\tcase 100:\r\n\t\t\t\tcase 10:\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(this.length);\r\n\t\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.error = true;\r\n\t\t\t\t\tthis.errorMessage = 'Bad grid square dimension (' + this.length + ' m).';\r\n\t\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * sets easting, northing and length (in km)\r\n\t * source grid-reference need not be well-formed\r\n\t *\r\n\t * @param {string} gridRef either nn/nn... or aann...\r\n\t */\r\n\tparse_gr_string_without_tetrads(gridRef) {\r\n\t\tlet matches, x, y, ref;\r\n\r\n\t\tif ((matches = gridRef.match(/^(\\d{2})\\/((?:\\d\\d){1,5})$/)) !== null) {\r\n\r\n\t\t\t// old style numerical sheet ref XY/nnnnnn\r\n\t\t\t// nnnn part must have even length\r\n\r\n\t\t\t// northern scottish islands have eccentric numbering\r\n\t\t\tswitch (matches[1]) {\r\n\t\t\t\tcase '57':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '67':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '58':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '68':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '69':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1200000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tx = gridRef.charAt(0) * 100000;\r\n\t\t\t\t\ty = gridRef.charAt(1) * 100000;\r\n\t\t\t}\r\n\r\n\t\t\tref = matches[2];\r\n\t\t} else {\r\n\t\t\t// modern alphabetical sheet ref\r\n\t\t\tif (!GridRef.letterMapping.hasOwnProperty(gridRef.charAt(0)) || !GridRef.letterMapping.hasOwnProperty(gridRef.charAt(1))) {\r\n\t\t\t\t// invalid\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet char1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\t\tlet char2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\t\tref = gridRef.substr(2);\r\n\r\n\t\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\t\t}\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100) * 1000,\r\n\t\t\t\t\ty + (ref % 100) * 1000\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 1000) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 10000) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Bad grid ref length, ref=' + gridRef);\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthis.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * gridRef must be a correctly formed OS GB gridref\r\n\t *\r\n\t * sets self::gridCoords\r\n\t * sets self::length\r\n\t * sets self::hectad\r\n\t *\r\n\t * @param {string} gridRef modern alpha-numeric format with no suffixes\r\n\t * @throws Error\r\n\t */\r\n\tparse_wellformed_gb_gr_string_no_tetrads(gridRef) {\r\n\t\tlet char1, char2, ref, x, y;\r\n\r\n\t\t// modern alphabetical sheet refs only\r\n\t\tchar1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\tchar2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\tref = gridRef.substr(2);\r\n\r\n\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tthis.hectad = gridRef;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 100) * 1000),\r\n\t\t\t\t\ty + ((ref % 100) * 1000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(4, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 1000)) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(5, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 10000)) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(6, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tthis.hectad = gridRef.substr(0, 3) + gridRef.substr(7, 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthrow new Error(\"Bad grid ref length when parsing supposedly well-formed ref, ref='\" + gridRef + \"'\");\r\n\t\t}\r\n\t}\r\n}\r\n","import { GridCoords, _e_n_to_gr } from './GridCoords';\r\nimport { LatLngIE } from '../LatLng/LatLngIE';\r\nimport { rad2deg } from '../constants';\r\n\r\nexport class GridCoordsIE extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'IE';\r\n\r\n\t/**\r\n\t * @type {GridCoordsIE}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsIE}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\r\n\tstatic irishGrid = {\r\n\t\t0: ['V', 'Q', 'L', 'F', 'A'],\r\n\t\t1: ['W', 'R', 'M', 'G', 'B'],\r\n\t\t2: ['X', 'S', 'N', 'H', 'C'],\r\n\t\t3: ['Y', 'T', 'O', 'J', 'D']\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//converts OSI coords to lat/long.\r\n\r\n\t\t// modified from OSGBtoLL, Equations from USGS Bulletin 1532\r\n\t\t//East Longitudes are positive, West longitudes are negative.\r\n\t\t//North latitudes are positive, South latitudes are negative\r\n\t\t//Lat and Long are in decimal degrees.\r\n\t\t//Written by Chuck Gantz- chuck.gantz@globalstar.com\r\n\r\n\t\t// php transliteration by TH\r\n\r\n\t\t//OSIENorthing = this.y;\r\n\t\t//OSIEEasting = this.x;\r\n\r\n\t\t//constants\r\n\t\t//PI = 3.14159265;\r\n\t\t//FOURTHPI = M_PI / 4.0;\r\n\t\t//DEG2RAD = M_PI / 180.0;\r\n\t\t//RAD2DEG = 180.0 / M_PI;\r\n\t\t// ////////////////\r\n\r\n\t\tconst k0 = 1.000035; // scale factor\r\n\t\t//double a;\r\n\t\t//double eccPrimeSquared;\r\n\t\t//double N1, T1, C1, R1, D, M;\r\n\t\tconst LongOrigin = -8.0;\r\n\t\t//LatOrigin = 53.5;\r\n\t\t//LatOriginRad = LatOrigin * DEG2RAD;\r\n\r\n\t\t//UK\r\n\t\t//majoraxis=6377563.396; //Airy\r\n\t\t//a=6377563.396;\r\n\t\t//minoraxis = 6356256.91; //Airy\r\n\r\n\t\t//IE\r\n\t\t//majoraxis = 6377340.189; //Airy\r\n\t\tconst a = 6377340.189;\r\n\t\t//minoraxis = 6356034.447; //Airy\r\n\r\n\t\t//eccSquared = (majoraxis * majoraxis - minoraxis * minoraxis) / (majoraxis * majoraxis);\r\n\t\tconst eccSquared = 0.0066705402933363;\r\n\r\n\t\t//e1 = (1-Math.sqrt(1-eccSquared))/(1+Math.sqrt(1-eccSquared));\r\n\t\tconst e1 = 0.0016732203841521;\r\n\t\t//error_log(\"eccSquared={eccSquared} e1={e1}\");\r\n\r\n\t\t//only calculate M0 once since it is based on the origin of the OSGB projection, which is fixed\r\n\t\t//M0 = a*((1\t- eccSquared/4\t\t- 3*eccSquared*eccSquared/64\t- 5*eccSquared*eccSquared*eccSquared/256)*LatOriginRad\r\n\t\t//\t- (3*eccSquared/8\t+ 3*eccSquared*eccSquared/32\t+ 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(2*LatOriginRad)\r\n\t\t//\t+ (15*eccSquared*eccSquared/256 + 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(4*LatOriginRad)\r\n\t\t//\t- (35*eccSquared*eccSquared*eccSquared/3072)*Math.sin(6*LatOriginRad));\r\n\t\t//error_log(\"M0 = {M0}\");\r\n\t\tconst M0 = 5929615.3530033;\r\n\r\n\t\t//OSGBSquareToRefCoords(OSGBZone, RefEasting, RefNorthing); // Assume supplied MapInfo northing and easting take this into account\r\n\t\tconst x = this.x - 200000.0; //remove 400,000 meter false easting for longitude\r\n\t\tconst y = this.y - 250000.0; //remove 100,000 meter false easting for longitude\r\n\r\n\t\t//eccPrimeSquared = (eccSquared)/(1.0-eccSquared);\r\n\t\tconst eccPrimeSquared = 0.0067153352074207;\r\n\t\t//error_log(\"eccPrimeSquared={eccPrimeSquared}\");\r\n\r\n\t\tconst M = M0 + y / k0;\r\n\t\tconst mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\r\n\r\n\t\tconst phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu)\r\n\t\t\t+ (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu)\r\n\t\t\t+ (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\r\n\t\t//phi1 = phi1Rad*RAD2DEG;\r\n\r\n\t\tconst N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\r\n\t\tconst T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\r\n\t\tconst C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\r\n\t\tconst R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\r\n\t\tconst D = x / (N1 * k0);\r\n\r\n\t\tlet Lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24\r\n\t\t\t+ (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\r\n\t\tLat = Lat * rad2deg;\r\n\r\n\t\tlet Long = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1)\r\n\t\t\t* D * D * D * D * D / 120) / Math.cos(phi1Rad);\r\n\r\n\t\tLong = LongOrigin + Long * rad2deg;\r\n\r\n\t\t//return new LatLng(Lat, Long);\r\n\r\n\t\t//var ll = new LatLngIE(Lat, Long); // Irish projection (modified Airy)\r\n\t\t//ll.IE_to_WGS84(); // google earth uses WGS84\r\n\r\n\t\t//return ll;\r\n\r\n\t\treturn (new LatLngIE(Lat, Long)).to_WGS84();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {String}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tconst hundredkmE = Math.floor(this.x / 100000),\r\n\t\t\thundredkmN = Math.floor(this.y / 100000);\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\r\n\t\t\treturn _e_n_to_gr(GridCoordsIE.irishGrid[hundredkmE][hundredkmN],\r\n\t\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\t\tprecision ? precision : 1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @return {string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tconst hundredkmE = Math.floor(this.x / 100000), hundredkmN = Math.floor(this.y / 100000);\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\t\t\treturn (GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) + Math.floor((this.x % 100000) / 10000) + Math.floor((this.y % 100000) / 10000);\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n}\r\n","import {GridRef} from './GridRef';\r\nimport {GridCoordsIE} from '../GridCoords/GridCoordsIE';\r\n\r\nexport class GridRefIE extends GridRef {\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.parse_well_formed = this.from_string;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @type {string}\r\n   */\r\n  country = 'IE';\r\n\r\n  /**\r\n   *\r\n   * @type {typeof GridCoordsIE}\r\n   */\r\n  GridCoords = GridCoordsIE;\r\n\r\n  /**\r\n   * @type {GridCoordsIE}\r\n   */\r\n  gridCoords = null;\r\n\r\n  static gridLetter = {\r\n    A: [0, 4],\r\n    B: [1, 4],\r\n    C: [2, 4],\r\n    D: [3, 4],\r\n    F: [0, 3],\r\n    G: [1, 3],\r\n    H: [2, 3],\r\n    J: [3, 3],\r\n    L: [0, 2],\r\n    M: [1, 2],\r\n    N: [2, 2],\r\n    O: [3, 2],\r\n    Q: [0, 1],\r\n    R: [1, 1],\r\n    S: [2, 1],\r\n    T: [3, 1],\r\n    V: [0, 0],\r\n    W: [1, 0],\r\n    X: [2, 0],\r\n    Y: [3, 0]\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {string} rawGridRef\r\n   * @throws Error\r\n   */\r\n  from_string(rawGridRef) {\r\n    let trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/g, '').toUpperCase();\r\n\r\n    if (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n      // tetrad or quadrant\r\n\r\n      if (GridRefIE.quadrantOffsets.hasOwnProperty(trimmedLocality.substr(trimmedLocality.length - 2))) {\r\n        this.quadrantCode = trimmedLocality.substr(trimmedLocality.length - 2);\r\n        trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 2);\r\n      } else {\r\n        this.tetradLetter = trimmedLocality.substr(trimmedLocality.length - 1);\r\n        trimmedLocality = trimmedLocality.substr(0, trimmedLocality.length - 1);\r\n      }\r\n    }\r\n\r\n    this.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n    if (this.length > 0) {\r\n      if (this.tetradLetter || this.quadrantCode) {\r\n        // tetrad or quadrant suffix\r\n\r\n        if (this.tetradLetter) {\r\n          this.preciseGridRef = this.hectad + this.tetradLetter;\r\n          this.tetrad = this.preciseGridRef;\r\n          this.length = 2000; // 2km square\r\n          this.gridCoords.x += GridRefIE.tetradOffsets[this.tetradLetter][0];\r\n          this.gridCoords.y += GridRefIE.tetradOffsets[this.tetradLetter][1];\r\n        } else {\r\n          // quadrant\r\n          this.preciseGridRef = this.hectad + this.quadrantCode;\r\n          this.quadrant = this.preciseGridRef;\r\n          this.length = 5000; // 5km square\r\n          this.gridCoords.x += GridRefIE.quadrantOffsets[this.quadrantCode][0];\r\n          this.gridCoords.y += GridRefIE.quadrantOffsets[this.quadrantCode][1];\r\n        }\r\n      } else {\r\n        this.preciseGridRef = trimmedLocality;\r\n\r\n        if (this.length <= 1000) {\r\n          // calculate tetrad for precise gridref\r\n          this.set_tetrad();\r\n        }\r\n      }\r\n    } else {\r\n      this.error = true;\r\n      this.errorMessage = \"Irish grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n    }\r\n  }\r\n\r\n\r\n  static _IE_GRID_LETTERS = 'VQLFAWRMGBXSNHCYTOJD';\r\n\r\n  /**\r\n   *\r\n   * @param {string} gridRef nn/nnnn or [A-Z]nnnn or [A-Z]/nnnn (no other punctuation by this point), all upper-case\r\n   * @return boolean\r\n   */\r\n  parse_gr_string_without_tetrads(gridRef) {\r\n    let x, y, ref, char;\r\n\r\n    if (/^\\d{2}\\/(?:\\d\\d){1,5}$/.test(gridRef)) {\r\n      // nn/nnnn etc.\r\n      // regex used to avoid matching oddly malformed refs, such as \"32/SO763520\"\r\n\r\n      x = parseInt(gridRef.charAt(0), 10);\r\n      y = parseInt(gridRef.charAt(1), 10);\r\n\r\n      if (x > 3 || y > 4) {\r\n        console.log(\"bad grid square, ref='\" + gridRef + \"' (Ireland)\");\r\n        this.length = 0;\r\n        return false;\r\n      }\r\n\r\n      ref = gridRef.substr(3);\r\n      char = GridRefIE._IE_GRID_LETTERS.charAt((x * 5) + y);\r\n\r\n      x *= 100000;\r\n      y *= 100000;\r\n    } else {\r\n      // [A-Z]nnnn or [A-Z]/nnnn etc.\r\n      gridRef = gridRef.replace('/', '');\r\n\r\n      if (!/^[ABCDFGHJLMNOQRSTVWXY](?:\\d\\d){1,5}$/.test(gridRef)) {\r\n        this.length = 0;// mark error state\r\n        this.gridCoords = null;\r\n        return false;\r\n      }\r\n\r\n      if (gridRef) {\r\n        char = gridRef.charAt(0);\r\n        let p = GridRefIE._IE_GRID_LETTERS.indexOf(char);\r\n\r\n        if (p !== -1) {\r\n          x = Math.floor(p / 5) * 100000;\r\n          y = (p % 5) * 100000;\r\n        } else {\r\n          console.log(\"Bad grid ref grid-letter, ref='\" + gridRef + \"' (Ireland)\");\r\n          this.length = 0; // mark error\r\n          this.gridCoords = null;\r\n          return false;\r\n        }\r\n      } else {\r\n        console.log('Bad (empty) Irish grid ref');\r\n        this.length = 0; // mark error\r\n        this.gridCoords = null;\r\n        return false;\r\n      }\r\n\r\n      ref = gridRef.substr(1);\r\n    }\r\n\r\n    switch (ref.length) {\r\n      case 2:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + (ref.charAt(0) * 10000),\r\n            y + (ref.charAt(1) * 10000)\r\n        );\r\n        this.length = 10000; //10 km square\r\n        this.hectad = char + ref;\r\n        break;\r\n\r\n      case 4:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 100) * 1000,\r\n            y + (ref % 100) * 1000\r\n        );\r\n        this.length = 1000; //1 km square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(2);\r\n        break;\r\n\r\n      case 6:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 1000) * 100,\r\n            y + (ref % 1000) * 100\r\n        );\r\n        this.length = 100; // 100m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(3);\r\n        break;\r\n\r\n      case 8:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 10000) * 10,\r\n            y + (ref % 10000) * 10\r\n        );\r\n        this.length = 10; //10m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(4);\r\n        break;\r\n\r\n      case 10:\r\n        this.gridCoords = new GridCoordsIE(\r\n            x + Math.floor(ref / 100000),\r\n            y + (ref % 100000)\r\n        );\r\n        this.length = 1; //1m square\r\n        this.hectad = char + ref.charAt(0) + ref.charAt(5);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Bad grid ref length, ref='\" + gridRef + \"' (Ireland)\");\r\n        this.length = 0;\r\n        this.gridCoords = null;\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {GridRef} from './GridRef';\r\nimport {GridRefCI} from './GridRefCI';\r\nimport {GridRefGB} from './GridRefGB';\r\nimport {GridRefIE} from './GridRefIE';\r\n\r\n/**\r\n * returns a GridRef (GB, IE or CI-specific parser) or false\r\n * crudely tries to determine the country by trying each country in turn\r\n *\r\n * @param {string} rawGridRef\r\n * @return {(GridRef|boolean)}\r\n */\r\nGridRef.from_string = function(rawGridRef) {\r\n\tlet parser;\r\n\tlet cleanRef = rawGridRef.replace(/\\s+/g, '').toUpperCase();\r\n\r\n\tif (!cleanRef) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// if canonical ref form then be more efficient\r\n\tif (/^(?:[BCDFGHJLMNOQRSTVWXY]|[HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ]|W[VA])\\d{2}(?:[A-Z]|[NS][EW]|(?:\\d{2}){0,4})?$/.test(cleanRef)) {\r\n\t\t// have simple well-formed grid ref\r\n\r\n\t\tif (/^.\\d/.test(cleanRef)) {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t} else {\r\n\t\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\t\tparser = new GridRefCI();\r\n\t\t\t} else {\r\n\t\t\t\tparser = new GridRefGB();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparser.parse_well_formed(cleanRef);\r\n\r\n\t\treturn (parser.length && !parser.error) ? parser : false;\r\n\t} else {\r\n\t\tparser = new GridRefGB();\r\n\t\tparser.from_string(cleanRef);\r\n\r\n\t\tif (parser.length && !parser.error) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\tparser = new GridRefCI();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t\tparser.from_string(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexport {GridRef};\r\n","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngGB as latLngGB} from '../LatLng/LatLngGB';\r\nimport {GridCoordsGB as gridCoordsGB} from '../GridCoords/GridCoordsGB';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsGB = (function() {return gridCoordsGB})();\r\nexport const LatLngGB = (function() {\r\n    /**\r\n     * converts lat and lon (OSGB36) to OS northings and eastings\r\n     *\r\n     * @returns {GridCoordsGB}\r\n     */\r\n    latLngGB.prototype.to_os_coords = function() {\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6377563.396; // OSGB semi-major axis\r\n        var b = 6356256.91; // OSGB semi-minor axis\r\n        var e0 = 400000; // easting of false origin\r\n        var n0 = -100000; // northing of false origin\r\n        var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n        var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n        var lam0 = -0.034906585039886591; // OSGB false east\r\n        var phi0 = 0.85521133347722145; // OSGB false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        return new GridCoordsGB(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngGB\r\n})();","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngIE as latLngIE} from '../LatLng/LatLngIE';\r\nimport {GridCoordsIE as gridCoordsIE} from '../GridCoords/GridCoordsIE';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsIE = (function() {return gridCoordsIE})();\r\nexport const LatLngIE = (function() {\r\n    /**\r\n     * converts lat and lon (modified Airy) to OSI northings and eastings\r\n     *\r\n     * @returns {GridCoordsIE}\r\n     */\r\n    latLngIE.prototype.to_os_coords = function() {\r\n        //var deg2rad = Math.PI / 180;\r\n        //var rad2deg = 180.0 / Math.PI;\r\n\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6377340.189;      // OSI semi-major\r\n        var b = 6356034.447;      // OSI semi-minor\r\n        var e0 = 200000;          // OSI easting of false origin\r\n        var n0 = 250000;          // OSI northing of false origin\r\n        var f0 = 1.000035;        // OSI scale factor on central meridian\r\n        var e2 = 0.00667054015;   // OSI eccentricity squared\r\n        var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n        var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        //return {x: Math.round(east), y: Math.round(north)};\r\n\r\n        /*\r\n        return (east > 0 && north > 0) ?\r\n            new GridCoordsIE(Math.round(east), Math.round(north))\r\n            :\r\n            null;\r\n        */\r\n        return new GridCoordsIE(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngIE\r\n})();","//import {GridCoords as gridCoords} from '../GridCoords/GridCoords';\r\nimport {LatLngCI as latLngCI} from '../LatLng/LatLngCI';\r\nimport {GridCoordsCI as gridCoordsCI} from '../GridCoords/GridCoordsCI';\r\nimport {deg2rad} from \"../constants\";\r\nimport {LatLng} from \"../LatLng/LatLng\";\r\n\r\n//export const GridCoords = (function() {return gridCoords})();\r\nexport const GridCoordsCI = (function() {return gridCoordsCI})();\r\nexport const LatLngCI = (function() {\r\n    /**\r\n     * converts lat and lon to CI northings and eastings\r\n     *\r\n     * @returns GridCoordsCI\r\n     */\r\n    latLngCI.prototype.to_os_coords = function() {\r\n        var phi = this.lat * deg2rad; // convert latitude to radians\r\n        var lam = this.lng * deg2rad; // convert longitude to radians\r\n        var a = 6378388.000;      // OSI semi-major\r\n        var b = 6356911.946;      // OSI semi-minor\r\n        var e0 = 500000;          // OSI easting of false origin\r\n        var n0 = 0;          // OSI northing of false origin\r\n        var f0 = 0.9996;        // OSI scale factor on central meridian\r\n        var e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n        var lam0 = -0.0523598775598;   // OSI false east\r\n        var phi0 = 0;    // OSI false north\r\n        var af0 = a * f0;\r\n        var bf0 = b * f0;\r\n\r\n        // easting\r\n        var slat2 = Math.sin(phi) * Math.sin(phi);\r\n        var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n        var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n        var eta2 = (nu / rho) - 1;\r\n        var p = lam - lam0;\r\n        var IV = nu * Math.cos(phi);\r\n        var clat3 = Math.pow(Math.cos(phi), 3);\r\n        var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n        var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n        var clat5 = Math.pow(Math.cos(phi), 5);\r\n        var tlat4 = Math.pow(Math.tan(phi), 4);\r\n        var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n        var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n        // northing\r\n        var n = (af0 - bf0) / (af0 + bf0);\r\n        var M = LatLng._Marc(bf0, n, phi0, phi);\r\n        var I = M + (n0);\r\n        var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n        var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n        var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n        var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n        //return {x: Math.round(east), y: Math.round(north)};\r\n        return new GridCoordsCI(Math.round(east), Math.round(north));\r\n    };\r\n\r\n    return latLngCI\r\n})();"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","GridRef","tetradLetter","tetradLetters","substr","Math","floor","this","gridCoords","x","y","Error","preciseGridRef","tetrad","hectad","rawPrecision","minPrecision","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","_typeof","Symbol","iterator","_possibleConstructorReturn","call","assertThisInitialized","_getPrototypeOf","getPrototypeOf","E","J","P","U","Z","D","I","N","T","Y","C","H","M","S","X","B","G","L","R","W","A","F","K","Q","V","NW","NE","SW","SE","O","LatLngWGS84","lat","lng","deg2rad","PI","rad2deg","LatLngGB","to_WGS84","a","eSquared","phi","sinPhi","sin","lambda","v","sqrt","cos","z","s","rx","ry","xB","yB","zB","phiN","atan","sinPhiN","from_wgs84","latLngWGS84","radWGlat","radWGlon","e","e2","sf","xrot","yrot","zrot","hx","hy","hz","newLon","newLat","errvalue","lat0","abs","LatLng","lon","h","a2","xp","yp","zp","xr","yr","zr","bf0","n","phi0","LatLngCI","phip","lambdap","latlng","_transform","LatLngIE","latLngRadians","GridCoords","os","to_os_coords","is_gb_hectad","osI","osCi","easting","northing","charAt","_e_n_to_gr","letters","precision","eString","nString","calculate_tetrad","logPrecision","round","log10","slice","GridCoordsCI","f0","af0","Et","phid","_initial_lat","nu","rho","eta2","tlat2","tan","tlat4","pow","tlat6","clatm1","VII","VIII","IX","XI","XII","XIIA","convert_to_wgs","toString","substring","north","n0","phi1","_Marc","phi2","ind","GridCoordsGB","hundredkmE","hundredkmN","firstLetter","index","secondLetter","String","fromCharCode","gbHectads","indexOf","to_hectad","E0","phiPrime","sinphiPrime2","tanphiPrime2","secphiPrime","etaSquared","GridRefCI","parse_well_formed","_this","from_string","rawGridRef","enl","trimmedLocality","replace","toUpperCase","tetradCode","test","quadrantOffsets","hasOwnProperty","quadrantCode","gridref_string_to_e_n_l","to_gridref","tetradOffsets","quadrant","set_tetrad","error","errorMessage","gridRef","northOffset","chars","console","log","ref","parseInt","GridRefGB","parse_wellformed_gb_gr_string_no_tetrads","match","parse_gr_string_without_tetrads","matches","letterMapping","char1","char2","GridCoordsIE","k0","eccSquared","e1","eccPrimeSquared","mu","phi1Rad","N1","T1","C1","R1","Lat","Long","irishGrid","GridRefIE","char","_IE_GRID_LETTERS","parser","cleanRef","gridCoordsGB","latLngGB","lam","slat2","IV","clat3","clat5","VI","east","II","III","IIIA","gridCoordsIE","latLngIE","gridCoordsCI","latLngCI"],"mappings":"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"}